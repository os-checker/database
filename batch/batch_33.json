{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1739564882968,
        "finish": 1739564884648,
        "duration_ms": 1680,
        "git_time": "2025-02-10 09:20:46 +0800",
        "git_sha": "459f626aa565e67d76b55bfd0c7fb1ff273c7f1c"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "zcore-drivers"
      },
      {
        "user": "kern-crates",
        "repo": "zcore-kernel-hal"
      }
    ],
    "packages": [
      {
        "name": "zcore-drivers",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "zcore-drivers"
        }
      },
      {
        "name": "kernel-hal",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "zcore-kernel-hal"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 19,
      "duration_ms": 2878,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 15699,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 2,
      "duration_ms": 2878,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 3871,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 3051,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 238,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 1943,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2878,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 15699,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 2878,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3871,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 3051,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 1,
      "duration_ms": 130,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 17,
      "duration_ms": 9328,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 17305,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 9,
      "duration_ms": 9950,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 15615,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 5365,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 242,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 2112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 9328,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 17305,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 9950,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 15615,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 5365,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "src/bus/pci.rs",
      "kind": "Clippy(Error)",
      "raw": "error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: operator precedence can trip the unwary\n  --> src/nvme/interface.rs:71:19\n   |\n71 |         let aqa = (aqa_high_16 as u32) << 16 | aqa_low_16 as u32;\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `((aqa_high_16 as u32) << 16) | aqa_low_16 as u32`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n   = note: `#[deny(clippy::precedence)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/devicetree.rs",
      "kind": "Clippy(Error)",
      "raw": "error: operator precedence can trip the unwary\n   --> src/utils/devicetree.rs:125:17\n    |\n125 |         value = value << 32 | c as u64;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `(value << 32) | c as u64`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/input/mouse.rs",
      "kind": "Clippy(Error)",
      "raw": "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:38:18\n   |\n38 |         let dx = self.dx.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dx.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n   = note: `#[deny(clippy::manual_clamp)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/input/mouse.rs",
      "kind": "Clippy(Error)",
      "raw": "error: clamp-like pattern without using clamp function\n  --> src/input/mouse.rs:39:18\n   |\n39 |         let dy = self.dy.max(-127).min(127);\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with clamp: `self.dy.clamp(-127, 127)`\n   |\n   = note: clamp will panic if max < min\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_clamp\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/irq/x86_apic/ioapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/irq/x86_apic/ioapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/irq/x86_apic/ioapic.rs:185:14\n    |\n185 |         impl<'a> fmt::Debug for RedirTable<'a> {\n    |              ^^                            ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n    |\n185 -         impl<'a> fmt::Debug for RedirTable<'a> {\n185 +         impl fmt::Debug for RedirTable<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:108:46\n    |\n108 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeIdentify, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[deny(clippy::missing_transmute_annotations)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:174:46\n    |\n174 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateCq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:207:46\n    |\n207 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeCreateSq, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:268:46\n    |\n268 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/nvme/interface.rs",
      "kind": "Clippy(Error)",
      "raw": "error: transmute used without annotations\n   --> src/nvme/interface.rs:321:46\n    |\n321 |         let common_cmd = unsafe { core::mem::transmute(cmd) };\n    |                                              ^^^^^^^^^ help: consider adding missing annotations: `transmute::<nvme::interface::NvmeRWCommand, nvme::interface::NvmeCommonCommand>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:141:6\n    |\n141 | impl<'a> core::ops::Deref for FrameBuffer<'a> {\n    |      ^^                                   ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n141 - impl<'a> core::ops::Deref for FrameBuffer<'a> {\n141 + impl core::ops::Deref for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/scheme/display.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n   --> src/scheme/display.rs:148:6\n    |\n148 | impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n    |      ^^                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n148 - impl<'a> core::ops::DerefMut for FrameBuffer<'a> {\n148 + impl core::ops::DerefMut for FrameBuffer<'_> {\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/uart/buffered.rs",
      "kind": "Clippy(Error)",
      "raw": "error: length comparison to zero\n  --> src/uart/buffered.rs:47:12\n   |\n47 |         if self.buf.lock().len() > 0 {\n   |            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!self.buf.lock().is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[deny(clippy::len_zero)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/utils/devicetree.rs",
      "kind": "Clippy(Error)",
      "raw": "error: parameter is only used in recursion\n  --> src/utils/devicetree.rs:47:23\n   |\n47 |     fn walk_inner<F>(&self, node: &Node, props: InheritProps, device_node_op: &mut F)\n   |                       ^^^^\n   |\nnote: parameter used here\n  --> src/utils/devicetree.rs:64:13\n   |\n64 |             self.walk_inner(child, props, device_node_op);\n   |             ^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n   = note: `#[deny(clippy::only_used_in_recursion)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/irq/x86_apic/lapic.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=zcore-drivers, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-01-27 0:47:33.920157332 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building zcore-drivers v0.1.0 (current)\n       Built [  14.773s] (current)\n     Parsing zcore-drivers v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_33/kern-crates/zcore-drivers/target/semver-checks/local-zcore_drivers-0_1_0-d36e936b7f9bbf40/target/x86_64-unknown-linux-gnu/doc/zcore_drivers.json\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/bus/pci.rs",
      "kind": "Mirai",
      "raw": "error: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/irq/x86_apic/lapic.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=zcore-drivers, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 0:47:46.126458973 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nacpi      4.1.1    ---     5.1.0   Normal  cfg(target_arch = \"x86_64\")\nbitflags  1.3.2    ---     2.8.0   Normal  ---\nd1-pac    0.0.27   ---     0.0.32  Normal  ---\nriscv     0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsdl2      0.34.5   ---     0.37.0  Normal  cfg(not(target_os = \"none\"))\nvolatile  0.3.0    ---     0.6.1   Normal  ---\nx86_64    0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-01-27 0:47:15.338668863 +08:00:00\n   Compiling autocfg v1.4.0\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n    Checking bitflags v2.8.0\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.13\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n    Checking volatile v0.3.0\n    Checking bit v0.1.1\n    Checking managed v0.8.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking lazy_static v1.5.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking x2apic v0.4.3\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 16 previous errors\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:47:18.220451666 +08:00:00\n    Building zcore-drivers v0.1.0 (current)\n       Built [  14.773s] (current)\n     Parsing zcore-drivers v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_33/kern-crates/zcore-drivers/target/semver-checks/local-zcore_drivers-0_1_0-d36e936b7f9bbf40/target/x86_64-unknown-linux-gnu/doc/zcore_drivers.json\n"
    },
    {
      "cmd_idx": 11,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:47:34.043502223 +08:00:00\n    Checking bit_field v0.10.2\n   Compiling autocfg v1.4.0\n    Checking bitflags v1.3.2\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.8.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking x86_64 v0.14.13\n    Checking bit v0.1.1\n    Checking cfg-if v1.0.0\n    Checking managed v0.8.0\n    Checking volatile v0.3.0\n    Checking byteorder v1.5.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking acpi v4.1.1\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking lazy_static v1.5.0\n    Checking numeric-enum-macro v0.2.0\n    Checking x2apic v0.4.3\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking zcore-drivers v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-drivers)\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 12,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:47:36.923749886 +08:00:00\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling autocfg v1.4.0\n   Compiling log v0.4.25\n   Compiling rustversion v1.0.19\n   Compiling scopeguard v1.2.0\n[2025-01-26T16:47:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:47:37Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.8.0\n   Compiling paste v1.0.15\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n   Compiling spin v0.9.8\n   Compiling rsdp v2.0.1\n   Compiling x86_64 v0.14.13\n   Compiling byteorder v1.5.0\n   Compiling volatile v0.3.0\n   Compiling managed v0.8.0\n   Compiling cfg-if v1.0.0\n   Compiling bit v0.1.1\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n   Compiling acpi v4.1.1\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling lazy_static v1.5.0\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling x2apic v0.4.3\n   Compiling zcore-drivers v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-drivers)\nerror: unexpected `cfg` condition value: `board_malta`\n  --> src/bus/pci.rs:56:7\n   |\n56 | #[cfg(feature = \"board_malta\")]\n   |       ^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: expected values for `feature` are: `allwinner`, `async-std`, `board-qemu`, `d1-pac`, `fu740`, `graphic`, `loopback`, `mock`, `no-pci`, `rcore-console`, `sdl2`, `virtio`, and `virtio-drivers`\n   = help: consider adding `board_malta` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\nnote: the lint level is defined here\n  --> src/lib.rs:4:9\n   |\n4  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(unexpected_cfgs)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/irq/x86_apic/lapic.rs:16:9\n   |\n16 | /         LOCAL_APIC\n17 | |             .as_mut()\n   | |_____________________^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\n\nerror: could not compile `zcore-drivers` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 13,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=zcore-drivers, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-drivers\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:47:40.888904939 +08:00:00\n   Compiling autocfg v1.4.0\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling rustversion v1.0.19\n    Checking log v0.4.25\n    Checking scopeguard v1.2.0\n    Checking bitflags v2.8.0\n    Checking volatile v0.4.6\n   Compiling paste v1.0.15\n    Checking raw-cpuid v10.7.0\n   Compiling lock_api v0.4.12\n    Checking x86_64 v0.14.13\n    Checking spin v0.9.8\n    Checking rsdp v2.0.1\n    Checking cfg-if v1.0.0\n    Checking byteorder v1.5.0\n    Checking managed v0.8.0\n    Checking bit v0.1.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking volatile v0.3.0\n    Checking acpi v4.1.1\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator?rev=88e871a5#88e871a5)\n    Checking lazy_static v1.5.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n16:47:43|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/bare/arch/riscv/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_33/kern-crates/zcore-kernel-hal/src/bare/arch/riscv/trap.rs (original lines from 54 to 54)\n-        other => panic!(\"Undefined trap: {:x?} = {:#x}\\n{:#x?}\", other, scause.bits(), tf),\n+        other => panic!(\n+            \"Undefined trap: {:x?} = {:#x}\\n{:#x?}\",\n+            other,\n+            scause.bits(),\n+            tf\n+        ),\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/future.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usage of a legacy numeric method\n  --> src/common/future.rs:47:44\n   |\n47 |         if self.deadline.as_nanos() < i64::max_value() as u128 {\n   |                                            ^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n   = note: `#[deny(clippy::legacy_numeric_constants)]` implied by `#[deny(warnings)]`\nhelp: use the associated constant instead\n   |\n47 |         if self.deadline.as_nanos() < i64::MAX as u128 {\n   |                                            ~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: empty line after doc comment\n  --> src/common/ipi.rs:53:1\n   |\n53 | / ///\n54 | |\n   | |_^\n55 |   const TYPE_SHIFT: usize = 60;\n   |   ----------------------- the comment documents this constant\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_line_after_doc_comments\n   = note: `#[deny(clippy::empty_line_after_doc_comments)]` implied by `#[deny(warnings)]`\n   = help: if the empty line is unintentional remove it\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/utils/lazy_init.rs",
      "kind": "Clippy(Error)",
      "raw": "error: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/utils/lazy_init.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             inited: AtomicBool::new(false),\n20 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n21 | |         }\n22 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[deny(clippy::new_without_default)]` implied by `#[deny(warnings)]`\nhelp: try adding this\n   |\n16 + impl<T> Default for LazyInit<T> {\n17 +     fn default() -> Self {\n18 +         Self::new()\n19 +     }\n20 + }\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/utils/mpsc_queue.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/utils/mpsc_queue.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:17:13\n   |\n17 | unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[deny(clippy::needless_lifetimes)]` implied by `#[deny(warnings)]`\nhelp: elide the lifetimes\n   |\n17 - unsafe impl<'a, T: Copy> Sync for MpscQueue<'a, T> {}\n17 + unsafe impl<T: Copy> Sync for MpscQueue<'_, T> {}\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/utils/mpsc_queue.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/utils/mpsc_queue.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the following explicit lifetimes could be elided: 'a\n  --> src/utils/mpsc_queue.rs:19:13\n   |\n19 | unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n   |             ^^                              ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n19 - unsafe impl<'a, T: Copy> Send for MpscQueue<'a, T> {}\n19 + unsafe impl<T: Copy> Send for MpscQueue<'_, T> {}\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/libos/mem.rs",
      "kind": "Clippy(Error)",
      "raw": "error: a `Vec` of `Range` that is only one element\n  --> src/libos/mem.rs:35:13\n   |\n35 |             vec![PAGE_SIZE..PMEM_SIZE]\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_range_in_vec_init\n   = note: `#[deny(clippy::single_range_in_vec_init)]` implied by `#[deny(warnings)]`\nhelp: if you wanted a `Vec` that contains the entire range, try\n   |\n35 |             (PAGE_SIZE..PMEM_SIZE).collect::<std::vec::Vec<usize>>()\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/common/ipi.rs",
      "kind": "Clippy(Error)",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=kernel-hal, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-01-27 0:48:17.769768996 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-hal v0.1.0 (current)\n       Built [  16.485s] (current)\n     Parsing kernel-hal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_33/kern-crates/zcore-kernel-hal/target/semver-checks/local-kernel_hal-0_1_0-ffb67ca36497da81/target/x86_64-unknown-linux-gnu/doc/kernel_hal.json\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "error: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/common/ipi.rs",
      "kind": "Mirai",
      "raw": "error: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel-hal, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-27 0:48:51.454318786 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\nbitflags        1.3.2    ---     2.8.0   Normal  ---\ncortex-a        7.5.0    ---     8.1.1   Normal  cfg(target_arch = \"aarch64\")\nnix             0.23.2   ---     0.29.0  Normal  ---\nraw-cpuid       9.1.1    ---     11.3.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.7.0    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\ntrapframe       0.9.0    ---     0.10.0  Normal  ---\nuefi            0.16.1   ---     0.33.0  Normal  cfg(all(target_os = \"none\", target_arch = \"x86_64\"))\nx86             0.46.0   ---     0.52.0  Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-hal, checker=Clippy\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu  --no-deps\n// timestamp=2025-01-27 0:47:51.132902532 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n    Checking bitflags v2.8.0\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking bit_field v0.10.2\n    Checking futures-core v0.3.31\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking fastrand v2.3.0\n   Compiling libc v0.2.169\n    Checking futures-io v0.3.31\n   Compiling rustix v0.38.44\n   Compiling lock_api v0.4.12\n    Checking concurrent-queue v2.5.0\n   Compiling slab v0.4.9\n    Checking event-listener v5.4.0\n    Checking scopeguard v1.2.0\n    Checking linux-raw-sys v0.4.15\n   Compiling rustversion v1.0.19\n    Checking event-listener-strategy v0.5.3\n    Checking futures-lite v2.6.0\n   Compiling cfg-if v0.1.10\n   Compiling version-compare v0.0.10\n    Checking tracing-core v0.1.33\n   Compiling proc-macro2 v1.0.93\n    Checking tracing v0.1.41\n   Compiling sdl2-sys v0.34.5\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n   Compiling unicode-ident v1.0.15\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.13\n    Checking async-lock v3.4.0\n    Checking async-channel v2.3.1\n    Checking once_cell v1.20.2\n   Compiling paste v1.0.15\n    Checking blocking v1.6.1\n   Compiling quote v1.0.38\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking volatile v0.3.0\n    Checking event-listener v2.5.3\n   Compiling sdl2 v0.34.5\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.96\n    Checking lazy_static v1.5.0\n    Checking rsdp v2.0.1\n    Checking kv-log-macro v1.0.7\n    Checking byteorder v1.5.0\n    Checking bit v0.1.1\n    Checking managed v0.8.0\n    Checking pin-utils v0.1.0\n   Compiling trapframe v0.9.0\n   Compiling x86 v0.46.0\n    Checking memchr v2.7.4\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking polling v3.7.4\n    Checking async-io v2.4.0\n    Checking x2apic v0.4.3\n    Checking acpi v4.1.1\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking getrandom v0.2.15\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking numeric-enum-macro v0.2.0\n    Checking tempfile v3.15.0\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 15 previous errors\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-hal, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:48:00.463803306 +08:00:00\n    Building kernel-hal v0.1.0 (current)\n       Built [  16.485s] (current)\n     Parsing kernel-hal v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_33/kern-crates/zcore-kernel-hal/target/semver-checks/local-kernel_hal-0_1_0-ffb67ca36497da81/target/x86_64-unknown-linux-gnu/doc/kernel_hal.json\n"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-hal, checker=Mirai\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:48:17.951626776 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n    Checking bitflags v2.8.0\n    Checking parking v2.2.1\n    Checking value-bag v1.10.0\n    Checking futures-core v0.3.31\n    Checking bit_field v0.10.2\n    Checking log v0.4.25\n    Checking fastrand v2.3.0\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.169\n   Compiling rustix v0.38.44\n   Compiling lock_api v0.4.12\n    Checking concurrent-queue v2.5.0\n    Checking futures-io v0.3.31\n    Checking event-listener v5.4.0\n   Compiling slab v0.4.9\n    Checking scopeguard v1.2.0\n    Checking linux-raw-sys v0.4.15\n   Compiling rustversion v1.0.19\n    Checking event-listener-strategy v0.5.3\n    Checking futures-lite v2.6.0\n    Checking tracing-core v0.1.33\n   Compiling cfg-if v0.1.10\n   Compiling proc-macro2 v1.0.93\n   Compiling version-compare v0.0.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking async-task v4.7.1\n   Compiling unicode-ident v1.0.15\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n    Checking piper v0.2.4\n    Checking x86_64 v0.14.13\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n    Checking once_cell v1.20.2\n   Compiling paste v1.0.15\n    Checking blocking v1.6.1\n   Compiling quote v1.0.38\n    Checking async-executor v1.13.1\n   Compiling memoffset v0.6.5\n    Checking event-listener v2.5.3\n    Checking volatile v0.3.0\n   Compiling sdl2 v0.34.5\n    Checking async-channel v1.9.0\n   Compiling syn v2.0.96\n    Checking lazy_static v1.5.0\n    Checking kv-log-macro v1.0.7\n    Checking rsdp v2.0.1\n   Compiling trapframe v0.9.0\n    Checking managed v0.8.0\n   Compiling x86 v0.46.0\n    Checking memchr v2.7.4\n    Checking byteorder v1.5.0\n    Checking bit v0.1.1\n    Checking pin-utils v0.1.0\n    Checking x2apic v0.4.3\n    Checking polling v3.7.4\n    Checking smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n    Checking acpi v4.1.1\n    Checking async-io v2.4.0\n    Checking async-global-executor v2.4.1\n    Checking async-std v1.13.0\n    Checking isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n    Checking virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n    Checking lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n    Checking getrandom v0.2.15\n    Checking pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n    Checking numeric-enum-macro v0.2.0\n    Checking device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n    Checking tempfile v3.15.0\n    Checking nix v0.23.2\n    Checking zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling git-version-macro v0.3.9\n    Checking git-version v0.3.9\n    Checking kernel-hal v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-kernel-hal)\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
    },
    {
      "cmd_idx": 26,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-hal, checker=Lockbud\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:48:27.904552525 +08:00:00\n Downloading crates ...\n  Downloaded async-channel v1.9.0\n  Downloaded kv-log-macro v1.0.7\n  Downloaded cfg-if v0.1.10\n  Downloaded tempfile v3.15.0\n  Downloaded version-compare v0.0.10\n  Downloaded async-global-executor v2.4.1\n  Downloaded memoffset v0.6.5\n  Downloaded async-std v1.13.0\n  Downloaded event-listener v2.5.3\n  Downloaded sdl2 v0.34.5\n  Downloaded nix v0.23.2\n  Downloaded sdl2-sys v0.34.5\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.21\n   Compiling pin-project-lite v0.2.16\n   Compiling bitflags v1.3.2\n   Compiling bitflags v2.8.0\n   Compiling parking v2.2.1\n   Compiling value-bag v1.10.0\n   Compiling fastrand v2.3.0\n   Compiling log v0.4.25\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling lock_api v0.4.12\n[2025-01-26T16:48:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling concurrent-queue v2.5.0\n   Compiling rustix v0.38.44\n   Compiling libc v0.2.169\n   Compiling event-listener v5.4.0\n   Compiling futures-io v0.3.31\n   Compiling event-listener-strategy v0.5.3\n   Compiling slab v0.4.9\n   Compiling scopeguard v1.2.0\n   Compiling rustversion v1.0.19\n   Compiling linux-raw-sys v0.4.15\n   Compiling futures-lite v2.6.0\n   Compiling proc-macro2 v1.0.93\n   Compiling cfg-if v0.1.10\n   Compiling version-compare v0.0.10\n   Compiling tracing-core v0.1.33\n   Compiling sdl2-sys v0.34.5\n   Compiling tracing v0.1.41\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling volatile v0.4.6\n   Compiling atomic-waker v1.1.2\n   Compiling async-task v4.7.1\n   Compiling unicode-ident v1.0.15\n   Compiling x86_64 v0.14.13\n   Compiling piper v0.2.4\n   Compiling async-lock v3.4.0\n   Compiling async-channel v2.3.1\n   Compiling once_cell v1.20.2\n[2025-01-26T16:48:32Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-01-26T16:48:32Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling paste v1.0.15\n   Compiling blocking v1.6.1\n   Compiling quote v1.0.38\n[2025-01-26T16:48:33Z WARN  lockbud::callbacks] [\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:18: 264:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:254:25: 254:51 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:265:21: 265:25 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:9: 289:30 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:54: 264:59 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"DoubleLock\": {\n          \"bug_kind\": \"DoubleLock\",\n          \"possibility\": \"Probably\",\n          \"diagnosis\": {\n            \"first_lock_type\": \"StdMutex(Inner)\",\n            \"first_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n            \"second_lock_type\": \"StdMutex(Inner)\",\n            \"second_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:240:13: 240:22 (#0)\",\n            \"callchains\": [\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:561:17: 561:71 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/sys/backtrace.rs:154:18: 154:21 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ],\n              [\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:17: 248:38 (#0)\"\n                ],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:326:30: 328:49 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:400:18: 400:41 (#0)\"\n                ],\n                [\n                  \"/rustc/7442931d49b199ad0a1cc0f8ca54e327b5139b66/library/std/src/thread/mod.rs:467:32: 467:62 (#0)\"\n                ],\n                [],\n                [\n                  \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:328:32: 328:48 (#0)\"\n                ]\n              ]\n            ]\n          },\n          \"explanation\": \"The first lock is not released when acquiring the second lock\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:288:9: 288:31 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:284:13: 284:22 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      },\n      {\n        \"CondvarDeadlock\": {\n          \"bug_kind\": \"Deadlock before Condvar::wait and notify\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"condvar_wait_type\": \"std::sync::Condvar::wait\",\n            \"condvar_wait_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:264:31: 264:69 (#0)\",\n            \"condvar_notify_type\": \"std::sync::Condvar::notify\",\n            \"condvar_notify_callsite_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:319:13: 319:35 (#0)\",\n            \"deadlocks\": [\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\"\n              },\n              {\n                \"wait_lock_type\": \"StdMutex(Inner)\",\n                \"wait_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:248:32: 248:37 (#0)\",\n                \"notify_lock_type\": \"StdMutex(Inner)\",\n                \"notify_lock_span\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/blocking-1.6.1/src/lib.rs:289:24: 289:29 (#0)\"\n              }\n            ]\n          },\n          \"explanation\": \"The same lock before Condvar::wait and notify\"\n        }\n      }\n    ]\n[2025-01-26T16:48:33Z WARN  lockbud::callbacks] crate blocking contains bugs: { probably: 4, possibly: 4 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 2 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-executor v1.13.1\n   Compiling memoffset v0.6.5\n   Compiling volatile v0.3.0\n[2025-01-26T16:48:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:33Z WARN  lockbud::callbacks] crate async_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling sdl2 v0.34.5\n   Compiling event-listener v2.5.3\n   Compiling async-channel v1.9.0\n   Compiling syn v2.0.96\n   Compiling lazy_static v1.5.0\n   Compiling rsdp v2.0.1\n   Compiling kv-log-macro v1.0.7\n   Compiling byteorder v1.5.0\n   Compiling managed v0.8.0\n   Compiling trapframe v0.9.0\n   Compiling bit v0.1.1\n   Compiling memchr v2.7.4\n   Compiling x86 v0.46.0\n   Compiling polling v3.7.4\n   Compiling async-io v2.4.0\n   Compiling pin-utils v0.1.0\n   Compiling x2apic v0.4.3\n[2025-01-26T16:48:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:35Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-global-executor v2.4.1\n   Compiling smoltcp v0.8.0 (https://github.com/smoltcp-rs/smoltcp?rev=35e833e3#35e833e3)\n[2025-01-26T16:48:36Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:36Z WARN  lockbud::callbacks] crate async_global_executor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 3 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling async-std v1.13.0\n   Compiling acpi v4.1.1\n[2025-01-26T16:48:38Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:858:6: 858:6 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:850:58: 850:67 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/video.rs:854:13: 854:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:93:27: 93:41 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/hint.rs:111:1: 111:2 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:432:39: 432:61 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/joystick.rs:438:5: 438:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:285:41: 285:55 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:289:13: 289:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:210:39: 210:51 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/controller.rs:214:13: 214:14 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:520:37: 520:52 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/sdl2-0.34.5/src/sdl2/keyboard/keycode.rs:527:17: 527:18 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-01-26T16:48:38Z WARN  lockbud::callbacks] crate sdl2 contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 7 }\n   Compiling virtio-drivers v0.1.0 (https://github.com/rcore-os/virtio-drivers?rev=2aaf7d6#2aaf7d60)\n   Compiling isomorphic_drivers v0.1.0 (https://github.com/rcore-os/isomorphic_drivers?rev=f7cd97a8#f7cd97a8)\n   Compiling lock v0.1.0 (https://github.com/DeathWish5/kernel-sync?rev=8486b8#8486b817)\n   Compiling getrandom v0.2.15\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a5#88e871a5)\n   Compiling pci v0.0.1 (https://github.com/elliott10/pci-rs?rev=8f33774b#8f33774b)\n[2025-01-26T16:48:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:40Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling numeric-enum-macro v0.2.0\n   Compiling device_tree v1.0.3 (https://github.com/rcore-os/device_tree-rs?rev=2f2e55f#2f2e55fb)\n   Compiling tempfile v3.15.0\n   Compiling zcore-drivers v0.1.0 (https://github.com/kern-crates/zcore-drivers.git?rev=91c574e0#91c574e0)\n   Compiling nix v0.23.2\n[2025-01-26T16:48:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"file::imp::unix::persist\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.15.0/src/file/imp/unix.rs:125:17: 125:36 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tempfile-3.15.0/src/file/imp/unix.rs:128:42: 128:68 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-01-26T16:48:40Z WARN  lockbud::callbacks] crate tempfile contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling git-version-macro v0.3.9\n   Compiling git-version v0.3.9\n[2025-01-26T16:48:42Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:874:50: 874:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:877:9: 877:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:865:50: 865:58 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/sys/termios.rs:868:9: 868:10 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2724:21: 2724:24 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Escape to Param/Return: Raw ptr _0 at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2706:25: 2706:29 (#0) escapes to [_0] but pointee is dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2712:65: 2712:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2725:23: 2725:28 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2719:9: 2752:10 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nix-0.23.2/src/unistd.rs:2716:65: 2716:66 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2025-01-26T16:48:42Z WARN  lockbud::callbacks] crate nix contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 8 }\n   Compiling kernel-hal v0.1.0 (/home/runner/check/batch_33/kern-crates/zcore-kernel-hal)\nerror: private item shadows public glob re-export\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\n   |\nnote: the name `config` in the type namespace is supposed to be publicly re-exported here\n  --> src/lib.rs:49:5\n   |\n49 |     *,\n   |     ^\nnote: but the private item here shadows it\n  --> src/lib.rs:25:1\n   |\n25 | mod config;\n   | ^^^^^^^^^^^\nnote: the lint level is defined here\n  --> src/lib.rs:9:9\n   |\n9  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(hidden_glob_reexports)]` implied by `#[deny(warnings)]`\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:20:30\n   |\n20 |         IRQueue::new(unsafe {&mut IPI_REASON0} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\n   = note: `#[deny(static_mut_refs)]` implied by `#[deny(warnings)]`\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n20 |         IRQueue::new(unsafe {&raw mut IPI_REASON0} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:21:30\n   |\n21 |         IRQueue::new(unsafe {&mut IPI_REASON1} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n21 |         IRQueue::new(unsafe {&raw mut IPI_REASON1} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:22:30\n   |\n22 |         IRQueue::new(unsafe {&mut IPI_REASON2} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n22 |         IRQueue::new(unsafe {&raw mut IPI_REASON2} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:23:30\n   |\n23 |         IRQueue::new(unsafe {&mut IPI_REASON3} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n23 |         IRQueue::new(unsafe {&raw mut IPI_REASON3} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:24:30\n   |\n24 |         IRQueue::new(unsafe {&mut IPI_REASON4} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n24 |         IRQueue::new(unsafe {&raw mut IPI_REASON4} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:25:30\n   |\n25 |         IRQueue::new(unsafe {&mut IPI_REASON5} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n25 |         IRQueue::new(unsafe {&raw mut IPI_REASON5} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:26:30\n   |\n26 |         IRQueue::new(unsafe {&mut IPI_REASON6} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n26 |         IRQueue::new(unsafe {&raw mut IPI_REASON6} ),\n   |                              ~~~~~~~~\n\nerror: creating a mutable reference to mutable static is discouraged\n  --> src/common/ipi.rs:27:30\n   |\n27 |         IRQueue::new(unsafe {&mut IPI_REASON7} ),\n   |                              ^^^^^^^^^^^^^^^^ mutable reference to mutable static\n   |\n   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2024/static-mut-references.html>\n   = note: mutable references to mutable statics are dangerous; it's undefined behavior if any other pointer to the static is used or if any other reference is created for the static while the mutable reference lives\nhelp: use `&raw mut` instead to create a raw pointer\n   |\n27 |         IRQueue::new(unsafe {&raw mut IPI_REASON7} ),\n   |                              ~~~~~~~~\n\nerror: could not compile `kernel-hal` (lib) due to 9 previous errors\n"
    },
    {
      "cmd_idx": 27,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-hal, checker=Rapx\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_33/kern-crates/zcore-kernel-hal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \n// timestamp=2025-01-27 0:48:43.731373325 +08:00:00\n   Compiling autocfg v1.4.0\n   Compiling crossbeam-utils v0.8.21\n    Checking pin-project-lite v0.2.16\n    Checking bitflags v1.3.2\n    Checking parking v2.2.1\n    Checking bitflags v2.8.0\n    Checking value-bag v1.10.0\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n    Checking fastrand v2.3.0\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.12\n   Compiling libc v0.2.169\n    Checking concurrent-queue v2.5.0\n    Checking futures-io v0.3.31\n   Compiling rustix v0.38.44\n    Checking event-listener v5.4.0\n   Compiling slab v0.4.9\n    Checking event-listener-strategy v0.5.3\n   Compiling rustversion v1.0.19\n    Checking linux-raw-sys v0.4.15\n    Checking scopeguard v1.2.0\n    Checking futures-lite v2.6.0\n   Compiling version-compare v0.0.10\n   Compiling proc-macro2 v1.0.93\n    Checking tracing-core v0.1.33\n   Compiling cfg-if v0.1.10\n   Compiling sdl2-sys v0.34.5\n    Checking tracing v0.1.41\n    Checking spin v0.9.8\n    Checking raw-cpuid v10.7.0\n    Checking async-task v4.7.1\n    Checking atomic-waker v1.1.2\n    Checking volatile v0.4.6\n   Compiling unicode-ident v1.0.15\n    Checking x86_64 v0.14.13\n    Checking piper v0.2.4\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking async-channel v2.3.1\n    Checking async-lock v3.4.0\n    Checking once_cell v1.20.2\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n16:48:49|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}