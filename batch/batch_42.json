{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1739997130327,
        "finish": 1739997131246,
        "duration_ms": 919,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "os-module",
        "repo": "syscall-table"
      },
      {
        "user": "os-module",
        "repo": "tracer"
      }
    ],
    "packages": [
      {
        "name": "syscall-table",
        "repo": {
          "repo_idx": 0,
          "user": "os-module",
          "repo": "syscall-table"
        }
      },
      {
        "name": "systable-macro-derive",
        "repo": {
          "repo_idx": 0,
          "user": "os-module",
          "repo": "syscall-table"
        }
      },
      {
        "name": "tracer",
        "repo": {
          "repo_idx": 1,
          "user": "os-module",
          "repo": "tracer"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 6,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 8,
      "duration_ms": 3744,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 4048,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 4163,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 5077,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 4710,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 253,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 364,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 78,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4048,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 1,
      "duration_ms": 2123,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 50,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 4631,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 2566,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 168,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 75,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 2,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 5,
      "duration_ms": 1288,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 1560,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 3,
      "duration_ms": 1457,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 1767,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 1825,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 232,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 73,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1560,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/examples/test.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/examples/test.rs (original lines from 85 to 85)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/examples/test.rs (original lines from 100 to 100)\n-    assert_eq!(r,3);\n+    assert_eq!(r, 3);\n"
    },
    {
      "cmd_idx": 0,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/examples/test.rs (original lines from 108 to 108)\n-    assert_eq!(res,1)\n+    assert_eq!(res, 1)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/src/lib.rs (original lines from 133 to 133)\n-impl ToIsize for (){\n+impl ToIsize for () {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_41/os-module/syscall-table/src/lib.rs (original lines from 149 to 149)\n-impl<T:ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n+impl<T: ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `test`\n  --> src/lib.rs:39:17\n   |\n39 | #![cfg_attr(not(feature = \"test\"), no_std)]\n   |                 ^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `test` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `crate` references the macro call's crate\n   --> src/lib.rs:421:13\n    |\n421 |             crate::paste!{\n    |             ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n    = note: `#[warn(clippy::crate_in_macro_def)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `crate` references the macro call's crate\n   --> src/lib.rs:448:17\n    |\n448 |             use crate::{iter,ServiceWrapper,ToUsize};\n    |                 ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to one\n   --> src/lib.rs:227:12\n    |\n227 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to one\n   --> src/lib.rs:238:12\n    |\n238 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src/lib.rs:299:14\n    |\n299 |     service: Box<dyn Fn(&[usize]) -> isize>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n    = note: `#[warn(clippy::type_complexity)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `Table`\n   --> src/lib.rs:337:5\n    |\n337 | /     pub const fn new() -> Self {\n338 | |         Self {\n339 | |             map: BTreeMap::new(),\n340 | |         }\n341 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n335 + impl Default for Table {\n336 +     fn default() -> Self {\n337 +         Self::new()\n338 +     }\n339 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/lib.rs:398:5\n    |\n397 |     let handler = SysCallHandler::new(func);\n    |     ---------------------------------------- unnecessary `let` binding\n398 |     handler\n    |     ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n397 ~     \n398 ~     SysCallHandler::new(func)\n    |\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=syscall-table, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_41/os-module/syscall-table\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:42:59.454979352 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building syscall-table v0.1.0 (current)\n       Built [   3.747s] (current)\n     Parsing syscall-table v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_41/os-module/syscall-table/target/semver-checks/local-syscall_table-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/syscall_table.json\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unexpected `cfg` condition value: `test`\n  --> src/lib.rs:39:17\n   |\n39 | #![cfg_attr(not(feature = \"test\"), no_std)]\n   |                 ^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `test` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=syscall-table, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_41/os-module/syscall-table\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 21:42:55.406622587 +08:00:00\n    Building syscall-table v0.1.0 (current)\n       Built [   3.747s] (current)\n     Parsing syscall-table v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_41/os-module/syscall-table/target/semver-checks/local-syscall_table-0_1_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/syscall_table.json\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/lib.rs:53:5\n   |\n52 |     let stream = TokenStream::from(expanded);\n   |     ----------------------------------------- unnecessary `let` binding\n53 |     stream\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n52 ~     \n53 ~     TokenStream::from(expanded)\n   |\n\n"
    },
    {
      "cmd_idx": 18,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_42/os-module/tracer/src/dwarf/unwinder.rs (original lines from 2 to 2)\n+use crate::utils::read_value;\n"
    },
    {
      "cmd_idx": 18,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_42/os-module/tracer/src/dwarf/unwinder.rs (original lines from 13 to 13)\n-use crate::utils::read_value;\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/compiler.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/compiler.rs:97:5\n    |\n97  | /     return match opcode {\n98  | |         0b0100011 => {\n99  | |             // 四字节的sd指令\n100 | |             let func = ins.get_bits(12..=14);\n...   |\n139 | |     };\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n97  ~     match opcode {\n98  +         0b0100011 => {\n99  ~             // 四字节的sd指令\n100 +             let func = ins.get_bits(12..=14);\n101 +             if func != 0b011 {\n102 +                 return None;\n103 +             }\n104 +             let rd = ins.get_bits(15..=19); // sp\n105 +             let rt = ins.get_bits(20..=24); // ra\n106 +             if rd != 2 || rt != 1 {\n107 +                 return None;\n108 +             }\n109 +             let mut imm = 0u32;\n110 +             imm.set_bits(0..=4, ins.get_bits(7..=11));\n111 +             imm.set_bits(5..=11, ins.get_bits(25..=31));\n112 +             for i in 12..32 {\n113 +                 imm.set_bit(i, imm.get_bit(11));\n114 +             }\n115 +             let imm = imm as isize;\n116 +             if imm > 0 {\n117 +                 Some(imm as u32)\n118 +             } else {\n119 +                 None\n120 +             }\n121 +         }\n122 +         _ => {\n123 ~             // 2字节的sd指令\n124 +             // c.sdsp\n125 +             // 111 [uimm5:3 8:6] rt 10\n126 +             let short_ins = ins.get_bits(0..16);\n127 +             let high = short_ins.get_bits(13..16);\n128 +             let low = short_ins.get_bits(0..2);\n129 +             match (high, low) {\n130 +                 (0b111, 0b10) => {\n131 +                     let mut imm = 0u32;\n132 +                     imm.set_bits(3..6, short_ins.get_bits(10..13));\n133 +                     imm.set_bits(6..9, short_ins.get_bits(7..10));\n134 +                     Some(imm)\n135 +                 }\n136 +                 (_, _) => None,\n137 +             }\n138 +         }\n139 ~     }\n    |\n\n"
    },
    {
      "cmd_idx": 19,
      "file": "src/compiler.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/compiler.rs:253:17\n    |\n253 | /                 match ins {\n254 | |                     InstructionSp::Addi(x) => {\n255 | |                         stack_size += x;\n...   |\n258 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n253 ~                 if let InstructionSp::Addi(x) = ins {\n254 +                     stack_size += x;\n255 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 20,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=tracer, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_42/os-module/tracer\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:27:59.730566479 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building tracer v0.2.0 (current)\n       Built [   1.316s] (current)\n     Parsing tracer v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_42/os-module/tracer/target/semver-checks/local-tracer-0_2_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/tracer.json\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Mirai",
      "raw": "warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Mirai",
      "raw": "warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"
    },
    {
      "cmd_idx": 23,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rapx",
      "raw": "pkg=tracer, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_42/os-module/tracer\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 21:28:04.892177316 +08:00:00\n\nwarning: Memory Leak detected.\n   --> src/dwarf/unwinder.rs:128:19\n    |\n118 |   fn new<T: DwarfProvider>(provider: &T) -> Self {\n119 |           let hdr = provider.kernel_eh_frame_hdr();\n120 |           let hdr_len = provider.kernel_eh_frame_hdr_end() - hdr;\n121 |           let eh_frame = provider.kernel_eh_frame();\n122 |           let eh_frame_len = provider.kernel_eh_frame_end() - eh_frame;\n123 |           trace!(\"hdr: {:#x?}, len: {}\", hdr, hdr_len);\n124 |           trace!(\"eh_frame: {:#x?}, len: {}\", eh_frame, eh_frame_len);\n125 |           let mut base_addrs = BaseAddresses::default();\n126 |           base_addrs = base_addrs.set_eh_frame_hdr(hdr as u64);\n127 |\n128 |           let hdr = Box::leak(Box::new(\n    |  ___________________-\n129 | |             EhFrameHdr::new(\n130 | |                 // TODO: remove Box\n131 | |                 unsafe { slice::from_raw_parts(hdr as *const u8, hdr_len) },\n132 | |                 LittleEndian,\n133 | |             )\n134 | |             .parse(&base_addrs, size_of::<usize>() as u8)\n135 | |             .unwrap(),\n136 | |         ));\n    | |__________- Memory Leak Candidates.\n137 |           base_addrs = base_addrs.set_eh_frame(eh_frame as u64);\n138 |           let eh_frame = EhFrame::new(\n139 |               unsafe { slice::from_raw_parts(eh_frame as *const u8, eh_frame_len) },\n140 |               LittleEndian,\n141 |           );\n142 |           Self {\n143 |               base_addrs,\n144 |               hdr,\n145 |               hdr_table: hdr.table().unwrap(),\n146 |               eh_frame,\n147 |           }\n148 |       }\n    |\nOver visited: DefId(0:41 ~ tracer[2aa6]::compiler::{impl#3}::next)\nOver visited: DefId(0:134 ~ tracer[2aa6]::dwarf::unwinder::{impl#5}::next)\n"
    },
    {
      "cmd_idx": 25,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=tracer, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_42/os-module/tracer\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:28:05.375955119 +08:00:00\n\nName   Project  Compat  Latest  Kind    Platform\n----   -------  ------  ------  ----    --------\ngimli  0.26.2   ---     0.31.1  Normal  ---\n"
    },
    {
      "cmd_idx": 27,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=tracer, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_42/os-module/tracer\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 21:27:58.170079315 +08:00:00\n    Building tracer v0.2.0 (current)\n       Built [   1.316s] (current)\n     Parsing tracer v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_42/os-module/tracer/target/semver-checks/local-tracer-0_2_0-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/tracer.json\n"
    }
  ]
}