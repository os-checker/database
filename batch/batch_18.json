{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (1bc403daa 2024-10-11)",
          "commit_hash": "1bc403daadbebb553ccc211a0a8eebb73989665f",
          "commit_date": "2024-10-11",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-12-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1732970356337,
        "finish": 1732970359414,
        "duration_ms": 3077,
        "git_time": "2024-11-30 20:34:47 +0800",
        "git_sha": "3dfa0794a72493b432b16b6fd2a922c61aed40e9"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "ratio"
      },
      {
        "user": "shilei-massclouds",
        "repo": "run_queue"
      },
      {
        "user": "shilei-massclouds",
        "repo": "rust_fatfs"
      },
      {
        "user": "shilei-massclouds",
        "repo": "signal"
      },
      {
        "user": "shilei-massclouds",
        "repo": "spinbase"
      },
      {
        "user": "shilei-massclouds",
        "repo": "spinpreempt"
      },
      {
        "user": "shilei-massclouds",
        "repo": "sys"
      },
      {
        "user": "shilei-massclouds",
        "repo": "task"
      }
    ],
    "packages": [
      {
        "name": "ratio",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "ratio"
        }
      },
      {
        "name": "rt_run_queue",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "run_queue"
        }
      },
      {
        "name": "run_queue",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "run_queue"
        }
      },
      {
        "name": "rust_fatfs",
        "repo": {
          "repo_idx": 2,
          "user": "shilei-massclouds",
          "repo": "rust_fatfs"
        }
      },
      {
        "name": "signal",
        "repo": {
          "repo_idx": 3,
          "user": "shilei-massclouds",
          "repo": "signal"
        }
      },
      {
        "name": "spinbase",
        "repo": {
          "repo_idx": 4,
          "user": "shilei-massclouds",
          "repo": "spinbase"
        }
      },
      {
        "name": "spinpreempt",
        "repo": {
          "repo_idx": 5,
          "user": "shilei-massclouds",
          "repo": "spinpreempt"
        }
      },
      {
        "name": "sys",
        "repo": {
          "repo_idx": 6,
          "user": "shilei-massclouds",
          "repo": "sys"
        }
      },
      {
        "name": "rt_task",
        "repo": {
          "repo_idx": 7,
          "user": "shilei-massclouds",
          "repo": "task"
        }
      },
      {
        "name": "task",
        "repo": {
          "repo_idx": 7,
          "user": "shilei-massclouds",
          "repo": "task"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p ratio -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 169,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1553,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 363,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 37,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 79,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p rt_run_queue -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p rt_run_queue -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p rt_run_queue -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 839,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4207,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 839,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4207,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p run_queue -- --emit=json",
      "count": 12,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p run_queue -- --emit=json",
      "count": 12,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p run_queue -- --emit=json",
      "count": 12,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 4812,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 4736,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4843,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 132,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 257,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 295,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 38,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 38,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4843,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4736,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 257,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4812,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 132,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 295,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p rust_fatfs -- --emit=json",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 18,
      "duration_ms": 1081,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 2327,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 194,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 746,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 5454,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 2327,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p signal -- --emit=json",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 7261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 17093,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8572,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 6636,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 41,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 171,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 17093,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8572,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 6636,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p spinbase -- --emit=json",
      "count": 1,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 216,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 836,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 149,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 537,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 38,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 81,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 836,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p spinpreempt -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 7416,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 5404,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8535,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 6990,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 253,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 129,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7416,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 5404,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8535,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 6990,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p sys -- --emit=json",
      "count": 28,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 7226,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 16883,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8927,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 6197,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 40,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 172,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7226,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 16883,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8927,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 6197,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p rt_task -- --emit=json",
      "count": 4,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 7603,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9284,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 7874,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 7534,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 166,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7603,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 9284,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7874,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 7534,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu fmt -p task -- --emit=json",
      "count": 21,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 7383,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 12056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 8980,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M",
      "count": 0,
      "duration_ms": 7005,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 39,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 164,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7383,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 12056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8980,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 7005,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-11",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 15,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:26:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 16,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:27:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 17,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:27:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/rt_run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.1\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling syn v1.0.109\n   Compiling syn v2.0.89\n   Compiling toml_edit v0.19.15\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.14\n   Compiling const-default v1.0.0\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling bit_field v0.10.2\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling static_assertions v1.1.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init.git#3cee00cf)\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/rt_run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cfg-if v1.0.0\n   Compiling bit_field v0.10.2\n   Compiling nb v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling static_assertions v1.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling sbi-spec v0.0.4\n   Compiling log v0.4.22\n   Compiling critical-section v1.2.0\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v2.6.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling svgbobdoc v0.3.0\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init.git#3cee00cf)\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/rt_run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none\n   Compiling bit_field v0.10.2\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling bitflags v2.6.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling bitflags v1.3.2\n   Compiling volatile v0.4.6\n   Compiling raw-cpuid v10.7.0\n   Compiling log v0.4.22\n   Compiling paste v1.0.15\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.52.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling bit v0.1.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling raw-cpuid v11.2.0\n   Compiling x86_64 v0.14.12\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling const-default v1.0.0\n   Compiling static_assertions v1.1.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init.git#3cee00cf)\n   Compiling rlsf v0.2.1\n   Compiling bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 3 to 3)\n+use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 5 to 6)\n-use taskctx::CtxRef;\n-use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 8 to 8)\n-use taskctx::{Tid, SchedInfo};\n+use taskctx::CtxRef;\n+use taskctx::{SchedInfo, Tid};\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 42 to 42)\n-    F: FnOnce() + 'static\n+    F: FnOnce() + 'static,\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 53 to 53)\n-    sched_info.thread.get_mut().init(task_entry as usize, sp.into(), 0.into());\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 55 to 55)\n+        .thread\n+        .get_mut()\n+        .init(task_entry as usize, sp.into(), 0.into());\n+    sched_info\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 77 to 77)\n-        unsafe { (*ctid_ptr) = ctx.tid(); }\n+        unsafe {\n+            (*ctid_ptr) = ctx.tid();\n+        }\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 5 to 5)\n-use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 7 to 7)\n+use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 58 to 58)\n-        if self.scheduler.task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone()))) {\n+        if self\n+            .scheduler\n+            .task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone())))\n+        {\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 177 to 179)\n-        let next = self.scheduler.pick_next_task().unwrap_or_else(|| {\n-            self.idle.clone()\n-        });\n+        let next = self\n+            .scheduler\n+            .pick_next_task()\n+            .unwrap_or_else(|| self.idle.clone());\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 184 to 184)\n-        debug!(\"============ context switch: {} -> {}\", prev_task.tid(), next_task.tid());\n+        debug!(\n+            \"============ context switch: {} -> {}\",\n+            prev_task.tid(),\n+            next_task.tid()\n+        );\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 3 to 3)\n+use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 5 to 6)\n-use taskctx::CtxRef;\n-use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 8 to 8)\n-use taskctx::{Tid, SchedInfo};\n+use taskctx::CtxRef;\n+use taskctx::{SchedInfo, Tid};\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 42 to 42)\n-    F: FnOnce() + 'static\n+    F: FnOnce() + 'static,\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 53 to 53)\n-    sched_info.thread.get_mut().init(task_entry as usize, sp.into(), 0.into());\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 55 to 55)\n+        .thread\n+        .get_mut()\n+        .init(task_entry as usize, sp.into(), 0.into());\n+    sched_info\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 77 to 77)\n-        unsafe { (*ctid_ptr) = ctx.tid(); }\n+        unsafe {\n+            (*ctid_ptr) = ctx.tid();\n+        }\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 5 to 5)\n-use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 7 to 7)\n+use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 58 to 58)\n-        if self.scheduler.task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone()))) {\n+        if self\n+            .scheduler\n+            .task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone())))\n+        {\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 177 to 179)\n-        let next = self.scheduler.pick_next_task().unwrap_or_else(|| {\n-            self.idle.clone()\n-        });\n+        let next = self\n+            .scheduler\n+            .pick_next_task()\n+            .unwrap_or_else(|| self.idle.clone());\n"
    },
    {
      "cmd_idx": 25,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 184 to 184)\n-        debug!(\"============ context switch: {} -> {}\", prev_task.tid(), next_task.tid());\n+        debug!(\n+            \"============ context switch: {} -> {}\",\n+            prev_task.tid(),\n+            next_task.tid()\n+        );\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 3 to 3)\n+use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 5 to 6)\n-use taskctx::CtxRef;\n-use crate::run_queue::RUN_QUEUE;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 8 to 8)\n-use taskctx::{Tid, SchedInfo};\n+use taskctx::CtxRef;\n+use taskctx::{SchedInfo, Tid};\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 42 to 42)\n-    F: FnOnce() + 'static\n+    F: FnOnce() + 'static,\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 53 to 53)\n-    sched_info.thread.get_mut().init(task_entry as usize, sp.into(), 0.into());\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 55 to 55)\n+        .thread\n+        .get_mut()\n+        .init(task_entry as usize, sp.into(), 0.into());\n+    sched_info\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/lib.rs (original lines from 77 to 77)\n-        unsafe { (*ctid_ptr) = ctx.tid(); }\n+        unsafe {\n+            (*ctid_ptr) = ctx.tid();\n+        }\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 5 to 5)\n-use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 7 to 7)\n+use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 58 to 58)\n-        if self.scheduler.task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone()))) {\n+        if self\n+            .scheduler\n+            .task_tick(&Arc::new(SchedItem::new(curr.as_ctx_ref().clone())))\n+        {\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 177 to 179)\n-        let next = self.scheduler.pick_next_task().unwrap_or_else(|| {\n-            self.idle.clone()\n-        });\n+        let next = self\n+            .scheduler\n+            .pick_next_task()\n+            .unwrap_or_else(|| self.idle.clone());\n"
    },
    {
      "cmd_idx": 26,
      "file": "src/run_queue.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue/src/run_queue.rs (original lines from 184 to 184)\n-        debug!(\"============ context switch: {} -> {}\", prev_task.tid(), next_task.tid());\n+        debug!(\n+            \"============ context switch: {} -> {}\",\n+            prev_task.tid(),\n+            next_task.tid()\n+        );\n"
    },
    {
      "cmd_idx": 30,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=run_queue, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n\n\nstdout:\n\nstderr:\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 31,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=run_queue, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n\n\nstdout:\n\nstderr:\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 32,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=run_queue, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n\n\nstdout:\n\nstderr:\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 33,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:27:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 34,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:26:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 35,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-22T10:27:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 39,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target x86_64-unknown-none --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"pic\"\ntarget_abi=\"\"\ntarget_arch=\"x86_64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"fxsr\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 40,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target aarch64-unknown-none-softfloat --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"softfloat\"\ntarget_arch=\"aarch64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_has_atomic\ntarget_has_atomic=\"128\"\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"128\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"128\"\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 41,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:26:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling rlsf v0.2.1\n   Compiling scheduler v0.1.0 (ssh://git@github.com/shilei-massclouds/scheduler.git#fd785ca6)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 42,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n     Parsing run_queue v0.1.0 (current)\nerror: running cargo-doc on crate run_queue failed with output:\n-----\nerror: output of --print=file-names missing when learning about target-specific information from rustc\ncommand was: `/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu/bin/rustc - --crate-name ___ --print=file-names --cap-lints=allow --target riscv64gc-unknown-none-elf --crate-type bin --crate-type rlib --crate-type dylib --crate-type cdylib --crate-type staticlib --crate-type proc-macro --print=sysroot --print=split-debuginfo --print=crate-name --print=cfg`\n\n--- stdout\n___\nlib___.rlib\nlib___.a\n/home/runner/.rustup/toolchains/nightly-2024-10-12-x86_64-unknown-linux-gnu\noff\n___\ndebug_assertions\nfmt_debug=\"full\"\noverflow_checks\npanic=\"abort\"\nproc_macro\nrelocation_model=\"static\"\ntarget_abi=\"\"\ntarget_arch=\"riscv64\"\ntarget_endian=\"little\"\ntarget_env=\"\"\ntarget_feature=\"a\"\ntarget_feature=\"c\"\ntarget_feature=\"d\"\ntarget_feature=\"f\"\ntarget_feature=\"m\"\ntarget_has_atomic\ntarget_has_atomic=\"16\"\ntarget_has_atomic=\"32\"\ntarget_has_atomic=\"64\"\ntarget_has_atomic=\"8\"\ntarget_has_atomic=\"ptr\"\ntarget_has_atomic_equal_alignment=\"16\"\ntarget_has_atomic_equal_alignment=\"32\"\ntarget_has_atomic_equal_alignment=\"64\"\ntarget_has_atomic_equal_alignment=\"8\"\ntarget_has_atomic_equal_alignment=\"ptr\"\ntarget_has_atomic_load_store\ntarget_has_atomic_load_store=\"16\"\ntarget_has_atomic_load_store=\"32\"\ntarget_has_atomic_load_store=\"64\"\ntarget_has_atomic_load_store=\"8\"\ntarget_has_atomic_load_store=\"ptr\"\ntarget_os=\"none\"\ntarget_pointer_width=\"64\"\ntarget_vendor=\"unknown\"\nub_checks\n\n\n-----\n\nerror: failed to build rustdoc for crate run_queue v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/run_queue/run_queue --no-default-features --features default,preempt,sched_cfs &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate run_queue v0.1.0\n"
    },
    {
      "cmd_idx": 43,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target riscv64gc-unknown-none-elf\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling const-default v1.0.0\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=run_queue, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_14/shilei-massclouds/run_queue/run_queue\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-none\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-22T10:27:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling x2apic v0.4.3\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling allocator v0.1.0 (ssh://git@github.com/shilei-massclouds/allocator#d93ad046)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: importing legacy numeric constants\n --> src/boot_sector.rs:2:5\n  |\n2 | use core::u16;\n  |     ^^^^^^^^^\n  |\n  = help: remove this import\n  = note: then `u16::<CONST>` will resolve to the respective associated constant\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n  = note: `#[warn(clippy::legacy_numeric_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: importing legacy numeric constants\n --> src/boot_sector.rs:3:5\n  |\n3 | use core::u8;\n  |     ^^^^^^^^\n  |\n  = help: remove this import\n  = note: then `u8::<CONST>` will resolve to the respective associated constant\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:366:9\n    |\n366 |         (root_dir_bytes + u32::from(self.bytes_per_sector) - 1) / u32::from(self.bytes_per_sector)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `root_dir_bytes.div_ceil(u32::from(self.bytes_per_sector))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n    = note: `#[warn(clippy::manual_div_ceil)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:402:9\n    |\n402 |         ((bytes + cluster_size - 1) / cluster_size) as u32\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `bytes.div_ceil(cluster_size)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:575:27\n    |\n575 |     let sectors_per_fat = (t1 + t2 - 1) / t2;\n    |                           ^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `t1.div_ceil(t2)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/boot_sector.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/boot_sector.rs:633:9\n    |\n633 |         (root_dir_bytes + u32::from(bytes_per_sector) - 1) / u32::from(bytes_per_sector)\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `root_dir_bytes.div_ceil(u32::from(bytes_per_sector))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/dir.rs:739:37\n    |\n739 | const MAX_LONG_DIR_ENTRIES: usize = (MAX_LONG_NAME_LEN + LFN_PART_LEN - 1) / LFN_PART_LEN;\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `MAX_LONG_NAME_LEN.div_ceil(LFN_PART_LEN)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `div_ceil`\n   --> src/dir.rs:955:27\n    |\n955 |         let num_entries = (name_utf16.len() + LFN_PART_LEN - 1) / LFN_PART_LEN;\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.div_ceil()`: `name_utf16.len().div_ceil(LFN_PART_LEN)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_div_ceil\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/dir_entry.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching over `()` is more explicit\n   --> src/dir_entry.rs:390:16\n    |\n390 |             Ok(_) => {}\n    |                ^ help: use `()` instead of `_`: `()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ignored_unit_patterns\nnote: the lint level is defined here\n   --> src/lib.rs:49:9\n    |\n49  | #![warn(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[warn(clippy::ignored_unit_patterns)]` implied by `#[warn(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of a legacy numeric constant\n  --> src/file.rs:10:28\n   |\n10 | const MAX_FILE_SIZE: u32 = core::u32::MAX;\n   |                            ^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\nhelp: use the associated constant instead\n   |\n10 | const MAX_FILE_SIZE: u32 = u32::MAX;\n   |                            ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this could be rewritten as `let...else`\n  --> src/file.rs:95:9\n   |\n95 | /         let mut bytes_left = match self.size() {\n96 | |             Some(s) => s,\n97 | |             None => return None.into_iter().flatten(),\n98 | |         };\n   | |__________^ help: consider writing: `let Some(mut bytes_left) = self.size() else { return None.into_iter().flatten() };`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n   = note: `#[warn(clippy::manual_let_else)]` implied by `#[warn(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this could be rewritten as `let...else`\n   --> src/file.rs:99:9\n    |\n99  | /         let first = match self.first_cluster {\n100 | |             Some(f) => f,\n101 | |             None => return None.into_iter().flatten(),\n102 | |         };\n    | |__________^ help: consider writing: `let Some(first) = self.first_cluster else { return None.into_iter().flatten() };`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this could be rewritten as `let...else`\n   --> src/file.rs:280:9\n    |\n280 | /         let current_cluster = match current_cluster_opt {\n281 | |             Some(n) => n,\n282 | |             None => return Ok(0),\n283 | |         };\n    | |__________^ help: consider writing: `let Some(current_cluster) = current_cluster_opt else { return Ok(0) };`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this could be rewritten as `let...else`\n   --> src/file.rs:424:9\n    |\n424 | /         let mut new_offset = if let Some(new_offset) = new_offset_opt {\n425 | |             new_offset\n426 | |         } else {\n427 | |             error!(\"Invalid seek offset\");\n428 | |             return Err(Error::InvalidInput);\n429 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_let_else\nhelp: consider writing\n    |\n424 ~         let Some(mut new_offset) = new_offset_opt else {\n425 +             error!(\"Invalid seek offset\");\n426 +             return Err(Error::InvalidInput);\n427 +         };\n    |\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/fs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: importing legacy numeric constants\n  --> src/fs.rs:10:5\n   |\n10 | use core::u32;\n   |     ^^^^^^^^^\n   |\n   = help: remove this import\n   = note: then `u32::<CONST>` will resolve to the respective associated constant\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#legacy_numeric_constants\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/fs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `is_power_of_two`\n   --> src/fs.rs:966:13\n    |\n966 |             bytes_per_cluster.count_ones() == 1 && bytes_per_cluster >= 512,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.is_power_of_two()`: `bytes_per_cluster.is_power_of_two()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_power_of_two\n    = note: `#[warn(clippy::manual_is_power_of_two)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/fs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manually reimplementing `is_power_of_two`\n   --> src/fs.rs:996:13\n    |\n996 |             bytes_per_sector.count_ones() == 1 && bytes_per_sector >= 512,\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.is_power_of_two()`: `bytes_per_sector.is_power_of_two()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_is_power_of_two\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "src/io.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: item in documentation is missing backticks\n  --> src/io.rs:31:55\n   |\n31 |     /// (e. g. being close to end-of-file) or because read() was interrupted by a signal.\n   |                                                       ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_markdown\n   = note: `#[warn(clippy::doc_markdown)]` implied by `#[warn(clippy::pedantic)]`\nhelp: try\n   |\n31 |     /// (e. g. being close to end-of-file) or because `read()` was interrupted by a signal.\n   |                                                       ~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 47,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=rust_fatfs, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/rust_fatfs/rust_fatfs\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing rust_fatfs v0.4.0 (current)\n      Parsed [   1.910s] (current)\nerror: rust_fatfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 48,
      "file": "Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 688 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (53 crate dependencies)\nCrate:     atty\nVersion:   0.2.14\nWarning:   unmaintained\nTitle:     `atty` is unmaintained\nDate:      2024-09-25\nID:        RUSTSEC-2024-0375\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0375\nDependency tree:\natty 0.2.14\n└── env_logger 0.9.3\n    └── rust_fatfs 0.4.0\n\nCrate:     atty\nVersion:   0.2.14\nWarning:   unsound\nTitle:     Potential unaligned read\nDate:      2021-07-04\nID:        RUSTSEC-2021-0145\nURL:       https://rustsec.org/advisories/RUSTSEC-2021-0145\n\nwarning: 2 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 688,\n    \"last-commit\": \"4676c5529dd5319b9962e42bf984797f0dd57f5b\",\n    \"last-updated\": \"2024-11-25T11:27:40+01:00\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 53\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unmaintained\": [\n      {\n        \"kind\": \"unmaintained\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.165\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0375\",\n          \"package\": \"atty\",\n          \"title\": \"`atty` is unmaintained\",\n          \"description\": \"The maintainer of `atty` has [published](https://github.com/softprops/atty/commit/5bfdbe9e48c6ca6a4909e8d5b04f5e843a257e93) an official notice that the crate is no longer\\nunder development, and that users should instead rely on the functionality in the standard library's [`IsTerminal`](https://doc.rust-lang.org/std/io/trait.IsTerminal.html) trait.\\n\\n## Alternative(s)\\n\\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0 and the recommended replacement per the `atty` maintainer.\\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2024-09-25\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unmaintained\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/57\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"atty\",\n          \"version\": \"0.2.14\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"d9b39be18770d11421cdb1b9947a45dd3f37e93092cbf377614828a319d5fee8\",\n          \"dependencies\": [\n            {\n              \"name\": \"hermit-abi\",\n              \"version\": \"0.1.19\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"libc\",\n              \"version\": \"0.2.165\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"winapi\",\n              \"version\": \"0.3.9\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2021-0145\",\n          \"package\": \"atty\",\n          \"title\": \"Potential unaligned read\",\n          \"description\": \"On windows, `atty` dereferences a potentially unaligned pointer.\\n\\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\\n\\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\\n\\n# atty is Unmaintained\\n\\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\\n\\nLast release of `atty` was almost 3 years ago.\\n\\n## Possible Alternative(s)\\n\\nThe below list has not been vetted in any way and may or may not contain alternatives;\\n\\n - [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\\n - [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\",\n          \"date\": \"2021-07-04\",\n          \"aliases\": [\n            \"GHSA-g98v-hv3f-hcfr\"\n          ],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [\n            \"unaligned-read\"\n          ],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [\n            \"https://github.com/softprops/atty/pull/51\",\n            \"https://github.com/softprops/atty/issues/57\"\n          ],\n          \"source\": null,\n          \"url\": \"https://github.com/softprops/atty/issues/50\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": {\n          \"arch\": [],\n          \"os\": [\n            \"windows\"\n          ],\n          \"functions\": {}\n        },\n        \"versions\": {\n          \"patched\": [],\n          \"unaffected\": []\n        }\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 50,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:40:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:40:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 55,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=rust_fatfs, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/rust_fatfs/rust_fatfs\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing rust_fatfs v0.4.0 (current)\n      Parsed [   1.910s] (current)\nerror: rust_fatfs not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 58,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=signal, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/signal/signal\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing signal v0.1.0 (current)\nerror: running cargo-doc on crate signal failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling syn v1.0.109\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate signal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/signal/signal --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate signal v0.1.0\n"
    },
    {
      "cmd_idx": 60,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:40:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:40:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 65,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=signal, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/signal/signal\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking bit v0.1.1\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 66,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=signal, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing signal v0.1.0 (current)\nerror: running cargo-doc on crate signal failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling syn v1.0.109\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate signal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/signal/signal --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate signal v0.1.0\n"
    },
    {
      "cmd_idx": 67,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=signal, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-11-26T09:40:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:40:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling syn v2.0.89\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 68,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=signal, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/signal/signal\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:41:06|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 69,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/spinbase/spinbase/src/lib.rs (original lines from 15 to 15)\n-use kernel_guard_base::{NoOp, IrqSave};\n+use kernel_guard_base::{IrqSave, NoOp};\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `?Sized` bound is ignored because of a `Sized` requirement\n   --> src/base.rs:177:23\n    |\n177 | impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n    |                       ^^^^^^\n    |\nnote: `T` cannot be unsized because of the bound\n   --> src/base.rs:177:32\n    |\n177 | impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n    |                                ^^^^^^^\n    = note: ...because `Default` has the bound `Sized`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized\n    = note: `#[warn(clippy::needless_maybe_sized)]` on by default\nhelp: change the bounds that require `Sized`, or remove the `?Sized` bound\n    |\n177 - impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n177 + impl<G: BaseGuard, T: Default> Default for BaseSpinLock<G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 70,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 71,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=spinbase, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinbase/spinbase\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing spinbase v0.1.0 (current)\n      Parsed [   0.438s] (current)\nerror: spinbase not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 78,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=spinbase, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinbase/spinbase\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing spinbase v0.1.0 (current)\n      Parsed [   0.438s] (current)\nerror: spinbase not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 80,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 81,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=spinpreempt, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing spinpreempt v0.1.0 (current)\nerror: running cargo-doc on crate spinpreempt failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate spinpreempt v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt --no-default-features --features default,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate spinpreempt v0.1.0\n"
    },
    {
      "cmd_idx": 83,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:41:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:41:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 88,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=spinpreempt, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.89\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\n    Checking spin v0.9.8\n   Compiling unicode-width v0.1.14\n   Compiling base64 v0.13.1\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 89,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=spinpreempt, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing spinpreempt v0.1.0 (current)\nerror: running cargo-doc on crate spinpreempt failed with output:\n-----\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate spinpreempt v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt --no-default-features --features default,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate spinpreempt v0.1.0\n"
    },
    {
      "cmd_idx": 90,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=spinpreempt, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n   Compiling log v0.4.22\n[2024-11-26T09:41:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:41:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86 v0.52.0\n   Compiling scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.89\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 91,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=spinpreempt, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/spinpreempt/spinpreempt\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n    Checking bit_field v0.10.2\n   Compiling quote v1.0.37\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base.git#4e672f3e)\n    Checking log v0.4.22\n   Compiling paste v1.0.15\n   Compiling syn v1.0.109\n    Checking scopeguard v1.2.0\n   Compiling x86 v0.52.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling syn v2.0.89\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling libc v0.2.165\n    Checking spin v0.9.8\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:41:39|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 3 to 3)\n-use alloc::sync::Arc;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 5 to 5)\n+use alloc::sync::Arc;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 16 to 16)\n-const FUTEX_PRIVATE_FLAG:   usize = 128;\n+const FUTEX_PRIVATE_FLAG: usize = 128;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 20 to 21)\n-const FLAGS_SHARED:     usize = 0x01;\n-const FLAGS_CLOCKRT:    usize = 0x02;\n+const FLAGS_SHARED: usize = 0x01;\n+const FLAGS_CLOCKRT: usize = 0x02;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 33 to 34)\n-    uaddr: usize, op: usize, val: usize, timeout_or_val2: usize,\n-    uaddr2: usize, mut val3: usize\n+    uaddr: usize,\n+    op: usize,\n+    val: usize,\n+    timeout_or_val2: usize,\n+    uaddr2: usize,\n+    mut val3: usize,\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 47 to 49)\n-        if cmd != FUTEX_WAIT_BITSET &&\n-            cmd != FUTEX_WAIT_REQUEUE_PI &&\n-            cmd != FUTEX_LOCK_PI2 {\n+        if cmd != FUTEX_WAIT_BITSET && cmd != FUTEX_WAIT_REQUEUE_PI && cmd != FUTEX_LOCK_PI2 {\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 58 to 58)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 61 to 61)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 65 to 65)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 68 to 68)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 71 to 71)\n-        },\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 74 to 75)\n-    panic!(\"uaddr: {:#x} op: {:#x} val {:#x} timeout_or_val2 {:#x} uaddr2 {:#x} val3 {:#x}\",\n-        uaddr, op, val, timeout_or_val2, uaddr2, val3);\n+    panic!(\n+        \"uaddr: {:#x} op: {:#x} val {:#x} timeout_or_val2 {:#x} uaddr2 {:#x} val3 {:#x}\",\n+        uaddr, op, val, timeout_or_val2, uaddr2, val3\n+    );\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 78 to 80)\n-fn futex_wait(\n-    uaddr: usize, _flags: usize, val: usize, abs_time: usize, bitset: usize\n-) -> usize {\n+fn futex_wait(uaddr: usize, _flags: usize, val: usize, abs_time: usize, bitset: usize) -> usize {\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/futex.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/futex.rs (original lines from 113 to 115)\n-fn futex_wake(\n-    uaddr: usize, _flags: usize, nr_wake: usize, bitset: usize\n-) -> usize {\n+fn futex_wake(uaddr: usize, _flags: usize, nr_wake: usize, bitset: usize) -> usize {\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 3 to 4)\n-use core::sync::atomic::Ordering;\n-use taskctx::Tid;\n+use axerrno::{linux_err_from, LinuxError, LinuxResult};\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 6 to 7)\n-use axerrno::{LinuxResult, LinuxError, linux_err_from};\n-use taskctx::TaskState;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 9 to 9)\n-use axtype::{RLIMIT_DATA, RLIMIT_STACK, RLIMIT_CORE, RLIMIT_NOFILE};\n+use axtype::{RLIMIT_CORE, RLIMIT_DATA, RLIMIT_NOFILE, RLIMIT_STACK};\n+use core::sync::atomic::Ordering;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 11 to 11)\n+use taskctx::TaskState;\n+use taskctx::Tid;\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 79 to 79)\n-    assert!(matches!(resource, RLIMIT_DATA|RLIMIT_STACK|RLIMIT_CORE|RLIMIT_NOFILE));\n+    assert!(matches!(\n+        resource,\n+        RLIMIT_DATA | RLIMIT_STACK | RLIMIT_CORE | RLIMIT_NOFILE\n+    ));\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 83 to 83)\n-        unsafe { *old_rlim = current.rlim[resource]; }\n+        unsafe {\n+            *old_rlim = current.rlim[resource];\n+        }\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 100 to 101)\n-        },\n-        _ =>  {\n+        }\n+        _ => {\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 159 to 160)\n-    info!(\"wait4: pid {:#X} wstatus {:#X} options {:#X} rusage {:#X}\",\n-           pid, wstatus, options, rusage);\n+    info!(\n+        \"wait4: pid {:#X} wstatus {:#X} options {:#X} rusage {:#X}\",\n+        pid, wstatus, options, rusage\n+    );\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 174 to 185)\n-    let pid_type =\n-        if pid == -1 {\n-            PidType::MAX\n-        } else if pid < 0 {\n-            //pid = find_get_pid(-pid);\n-            PidType::PGID\n-        } else if pid == 0 {\n-            //pid = get_task_pid(current, PIDTYPE_PGID);\n-            PidType::PGID\n-        } else /* pid > 0 */ {\n-            PidType::PID\n-        };\n+    let pid_type = if pid == -1 {\n+        PidType::MAX\n+    } else if pid < 0 {\n+        //pid = find_get_pid(-pid);\n+        PidType::PGID\n+    } else if pid == 0 {\n+        //pid = get_task_pid(current, PIDTYPE_PGID);\n+        PidType::PGID\n+    } else\n+    /* pid > 0 */\n+    {\n+        PidType::PID\n+    };\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 188 to 188)\n-    let tid = match do_wait(pid_type, pid as usize, options|WEXITED, &mut status) {\n+    let tid = match do_wait(pid_type, pid as usize, options | WEXITED, &mut status) {\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 203 to 207)\n-fn do_wait(\n-    pid_type: PidType, tid: Tid, options: usize, status: &mut u32\n-) -> LinuxResult<Tid> {\n-    info!(\"do_wait: pidtype {:?} pid {:#X} options {:#X}; curr {}\",\n-          pid_type, tid, options, taskctx::current_ctx().tid());\n+fn do_wait(pid_type: PidType, tid: Tid, options: usize, status: &mut u32) -> LinuxResult<Tid> {\n+    info!(\n+        \"do_wait: pidtype {:?} pid {:#X} options {:#X}; curr {}\",\n+        pid_type,\n+        tid,\n+        options,\n+        taskctx::current_ctx().tid()\n+    );\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 282 to 283)\n-        EXIT_ZOMBIE, EXIT_DEAD,\n-        Ordering::Relaxed, Ordering::Relaxed\n+        EXIT_ZOMBIE,\n+        EXIT_DEAD,\n+        Ordering::Relaxed,\n+        Ordering::Relaxed,\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 296 to 296)\n-    info!(\"task {} exit [{}] ...\", taskctx::current_ctx().tid(), exit_code);\n+    info!(\n+        \"task {} exit [{}] ...\",\n+        taskctx::current_ctx().tid(),\n+        exit_code\n+    );\n"
    },
    {
      "cmd_idx": 92,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/sys/sys/src/lib.rs (original lines from 347 to 347)\n-    unsafe { *ptr = val; }\n+    unsafe {\n+        *ptr = val;\n+    }\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 94,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=sys, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/sys/sys\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing sys v0.1.0 (current)\nerror: running cargo-doc on crate sys failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling paste v1.0.15\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sys v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/sys/sys --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sys v0.1.0\n"
    },
    {
      "cmd_idx": 96,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:41:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:41:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 101,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sys, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/sys/sys\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.89\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling unicode-width v0.1.14\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 102,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=sys, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/sys/sys\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing sys v0.1.0 (current)\nerror: running cargo-doc on crate sys failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling paste v1.0.15\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate sys v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/sys/sys --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate sys v0.1.0\n"
    },
    {
      "cmd_idx": 103,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sys, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/sys/sys\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-11-26T09:41:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:41:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling syn v2.0.89\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 104,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sys, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/sys/sys\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.89\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno.git#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking spin v0.9.8\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling libc v0.2.165\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:42:07|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/rt_task/src/lib.rs (original lines from 7 to 8)\n-use core::panic::PanicInfo;\n-use axtype::{align_up_4k, align_down_4k, phys_to_virt, virt_to_phys};\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/rt_task/src/lib.rs (original lines from 10 to 10)\n+use axtype::{align_down_4k, align_up_4k, phys_to_virt, virt_to_phys};\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/rt_task/src/lib.rs (original lines from 37 to 38)\n-    use axhal::paging::PageTable;\n-    use axhal::paging::setup_page_table_root;\n"
    },
    {
      "cmd_idx": 105,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/rt_task/src/lib.rs (original lines from 40 to 40)\n+    use axhal::paging::setup_page_table_root;\n+    use axhal::paging::PageTable;\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 107,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=rt_task, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/rt_task\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing rt_task v0.1.0 (current)\nerror: running cargo-doc on crate rt_task failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rt_task v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/task/rt_task --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rt_task v0.1.0\n"
    },
    {
      "cmd_idx": 109,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:42:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:42:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 114,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_task, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/rt_task\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.89\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.12\n    Checking raw-cpuid v10.7.0\n    Checking scopeguard v1.2.0\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n    Checking bit v0.1.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking x2apic v0.4.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking raw-cpuid v11.2.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 115,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_task, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/rt_task\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing rt_task v0.1.0 (current)\nerror: running cargo-doc on crate rt_task failed with output:\n-----\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling syn v2.0.90\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate rt_task v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/task/rt_task --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate rt_task v0.1.0\n"
    },
    {
      "cmd_idx": 116,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_task, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/rt_task\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.215\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n[2024-11-26T09:42:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:42:45Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v2.6.0\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.89\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling volatile v0.4.6\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling x86_64 v0.14.12\n   Compiling raw-cpuid v10.7.0\n   Compiling paste v1.0.15\n   Compiling scopeguard v1.2.0\n   Compiling x86 v0.52.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n   Compiling bit v0.1.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 117,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_task, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/rt_task\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.92\n   Compiling indexmap v2.6.0\n   Compiling unicode-ident v1.0.14\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.6.0\n   Compiling syn v2.0.89\n   Compiling rustversion v1.0.18\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n    Checking scopeguard v1.2.0\n   Compiling paste v1.0.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig.git#51b81e4a)\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling syn v1.0.109\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bit v0.1.1\n    Checking x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:43:08|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 6 to 6)\n-use core::ops::Deref;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 8 to 8)\n-use core::sync::atomic::{Ordering, AtomicUsize, AtomicU32, AtomicU64};\n+use core::ops::Deref;\n+use core::sync::atomic::{AtomicU32, AtomicU64, AtomicUsize, Ordering};\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 16 to 17)\n-use axtype::{RLimit64, RLIM_NLIMITS};\n-use axtype::{RLIMIT_DATA, RLIMIT_STACK, RLIMIT_CORE, RLIMIT_NOFILE};\n+use axconfig::TASK_STACK_SIZE;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 19 to 19)\n+use axtype::{RLimit64, RLIM_NLIMITS};\n+use axtype::{RLIMIT_CORE, RLIMIT_DATA, RLIMIT_NOFILE, RLIMIT_STACK};\n+use filetable::FileTable;\n+use fstree::FsStruct;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 20 to 20)\n+use preempt_guard::NoPreempt;\n+use spinbase::SpinNoIrq;\n+use spinpreempt::SpinLock;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 23 to 26)\n-use spinbase::SpinNoIrq;\n-use spinpreempt::SpinLock;\n-use fstree::FsStruct;\n-use filetable::FileTable;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 28 to 29)\n-use preempt_guard::NoPreempt;\n-use axconfig::TASK_STACK_SIZE;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 31 to 32)\n-pub use crate::tid_map::{register_task, unregister_task, get_task};\n-pub use taskctx::Tid;\n+pub use crate::tid_map::{get_task, register_task, unregister_task};\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 34 to 34)\n+pub use taskctx::Tid;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 42 to 42)\n-pub const SIGINT : usize = 2;\n+pub const SIGINT: usize = 2;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 44 to 44)\n-pub const SIGBUS : usize = 7;\n+pub const SIGBUS: usize = 7;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 54 to 54)\n-pub const BUS_ADRERR : usize =  2;  // non-existent physical address\n+pub const BUS_ADRERR: usize = 2; // non-existent physical address\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 65 to 67)\n-pub const SA_RESTORER:  usize = 0x4000000;\n-pub const SA_RESTART:   usize = 0x10000000;\n-pub const SA_NODEFER:   usize = 0x40000000;\n+pub const SA_RESTORER: usize = 0x4000000;\n+pub const SA_RESTART: usize = 0x10000000;\n+pub const SA_NODEFER: usize = 0x40000000;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 105 to 112)\n-    pub uid:    u32,    // real UID of the task\n-    pub gid:    u32,    // real GID of the task\n-    pub suid:   u32,    // saved UID of the task\n-    pub sgid:   u32,    // saved GID of the task\n-    pub euid:   u32,    // effective UID of the task\n-    pub egid:   u32,    // effective GID of the task\n-    pub fsuid:   u32,   // UID for filesystem\n-    pub fsgid:   u32,   // GID for filesystem\n+    pub uid: u32,   // real UID of the task\n+    pub gid: u32,   // real GID of the task\n+    pub suid: u32,  // saved UID of the task\n+    pub sgid: u32,  // saved GID of the task\n+    pub euid: u32,  // effective UID of the task\n+    pub egid: u32,  // effective GID of the task\n+    pub fsuid: u32, // UID for filesystem\n+    pub fsgid: u32, // GID for filesystem\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 199 to 199)\n-        task.blocked.store(self.blocked.load(Ordering::Relaxed), Ordering::Relaxed);\n+        task.blocked\n+            .store(self.blocked.load(Ordering::Relaxed), Ordering::Relaxed);\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 221 to 221)\n-            },\n+            }\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 242 to 244)\n-    unsafe {\n-        &mut (*(Arc::as_ptr(&task) as *mut TaskStruct))\n-    }\n+    unsafe { &mut (*(Arc::as_ptr(&task) as *mut TaskStruct)) }\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/lib.rs (original lines from 278 to 280)\n-        unsafe {\n-            Arc::get_mut_unchecked(&mut self.0)\n-        }\n+        unsafe { Arc::get_mut_unchecked(&mut self.0) }\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/tid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/tid.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/tid_map.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/tid_map.rs (original lines from 1 to 2)\n-use alloc::collections::BTreeMap;\n-use spinpreempt::SpinLock;\n"
    },
    {
      "cmd_idx": 118,
      "file": "src/tid_map.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_18/shilei-massclouds/task/task/src/tid_map.rs (original lines from 5 to 5)\n+use alloc::collections::BTreeMap;\n+use spinpreempt::SpinLock;\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\n"
    },
    {
      "cmd_idx": 119,
      "file": "/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\n"
    },
    {
      "cmd_idx": 120,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=task, checker=SemverChecks\ntoolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/task\ncmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n     Parsing task v0.1.0 (current)\nerror: running cargo-doc on crate task failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate task v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/task/task --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate task v0.1.0\n"
    },
    {
      "cmd_idx": 122,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-26T09:42:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:42:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 127,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=task, checker=Clippy\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/task\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.92\n   Compiling serde v1.0.215\n   Compiling unicode-ident v1.0.14\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n    Checking bit v0.1.1\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 128,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=task, checker=SemverChecks\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/task\n// cmd=cargo +nightly-2024-10-12-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n     Parsing task v0.1.0 (current)\nerror: running cargo-doc on crate task failed with output:\n-----\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.90\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling rustversion v1.0.18\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate task v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_18/shilei-massclouds/task/task --no-default-features &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate task v0.1.0\n"
    },
    {
      "cmd_idx": 129,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=task, checker=Lockbud\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/task\n// cmd=cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.92\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.1\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n   Compiling log v0.4.22\n[2024-11-26T09:42:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-26T09:42:52Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling bitflags v1.3.2\n   Compiling syn v2.0.89\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.4.0\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling volatile v0.4.6\n   Compiling scopeguard v1.2.0\n   Compiling x86_64 v0.14.12\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling raw-cpuid v10.7.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 130,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=task, checker=Rap\n// toolchain=nightly-2024-10-12-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_18/shilei-massclouds/task/task\n// cmd=cargo +nightly-2024-10-12 rap -F -M\n   Compiling proc-macro2 v1.0.92\n   Compiling unicode-ident v1.0.14\n   Compiling serde v1.0.215\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.6.0\n   Compiling quote v1.0.37\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling syn v2.0.89\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling toml_edit v0.19.15\n   Compiling autocfg v1.4.0\n   Compiling rustversion v1.0.18\n   Compiling lock_api v0.4.12\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking volatile v0.4.6\n    Checking scopeguard v1.2.0\n    Checking x86_64 v0.14.12\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking raw-cpuid v10.7.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling syn v1.0.109\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking spin v0.9.8\n   Compiling libc v0.2.165\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n09:43:15|RAP|ERROR|: Finished with non-zero exit code.\n"
    }
  ]
}