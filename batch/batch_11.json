{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.84.0-nightly (4f2f477fd 2024-10-23)",
          "commit_hash": "4f2f477fded0a47b21ed3f6aeddeafa5db8bf518",
          "commit_date": "2024-10-23",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.84.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-2024-10-24-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1730609617057,
        "finish": 1730609620366,
        "duration_ms": 3308,
        "git_time": "2024-11-03 12:49:36 +0800",
        "git_sha": "fa6e82947d3ae60ef3dafb03934f3412c7963f83"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "sel4_vspace"
      },
      {
        "user": "kern-crates",
        "repo": "spinlock"
      },
      {
        "user": "kern-crates",
        "repo": "starry-next"
      },
      {
        "user": "kern-crates",
        "repo": "syscall-table"
      },
      {
        "user": "kern-crates",
        "repo": "test-test-repo"
      },
      {
        "user": "kern-crates",
        "repo": "timer_list"
      },
      {
        "user": "kern-crates",
        "repo": "tracer"
      },
      {
        "user": "kern-crates",
        "repo": "tuple_for_each"
      }
    ],
    "packages": [
      {
        "name": "sel4_vspace",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "sel4_vspace"
        }
      },
      {
        "name": "spinlock",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "spinlock"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "starry-next"
        }
      },
      {
        "name": "syscall-table",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "syscall-table"
        }
      },
      {
        "name": "systable-macro-derive",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "syscall-table"
        }
      },
      {
        "name": "",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "test-test-repo"
        }
      },
      {
        "name": "timer_list",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "timer_list"
        }
      },
      {
        "name": "tracer",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "tracer"
        }
      },
      {
        "name": "tuple_for_each",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "tuple_for_each"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p sel4_vspace -- --emit=json",
      "count": 50,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 8191,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 50,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 9887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 7934,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 144,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 8191,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 7934,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p spinlock -- --emit=json",
      "count": 1,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 3640,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 4748,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 3597,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 127,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3640,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4748,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 3597,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p syscall-table -- --emit=json",
      "count": 6,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 8,
      "duration_ms": 3795,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4934,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 3641,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rap cargo",
      "count": 1,
      "duration_ms": 3641,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p systable-macro-derive -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 45,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4671,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 2438,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 61,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p timer_list -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p timer_list -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p timer_list -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p timer_list -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 176,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 150,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 147,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 45,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 137,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 107,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 376,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 63,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 64,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p tracer -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 1310,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 1760,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 1,
      "duration_ms": 1761,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-10-24-x86_64-unknown-linux-gnu fmt -p tuple_for_each -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1357,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 48,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2824,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-06-30 rap -F -M",
      "count": 0,
      "duration_ms": 1681,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 249,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "outdated",
      "cmd": "cargo outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "geiger",
      "cmd": "cargo geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-23",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 4 to 5)\n-use sel4_common::{structures::exception_t, sel4_config::*, utils::convert_to_option_mut_type_ref, fault::*, BIT, MASK};\n-use sel4_cspace::interface::cap_t;\n+use super::{interface::set_vm_root, pte::pte_t};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 7 to 7)\n-use super::{pte::pte_t, interface::set_vm_root};\n+use sel4_common::{\n+    fault::*, sel4_config::*, structures::exception_t, utils::convert_to_option_mut_type_ref, BIT,\n+    MASK,\n+};\n+use sel4_cspace::interface::cap_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 52 to 52)\n-        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize)\n+        return convert_to_option_mut_type_ref::<asid_pool_t>(riscvKSASIDTable[index] as usize);\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 71 to 73)\n-    let poolPtr =  unsafe {\n-        riscvKSASIDTable[asid >> asidLowBits]\n-    };\n+    let poolPtr = unsafe { riscvKSASIDTable[asid >> asidLowBits] };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 80 to 82)\n-    let vspace_root = unsafe {\n-        (*poolPtr).array[asid & MASK!(asidLowBits)]\n-    };\n+    let vspace_root = unsafe { (*poolPtr).array[asid & MASK!(asidLowBits)] };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 107 to 107)\n-pub fn delete_asid_pool(asid_base: asid_t, pool: *mut asid_pool_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid_pool(\n+    asid_base: asid_t,\n+    pool: *mut asid_pool_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 118 to 118)\n-pub fn delete_asid(asid: asid_t, vspace: *mut pte_t, default_vspace_cap: &cap_t) -> Result<(), lookup_fault_t> {\n+pub fn delete_asid(\n+    asid: asid_t,\n+    vspace: *mut pte_t,\n+    default_vspace_cap: &cap_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/asid.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/asid.rs (original lines from 130 to 130)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 2 to 2)\n-use sel4_cspace::interface::{cap_t, CapTag};\n+use super::pte::pte_t;\n+use super::utils::{\n+    kpptr_to_paddr, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_PT_INDEX,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 4 to 4)\n-use sel4_common::{BIT, ROUND_DOWN};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 6 to 6)\n-use sel4_common::sel4_config::{KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET, PPTR_TOP, PT_INDEX_BITS, seL4_PageBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, KERNEL_ELF_BASE, KERNEL_ELF_PADDR_BASE, PADDR_BASE, PPTR_BASE, PPTR_BASE_OFFSET,\n+    PPTR_TOP, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 9 to 10)\n-use super::pte::pte_t;\n-use super::utils::{RISCV_GET_PT_INDEX, RISCV_GET_LVL_PGSIZE, RISCV_GET_LVL_PGSIZE_BITS, kpptr_to_paddr};\n+use sel4_common::{BIT, ROUND_DOWN};\n+use sel4_cspace::interface::{cap_t, CapTag};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 12 to 12)\n-use super::{satp::{setVSpaceRoot, sfence}, asid::{find_vspace_for_asid, asid_t}, utils::pptr_to_paddr, structures::{vptr_t, pptr_t}};\n+use super::{\n+    asid::{asid_t, find_vspace_for_asid},\n+    satp::{setVSpaceRoot, sfence},\n+    structures::{pptr_t, vptr_t},\n+    utils::pptr_to_paddr,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 81 to 81)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 94 to 94)\n-        find_ret.status != exception_t::EXCEPTION_NONE || find_ret.vspace_root.is_none() || find_ret.vspace_root.unwrap() != lvl1pt,\n+        find_ret.status != exception_t::EXCEPTION_NONE\n+            || find_ret.vspace_root.is_none()\n+            || find_ret.vspace_root.unwrap() != lvl1pt,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 107 to 107)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 109 to 109)\n-pub fn unmapPage(page_size: usize, asid: asid_t, vptr: vptr_t, pptr: pptr_t) -> Result<(), lookup_fault_t> {\n+pub fn unmapPage(\n+    page_size: usize,\n+    asid: asid_t,\n+    vptr: vptr_t,\n+    pptr: pptr_t,\n+) -> Result<(), lookup_fault_t> {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 115 to 115)\n-    let lu_ret = unsafe {(*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr)};\n+    let lu_ret = unsafe { (*find_ret.vspace_root.unwrap()).lookup_pt_slot(vptr) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 121 to 121)\n-    let slot = unsafe {&(*lu_ret.ptSlot)};\n+    let slot = unsafe { &(*lu_ret.ptSlot) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 123 to 123)\n-    if slot.get_vaild() == 0 || slot.is_pte_table() || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr) {\n+    if slot.get_vaild() == 0\n+        || slot.is_pte_table()\n+        || slot.get_ppn() << seL4_PageBits != pptr_to_paddr(pptr)\n+    {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/interface.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/interface.rs (original lines from 134 to 134)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 7 to 11)\n-mod structures;\n-mod vm_rights;\n-mod satp;\n-mod utils;\n-mod pte;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 14 to 14)\n+mod pte;\n+mod satp;\n+mod structures;\n+mod utils;\n+mod vm_rights;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 15 to 17)\n-pub use structures::*;\n-pub use interface::{activate_kernel_vspace, rust_map_kernel_window, copyGlobalMappings, set_vm_root, unmapPage};\n-pub use vm_rights::{VMReadWrite, VMReadOnly, maskVMRights};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 19 to 20)\n-    asid_t, asid_pool_t, riscvKSASIDTable, delete_asid_pool, delete_asid,\n-    find_vspace_for_asid, get_asid_pool_by_index, set_asid_pool_by_index\n+    asid_pool_t, asid_t, delete_asid, delete_asid_pool, find_vspace_for_asid,\n+    get_asid_pool_by_index, riscvKSASIDTable, set_asid_pool_by_index,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 22 to 22)\n-pub use utils::{pptr_to_paddr, paddr_to_pptr, kpptr_to_paddr, RISCV_GET_LVL_PGSIZE_BITS, RISCV_GET_LVL_PGSIZE, checkVPAlignment};\n+pub use interface::{\n+    activate_kernel_vspace, copyGlobalMappings, rust_map_kernel_window, set_vm_root, unmapPage,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/lib.rs (original lines from 24 to 24)\n-pub use satp::{sfence, setVSpaceRoot};\n+pub use satp::{setVSpaceRoot, sfence};\n+pub use structures::*;\n+pub use utils::{\n+    checkVPAlignment, kpptr_to_paddr, paddr_to_pptr, pptr_to_paddr, RISCV_GET_LVL_PGSIZE,\n+    RISCV_GET_LVL_PGSIZE_BITS,\n+};\n+pub use vm_rights::{maskVMRights, VMReadOnly, VMReadWrite};\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 2 to 3)\n-use sel4_common::MASK;\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, PT_INDEX_BITS, seL4_PageBits, seL4_PageTableBits};\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, seL4_PageTableBits, CONFIG_PT_LEVELS, PT_INDEX_BITS,\n+};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 6 to 6)\n+use sel4_common::MASK;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 7 to 9)\n-\n-use super::{structures::vptr_t, satp::sfence};\n-use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 11 to 11)\n-use super::vm_rights::{RISCVGetWriteFromVMRights, RISCVGetReadFromVMRights};\n+use super::utils::{paddr_to_pptr, RISCV_GET_PT_INDEX};\n+use super::vm_rights::{RISCVGetReadFromVMRights, RISCVGetWriteFromVMRights};\n+use super::{satp::sfence, structures::vptr_t};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 33 to 35)\n-    pub fn new(ppn: usize, sw: usize, dirty: usize, accessed: usize, global: usize, user: usize, execute: usize, write: usize,\n-               read: usize, valid: usize) -> Self {\n-\n+    pub fn new(\n+        ppn: usize,\n+        sw: usize,\n+        dirty: usize,\n+        accessed: usize,\n+        global: usize,\n+        user: usize,\n+        execute: usize,\n+        write: usize,\n+        read: usize,\n+        valid: usize,\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 80 to 81)\n-            ppn, 0, is_leaf as usize, is_leaf as usize, 1,\n-            0, exec as usize, write as usize,read as usize, 1\n+            ppn,\n+            0,\n+            is_leaf as usize,\n+            is_leaf as usize,\n+            1,\n+            0,\n+            exec as usize,\n+            write as usize,\n+            read as usize,\n+            1,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 124 to 124)\n-        self.get_vaild() != 0 && !(self.get_read() != 0 ||self.get_write() != 0 || self.get_execute() != 0)\n+        self.get_vaild() != 0\n+            && !(self.get_read() != 0 || self.get_write() != 0 || self.get_execute() != 0)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 147 to 147)\n-        while unsafe {(*ret.ptSlot).is_pte_table()} && level > 0 {\n+        while unsafe { (*ret.ptSlot).is_pte_table() } && level > 0 {\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/pte.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/pte.rs (original lines from 150 to 150)\n-            pt = unsafe {(*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t};\n+            pt = unsafe { (*ret.ptSlot).get_pte_from_ppn_mut() as *mut pte_t };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 1 to 1)\n+use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 3 to 3)\n-use super::structures::paddr_t;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 50 to 50)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/satp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/satp.rs (original lines from 62 to 62)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 11 to 11)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 20 to 22)\n-        Self {\n-            words: [w]\n-        }\n+        Self { words: [w] }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/structures.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/structures.rs (original lines from 34 to 34)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 1 to 3)\n-use sel4_common::{BIT, MASK};\n-use sel4_common::sel4_config::{CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS, seL4_PageBits};\n-use sel4_common::utils::pageBitsForSize;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 5 to 5)\n-\n+use sel4_common::sel4_config::{\n+    seL4_PageBits, CONFIG_PT_LEVELS, KERNEL_ELF_BASE_OFFSET, PPTR_BASE_OFFSET, PT_INDEX_BITS,\n+};\n+use sel4_common::utils::pageBitsForSize;\n+use sel4_common::{BIT, MASK};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/utils.rs (original lines from 43 to 43)\n+\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 7 to 7)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 26 to 26)\n-        }\n+        };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/vm_rights.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/sel4_vspace/src/vm_rights.rs (original lines from 30 to 30)\n+\n"
    },
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "/home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:17:02Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 8,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling ucd-trie v0.1.7\n   Compiling lazy_static v1.5.0\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling regex v1.11.1\n   Compiling riscv-target v0.1.2\n   Compiling thiserror-impl v1.0.66\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling pest v2.7.14\n   Compiling glob v0.3.1\n    Checking bit_field v0.10.2\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking bitflags v1.3.2\n    Checking scopeguard v1.2.0\n    Checking log v0.4.22\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\n   Compiling riscv v0.6.0 (https://gitee.com/rcore-os/riscv#11d43cf7)\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling lazy_static v1.5.0\n   Compiling ucd-trie v0.1.7\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-11-02T04:17:02Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling either v1.13.0\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:05Z WARN  lockbud::callbacks] crate riscv_target contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling syn v1.0.109\n   Compiling autocfg v1.4.0\n   Compiling home v0.5.9\n   Compiling which v4.4.2\n   Compiling lock_api v0.4.12\n   Compiling pest v2.7.14\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling glob v0.3.1\n   Compiling log v0.4.22\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling scopeguard v1.2.0\n   Compiling bit_field v0.10.2\n   Compiling serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n   Compiling tock-registers v0.9.0\n   Compiling serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n   Compiling spin v0.9.8\n   Compiling serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=sel4_vspace, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/sel4_vspace\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling memchr v2.7.4\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling regex-syntax v0.8.5\n   Compiling thiserror v1.0.66\n   Compiling semver-parser v0.7.0\n   Compiling aho-corasick v1.1.3\n   Compiling ucd-trie v0.1.7\n   Compiling quote v1.0.37\n   Compiling lazy_static v1.5.0\n   Compiling syn v2.0.86\n   Compiling semver v0.9.0\n   Compiling once_cell v1.20.2\n   Compiling regex-automata v0.4.8\n   Compiling rustix v0.38.38\n   Compiling rustc_version v0.2.3\n   Compiling linux-raw-sys v0.4.14\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v0.2.5\n   Compiling syn v1.0.109\n   Compiling home v0.5.9\n   Compiling regex v1.11.1\n   Compiling thiserror-impl v1.0.66\n   Compiling riscv-target v0.1.2\n   Compiling either v1.13.0\n   Compiling autocfg v1.4.0\n   Compiling pest v2.7.14\n   Compiling lock_api v0.4.12\n   Compiling which v4.4.2\n   Compiling sel4-rustfmt-helper v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n    Checking scopeguard v1.2.0\n   Compiling glob v0.3.1\n    Checking bitflags v1.3.2\n    Checking serial-frame v0.1.0 (https://github.com/rel4team/serial-frame.git?branch=mi_dev#84501a76)\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n   Compiling sel4-bitfield-types v0.1.0 (https://github.com/rel4team/rust_sel4_pbf_parser/?branch=mi_dev#34240530)\n   Compiling riscv v0.6.0 (https://github.com/rcore-os/riscv#11d43cf7)\n    Checking tock-registers v0.9.0\n   Compiling pest_meta v2.7.14\n    Checking serial-impl-pl011 v0.1.0 (https://github.com/rel4team/serial-impl-pl011.git?branch=mi_dev#83e073e1)\n    Checking spin v0.9.8\n    Checking serial-impl-sbi v0.1.0 (https://github.com/rel4team/serial-impl-sbi.git?branch=mi_dev#4face963)\nerror: invalid register `x10`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:18:9\n   |\n18 |         inlateout(\"x10\") arg0 => ret,\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: invalid register `x11`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:19:9\n   |\n19 |         in(\"x11\") arg1,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x12`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:20:9\n   |\n20 |         in(\"x12\") arg2,\n   |         ^^^^^^^^^^^^^^\n\nerror: invalid register `x17`: unknown register\n  --> /home/runner/.cargo/git/checkouts/serial-impl-sbi-b9661affcfb6f7f6/4face96/src/lib.rs:21:9\n   |\n21 |         in(\"x17\") which,\n   |         ^^^^^^^^^^^^^^^\n\nerror: could not compile `serial-impl-sbi` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n04:17:17|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_10/kern-crates/spinlock/src/lib.rs (original lines from 15 to 15)\n-use kernel_guard::{NoOp, NoPreempt, NoPreemptIrqSave, IrqSave};\n+use kernel_guard::{IrqSave, NoOp, NoPreempt, NoPreemptIrqSave};\n"
    },
    {
      "cmd_idx": 12,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/d8f8f2d/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/d8f8f2d/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T04:17:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=spinlock, checker=Clippy\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/spinlock\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling hashbrown v0.15.0\n   Compiling serde v1.0.214\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.6.0\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking static_assertions v1.1.0\n    Checking cfg-if v1.0.0\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling toml_edit v0.22.22\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#d8f8f2d4)\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=spinlock, checker=Lockbud\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/spinlock\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.0\n   Compiling serde v1.0.214\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n   Compiling raw-cpuid v10.7.0\n   Compiling indexmap v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n[2024-11-02T04:17:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T04:17:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.22\n   Compiling cfg-if v1.0.0\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#d8f8f2d4)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/d8f8f2d/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=spinlock, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_10/kern-crates/spinlock\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling serde v1.0.214\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.20\n    Checking bitflags v1.3.2\n   Compiling x86 v0.52.0\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.6.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#3c3ad2fb)\n    Checking bit_field v0.10.2\n    Checking cfg-if v1.0.0\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling toml_edit v0.22.22\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#d8f8f2d4)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/d8f8f2d/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\n04:17:33|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 22,
      "file": "batch_11/kern-crates/starry-next",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_11/kern-crates/starry-next` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error:     Updating git repository `https://github.com/arceos-org/arceos.git`\n          Updating crates.io index\n      error: failed to select a version for `axhal`.\n          ... required by package `starry v0.1.0 (/home/runner/check/batch_11/kern-crates/starry-next)`\n      versions that meet the requirements `*` are: 0.1.0\n\n      the package `starry` depends on `axhal`, with features: `uspace` but `axhal` does not have these features.\n\n\n      failed to select a version for `axhal` which could resolve this conflict\n   1: \n\nLocation:\n   src/layout/mod.rs:59\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"starry-next\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 23,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 71 to 71)\n-\n"
    },
    {
      "cmd_idx": 23,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 85 to 85)\n-\n"
    },
    {
      "cmd_idx": 23,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 100 to 100)\n-    assert_eq!(r,3);\n+    assert_eq!(r, 3);\n"
    },
    {
      "cmd_idx": 23,
      "file": "examples/test.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/examples/test.rs (original lines from 108 to 108)\n-    assert_eq!(res,1)\n+    assert_eq!(res, 1)\n"
    },
    {
      "cmd_idx": 23,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/src/lib.rs (original lines from 133 to 133)\n-impl ToIsize for (){\n+impl ToIsize for () {\n"
    },
    {
      "cmd_idx": 23,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/syscall-table/src/lib.rs (original lines from 149 to 149)\n-impl<T:ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n+impl<T: ToIsize, E: ToIsize> ToIsize for Result<T, E> {\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unexpected `cfg` condition value: `test`\n  --> src/lib.rs:39:17\n   |\n39 | #![cfg_attr(not(feature = \"test\"), no_std)]\n   |                 ^^^^^^^^^^^^^^^^ help: remove the condition\n   |\n   = note: no expected values for `feature`\n   = help: consider adding `test` as a feature in `Cargo.toml`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n   = note: `#[warn(unexpected_cfgs)]` on by default\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `crate` references the macro call's crate\n   --> src/lib.rs:421:13\n    |\n421 |             crate::paste!{\n    |             ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n    = note: `#[warn(clippy::crate_in_macro_def)]` on by default\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `crate` references the macro call's crate\n   --> src/lib.rs:448:17\n    |\n448 |             use crate::{iter,ServiceWrapper,ToUsize};\n    |                 ^^^^^ help: to reference the macro definition's crate, use: `$crate`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#crate_in_macro_def\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to one\n   --> src/lib.rs:227:12\n    |\n227 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to one\n   --> src/lib.rs:238:12\n    |\n238 |         if args.len() >= 1 {\n    |            ^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!args.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: very complex type used. Consider factoring parts into `type` definitions\n   --> src/lib.rs:299:14\n    |\n299 |     service: Box<dyn Fn(&[usize]) -> isize>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n    = note: `#[warn(clippy::type_complexity)]` on by default\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `Table`\n   --> src/lib.rs:337:5\n    |\n337 | /     pub const fn new() -> Self {\n338 | |         Self {\n339 | |             map: BTreeMap::new(),\n340 | |         }\n341 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n335 + impl Default for Table {\n336 +     fn default() -> Self {\n337 +         Self::new()\n338 +     }\n339 + }\n    |\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> src/lib.rs:398:5\n    |\n397 |     let handler = SysCallHandler::new(func);\n    |     ---------------------------------------- unnecessary `let` binding\n398 |     handler\n    |     ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n397 ~     \n398 ~     SysCallHandler::new(func)\n    |\n\n"
    },
    {
      "cmd_idx": 31,
      "file": "(virtual) rap",
      "kind": "Cargo",
      "raw": "// pkg_name=syscall-table, checker=Rap\n// toolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_11/kern-crates/syscall-table\n// cmd=cargo +nightly-2024-06-30 rap -F -M\n   Compiling proc-macro2 v1.0.89\n   Compiling unicode-ident v1.0.13\n   Compiling paste v1.0.15\n    Checking inventory v0.3.12 (https://github.com/os-module/inventory#b043290d)\n   Compiling quote v1.0.37\n   Compiling syn v2.0.86\n   Compiling systable-macro-derive v0.1.0 (/home/runner/check/batch_11/kern-crates/syscall-table/systable-macro-derive)\nerror: linking with `cc` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"cc\" \"-Wl,--version-script=/tmp/rustcBGSF5Y/list\" \"-Wl,--no-undefined-version\" \"-m64\" \"/tmp/rustcBGSF5Y/symbols.o\" \"/home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps/systable_macro_derive-663b3667aa9a03a0.systable_macro_derive.35b7d716704eb0f8-cgu.0.rcgu.o\" \"/home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps/systable_macro_derive-663b3667aa9a03a0.4ewx28glk1kp1obc44vgi7t8h.rcgu.rmeta\" \"/home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps/systable_macro_derive-663b3667aa9a03a0.djv25oxnw9zftb8smtt0uso9g.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-B/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-B/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-B/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-fuse-ld=lld\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-06-30-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/self-contained\" \"-o\" \"/home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps/libsystable_macro_derive-663b3667aa9a03a0.so\" \"-Wl,--gc-sections\" \"-shared\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"\n  = note: rust-lld: error: undefined hidden symbol: __rdl_dealloc\n          >>> referenced by djv25oxnw9zftb8smtt0uso9g\n          >>>               /home/runner/check/batch_11/kern-crates/syscall-table/target/debug/deps/systable_macro_derive-663b3667aa9a03a0.djv25oxnw9zftb8smtt0uso9g.rcgu.o:(__rust_dealloc)\n          collect2: error: ld returned 1 exit status\n          \n\nerror: could not compile `systable-macro-derive` (lib) due to 1 previous error\n00:42:51|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/lib.rs:53:5\n   |\n52 |     let stream = TokenStream::from(expanded);\n   |     ----------------------------------------- unnecessary `let` binding\n53 |     stream\n   |     ^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n52 ~     \n53 ~     TokenStream::from(expanded)\n   |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "batch_11/kern-crates/test-test-repo",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_11/kern-crates/test-test-repo` 内的 Rust 项目布局\n   1: repo_root `batch_11/kern-crates/test-test-repo` (规范路径为 `/home/runner/check/batch_11/kern-crates/test-test-repo`) 不是 Rust 项目，因为不包含任何 Cargo.toml\n\nLocation:\n   src/layout/mod.rs:136\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"kern-crates\" repo=\"test-test-repo\"\n      at src/run_checker/mod.rs:194\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 61,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/tracer/src/dwarf/unwinder.rs (original lines from 2 to 2)\n+use crate::utils::read_value;\n"
    },
    {
      "cmd_idx": 61,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_11/kern-crates/tracer/src/dwarf/unwinder.rs (original lines from 13 to 13)\n-use crate::utils::read_value;\n"
    },
    {
      "cmd_idx": 62,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `return_position_impl_trait_in_trait` has been stable since 1.75.0 and no longer requires an attribute to enable\n --> src/lib.rs:1:12\n  |\n1 | #![feature(return_position_impl_trait_in_trait)]\n  |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `0` is never read\n  --> src/dwarf/unwinder.rs:99:24\n   |\n99 |     UnexpectedRegister(Register),\n   |     ------------------ ^^^^^^^^\n   |     |\n   |     field in this variant\n   |\n   = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n99 |     UnexpectedRegister(()),\n   |                        ~~\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "src/dwarf/unwinder.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: field `0` is never read\n   --> src/dwarf/unwinder.rs:101:28\n    |\n101 |     CfaRuleUnknownRegister(Register),\n    |     ---------------------- ^^^^^^^^\n    |     |\n    |     field in this variant\n    |\n    = note: `UnwinderError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n    |\n101 |     CfaRuleUnknownRegister(()),\n    |                            ~~\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "src/compiler.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> src/compiler.rs:97:5\n    |\n97  | /     return match opcode {\n98  | |         0b0100011 => {\n99  | |             // 四字节的sd指令\n100 | |             let func = ins.get_bits(12..=14);\n...   |\n138 | |         }\n139 | |     };\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n97  ~     match opcode {\n98  +         0b0100011 => {\n99  ~             // 四字节的sd指令\n100 +             let func = ins.get_bits(12..=14);\n101 +             if func != 0b011 {\n102 +                 return None;\n103 +             }\n104 +             let rd = ins.get_bits(15..=19); // sp\n105 +             let rt = ins.get_bits(20..=24); // ra\n106 +             if rd != 2 || rt != 1 {\n107 +                 return None;\n108 +             }\n109 +             let mut imm = 0u32;\n110 +             imm.set_bits(0..=4, ins.get_bits(7..=11));\n111 +             imm.set_bits(5..=11, ins.get_bits(25..=31));\n112 +             for i in 12..32 {\n113 +                 imm.set_bit(i, imm.get_bit(11));\n114 +             }\n115 +             let imm = imm as isize;\n116 +             if imm > 0 {\n117 +                 Some(imm as u32)\n118 +             } else {\n119 +                 None\n120 +             }\n121 +         }\n122 +         _ => {\n123 ~             // 2字节的sd指令\n124 +             // c.sdsp\n125 +             // 111 [uimm5:3 8:6] rt 10\n126 +             let short_ins = ins.get_bits(0..16);\n127 +             let high = short_ins.get_bits(13..16);\n128 +             let low = short_ins.get_bits(0..2);\n129 +             match (high, low) {\n130 +                 (0b111, 0b10) => {\n131 +                     let mut imm = 0u32;\n132 +                     imm.set_bits(3..6, short_ins.get_bits(10..13));\n133 +                     imm.set_bits(6..9, short_ins.get_bits(7..10));\n134 +                     Some(imm)\n135 +                 }\n136 +                 (_, _) => None,\n137 +             }\n138 +         }\n139 ~     }\n    |\n\n"
    },
    {
      "cmd_idx": 62,
      "file": "src/compiler.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\n   --> src/compiler.rs:253:17\n    |\n253 | /                 match ins {\n254 | |                     InstructionSp::Addi(x) => {\n255 | |                         stack_size += x;\n256 | |                     }\n257 | |                     _ => {}\n258 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n253 ~                 if let InstructionSp::Addi(x) = ins {\n254 +                     stack_size += x;\n255 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 64,
      "file": "[lockbud] Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-11-02T00:43:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-11-02T00:43:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 65,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rap",
      "raw": "pkg=tracer, checker=Rap\ntoolchain=nightly-2024-10-24-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_11/kern-crates/tracer\ncmd=cargo +nightly-2024-06-30 rap -F -M\n\n00:43:07|RAP|WARN|: RCanary: Leak Function: Unsat DefId(0:119 ~ tracer[06ae]::dwarf::unwinder::{impl#3}::new) src/dwarf/unwinder.rs:118:5: 148:6 (#0)\n00:43:07|RAP|WARN|: RCanary: LeakItem Candidates: _115 = alloc::boxed::Box::<gimli::ParsedEhFrameHdr<gimli::EndianSlice<'_, gimli::LittleEndian>>>::leak::<'_>(move _116) -> [return: bb49, unwind: bb55], src/dwarf/unwinder.rs:128:19: 136:11 (#0)\n"
    }
  ]
}