{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1736601597048,
        "finish": 1736601598653,
        "duration_ms": 1605,
        "git_time": "2025-01-11 21:16:49 +0800",
        "git_sha": "75b8311a67f1171923e75534468ed4a155cf052a"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "Starry-OS",
        "repo": "slab_allocator"
      },
      {
        "user": "Starry-OS",
        "repo": "spinlock"
      }
    ],
    "packages": [
      {
        "name": "slab_allocator",
        "repo": {
          "repo_idx": 0,
          "user": "Starry-OS",
          "repo": "slab_allocator"
        }
      },
      {
        "name": "spinlock",
        "repo": {
          "repo_idx": 1,
          "user": "Starry-OS",
          "repo": "spinlock"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 1280,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 968,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 1193,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 286,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1535,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 245,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 293,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 70,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1193,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 1,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 3660,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 5423,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 8246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 269,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 244,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 1611,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 86,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 5423,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "src/slab.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `map` over `inspect`\n  --> src/slab.rs:93:26\n   |\n93 |         self.head.take().map(|node| {\n   |                          ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_inspect\n   = note: `#[warn(clippy::manual_inspect)]` on by default\nhelp: try\n   |\n93 ~         self.head.take().inspect(|node| {\n94 |             self.head = node.next.take();\n95 ~             self.len -= 1;\n   |\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=slab_allocator, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_7/Starry-OS/slab_allocator\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-10 12:48:30.452623983 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building slab_allocator v0.3.1 (current)\n       Built [   0.284s] (current)\n     Parsing slab_allocator v0.3.1 (current)\n      Parsed [   0.001s] (current)\n    Building slab_allocator v0.3.1 (baseline)\nerror: running cargo-doc on crate 'slab_allocator' failed with output:\n-----\n    Checking spin v0.4.10\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.4.10/src/lib.rs:6:43\n  |\n6 | #![cfg_attr(feature = \"const_fn\", feature(const_fn))]\n  |                                           ^^^^^^^^ feature has been removed\n  |\n  = note: split into finer-grained feature gates\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not compile `spin` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate slab_allocator v0.3.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add slab_allocator@=0.3.1 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate slab_allocator v0.3.1\n"
    },
    {
      "cmd_idx": 6,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=slab_allocator, checker=Outdated\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_7/Starry-OS/slab_allocator\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-01-10 12:48:32.875366063 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbuddy_system_allocator  0.9.1    ---     0.11.0  Normal  ---\n"
    },
    {
      "cmd_idx": 8,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=slab_allocator, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/Starry-OS/slab_allocator\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 12:48:29.25938752 +08:00:00\n    Building slab_allocator v0.3.1 (current)\n       Built [   0.284s] (current)\n     Parsing slab_allocator v0.3.1 (current)\n      Parsed [   0.001s] (current)\n    Building slab_allocator v0.3.1 (baseline)\nerror: running cargo-doc on crate 'slab_allocator' failed with output:\n-----\n    Checking spin v0.4.10\nerror[E0557]: feature has been removed\n --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spin-0.4.10/src/lib.rs:6:43\n  |\n6 | #![cfg_attr(feature = \"const_fn\", feature(const_fn))]\n  |                                           ^^^^^^^^ feature has been removed\n  |\n  = note: split into finer-grained feature gates\n\nFor more information about this error, try `rustc --explain E0557`.\nerror: could not compile `spin` (lib) due to 1 previous error\n\n-----\n\nerror: failed to build rustdoc for crate slab_allocator v0.3.1\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add slab_allocator@=0.3.1 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate slab_allocator v0.3.1\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_7/Starry-OS/spinlock/src/lib.rs (original lines from 15 to 15)\n-use kernel_guard::{NoOp, NoPreempt, NoPreemptIrqSave, IrqSave};\n+use kernel_guard::{IrqSave, NoOp, NoPreempt, NoPreemptIrqSave};\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `?Sized` bound is ignored because of a `Sized` requirement\n   --> src/base.rs:177:23\n    |\n177 | impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n    |                       ^^^^^^\n    |\nnote: `T` cannot be unsized because of the bound\n   --> src/base.rs:177:32\n    |\n177 | impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n    |                                ^^^^^^^\n    = note: ...because `Default` has the bound `Sized`\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_maybe_sized\n    = note: `#[warn(clippy::needless_maybe_sized)]` on by default\nhelp: change the bounds that require `Sized`, or remove the `?Sized` bound\n    |\n177 - impl<G: BaseGuard, T: ?Sized + Default> Default for BaseSpinLock<G, T> {\n177 + impl<G: BaseGuard, T: Default> Default for BaseSpinLock<G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:195:6\n    |\n195 | impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                       ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n195 - impl<'a, G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'a, G, T> {\n195 + impl<G: BaseGuard, T: ?Sized> Deref for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:204:6\n    |\n204 | impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n204 - impl<'a, G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'a, G, T> {\n204 + impl<G: BaseGuard, T: ?Sized> DerefMut for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:212:6\n    |\n212 | impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                                         ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n212 - impl<'a, G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'a, G, T> {\n212 + impl<G: BaseGuard, T: ?Sized + fmt::Debug> fmt::Debug for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/base.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/base.rs:218:6\n    |\n218 | impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n    |      ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n218 - impl<'a, G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'a, G, T> {\n218 + impl<G: BaseGuard, T: ?Sized> Drop for BaseSpinLockGuard<'_, G, T> {\n    |\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=spinlock, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_7/Starry-OS/spinlock\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\ntimestamp=2025-01-10 12:48:47.99925785 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building spinlock v0.1.0 (current)\n       Built [   3.754s] (current)\n     Parsing spinlock v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building spinlock v0.1.0 (baseline)\nerror: running cargo-doc on crate 'spinlock' failed with output:\n-----\n Documenting spinlock v0.1.0\nerror[E0259]: the name `core` is defined multiple times\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:81:1\n   |\n81 | extern crate core;\n   | ^^^^^^^^^^^^^^^^^^ `core` reimported here\n   |\n   = note: `core` must be defined only once in the type namespace of this module\nhelp: you can use `as` to change the binding name of the import\n   |\n81 | extern crate core as other_core;\n   |\n\nerror[E0432]: unresolved import `core::atomic`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:83:11\n   |\n83 | use core::atomic::{AtomicBool, Ordering, ATOMIC_BOOL_INIT};\n   |           ^^^^^^ could not find `atomic` in `core`\n\nerror: cannot find attribute `unsafe_destructor` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:187:3\n    |\n187 | #[unsafe_destructor]\n    |   ^^^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not resolve path `ATOMIC_BOOL_INIT`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:124:11\n    |\n124 |     lock: ATOMIC_BOOL_INIT,\n    |           ^^^^^^^^^^^^^^^^ could not resolve path `ATOMIC_BOOL_INIT`\n    |\n    = note: this error was originally ignored because you are running `rustdoc`\n    = note: try running again with `rustc` or `cargo check` and you may get a more detailed error\n\nSome errors have detailed explanations: E0259, E0432, E0433.\nFor more information about an error, try `rustc --explain E0259`.\nerror: could not document `spinlock`\n\n-----\n\nerror: failed to build rustdoc for crate spinlock v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add spinlock@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate spinlock v0.1.0\n"
    },
    {
      "cmd_idx": 17,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=spinlock, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/Starry-OS/spinlock\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-10 12:48:42.575938805 +08:00:00\n    Building spinlock v0.1.0 (current)\n       Built [   3.754s] (current)\n     Parsing spinlock v0.1.0 (current)\n      Parsed [   0.001s] (current)\n    Building spinlock v0.1.0 (baseline)\nerror: running cargo-doc on crate 'spinlock' failed with output:\n-----\n Documenting spinlock v0.1.0\nerror[E0259]: the name `core` is defined multiple times\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:81:1\n   |\n81 | extern crate core;\n   | ^^^^^^^^^^^^^^^^^^ `core` reimported here\n   |\n   = note: `core` must be defined only once in the type namespace of this module\nhelp: you can use `as` to change the binding name of the import\n   |\n81 | extern crate core as other_core;\n   |\n\nerror[E0432]: unresolved import `core::atomic`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:83:11\n   |\n83 | use core::atomic::{AtomicBool, Ordering, ATOMIC_BOOL_INIT};\n   |           ^^^^^^ could not find `atomic` in `core`\n\nerror: cannot find attribute `unsafe_destructor` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:187:3\n    |\n187 | #[unsafe_destructor]\n    |   ^^^^^^^^^^^^^^^^^\n\nerror[E0433]: failed to resolve: could not resolve path `ATOMIC_BOOL_INIT`\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/spinlock-0.1.0/src/lib.rs:124:11\n    |\n124 |     lock: ATOMIC_BOOL_INIT,\n    |           ^^^^^^^^^^^^^^^^ could not resolve path `ATOMIC_BOOL_INIT`\n    |\n    = note: this error was originally ignored because you are running `rustdoc`\n    = note: try running again with `rustc` or `cargo check` and you may get a more detailed error\n\nSome errors have detailed explanations: E0259, E0432, E0433.\nFor more information about an error, try `rustc --explain E0259`.\nerror: could not document `spinlock`\n\n-----\n\nerror: failed to build rustdoc for crate spinlock v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add spinlock@=0.1.0 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate spinlock v0.1.0\n"
    }
  ]
}