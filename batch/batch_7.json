{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (26b5599e4 2024-09-06)",
          "commit_hash": "26b5599e4d6ed2b45152c60493c1788c0a27533d",
          "commit_date": "2024-09-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.0"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu (default)",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "toml_path": ""
          }
        ]
      },
      "os_checker": {
        "start": 1725694459911,
        "finish": 1725694604635,
        "duration_ms": 144724,
        "git_time": "2024-09-07 15:08:03 +0800",
        "git_sha": "9b45986f2f18de2a8a3f8720339f078afd290c19"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "kern-crates",
        "repo": "flatten_objects",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "handler_table",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "kernel_guard",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "lazy_init",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "linked_list",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "linux_syscall_api",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "loongArch64",
        "rust_toolchain_idxs": []
      },
      {
        "user": "kern-crates",
        "repo": "lwext4",
        "rust_toolchain_idxs": []
      }
    ],
    "packages": [
      {
        "name": "flatten_objects",
        "repo": {
          "repo_idx": 0,
          "user": "kern-crates",
          "repo": "flatten_objects"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "handler_table",
        "repo": {
          "repo_idx": 1,
          "user": "kern-crates",
          "repo": "handler_table"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "kernel_guard",
        "repo": {
          "repo_idx": 2,
          "user": "kern-crates",
          "repo": "kernel_guard"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "lazy_init",
        "repo": {
          "repo_idx": 3,
          "user": "kern-crates",
          "repo": "lazy_init"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "linked_list",
        "repo": {
          "repo_idx": 4,
          "user": "kern-crates",
          "repo": "linked_list"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "linux_syscall_api",
        "repo": {
          "repo_idx": 5,
          "user": "kern-crates",
          "repo": "linux_syscall_api"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "loongArch64",
        "repo": {
          "repo_idx": 6,
          "user": "kern-crates",
          "repo": "loongArch64"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "lwext4-mkfs",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "lwext4"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "lwext4-rs",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "lwext4"
        },
        "rust_toolchain_idx": null
      },
      {
        "name": "lwext4-sys",
        "repo": {
          "repo_idx": 7,
          "user": "kern-crates",
          "repo": "lwext4"
        },
        "rust_toolchain_idx": null
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo fmt -p flatten_objects -- --emit=json",
      "count": 0,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2360,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo fmt -p handler_table -- --emit=json",
      "count": 0,
      "duration_ms": 536,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1406,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 520,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo fmt -p kernel_guard -- --emit=json",
      "count": 0,
      "duration_ms": 482,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 7069,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 10402,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7069,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10402,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo fmt -p lazy_init -- --emit=json",
      "count": 0,
      "duration_ms": 413,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 241,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo fmt -p linked_list -- --emit=json",
      "count": 0,
      "duration_ms": 231,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 331,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1047,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p linux_syscall_api -- --emit=json",
      "count": 0,
      "duration_ms": 427,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p linux_syscall_api -- --emit=json",
      "count": 0,
      "duration_ms": 502,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p linux_syscall_api -- --emit=json",
      "count": 0,
      "duration_ms": 485,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo fmt -p linux_syscall_api -- --emit=json",
      "count": 0,
      "duration_ms": 547,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 28537,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 6935,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 8657,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 8259,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 29058,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 19346,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 14524,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 18577,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 28537,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6935,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 8657,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 8259,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo fmt -p loongArch64 -- --emit=json",
      "count": 4,
      "duration_ms": 248,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 1917,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 815,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1917,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 815,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo fmt -p lwext4-mkfs -- --emit=json",
      "count": 0,
      "duration_ms": 226,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 40401,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 41109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo fmt -p lwext4-rs -- --emit=json",
      "count": 0,
      "duration_ms": 254,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 30,
      "duration_ms": 6971,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 27872,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6971,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo fmt -p lwext4-sys -- --emit=json",
      "count": 0,
      "duration_ms": 280,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 5351,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 21725,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 0,
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FlattenObjects<T, CAP>`\n  --> src/lib.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         assert!(CAP <= 1024);\n56 | |         Self {\n57 | |             objects: MaybeUninit::uninit_array(),\n...  |\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n52 + impl<T, const CAP: usize> Default for FlattenObjects<T, CAP> {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `HandlerTable<N>`\n  --> src/lib.rs:21:5\n   |\n21 | /     pub const fn new() -> Self {\n22 | |         const EMPTY: AtomicUsize = AtomicUsize::new(0);\n23 | |         Self {\n24 | |             handlers: [EMPTY; N],\n25 | |         }\n26 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n18 + impl<const N: usize> Default for HandlerTable<N> {\n19 +     fn default() -> Self {\n20 +         Self::new()\n21 +     }\n22 + }\n   |\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "/home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs",
      "kind": "Clippy(Error)",
      "raw": "error: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel_guard, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/kernel_guard\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/Starry-OS/taskctx.git`\n    Updating git repository `https://github.com/Starry-OS/axconfig.git`\n    Updating git repository `https://github.com/Starry-OS/memory_addr.git`\n    Updating git repository `https://github.com/mexus/numeric-enum-macro`\n    Blocking waiting for file lock on package cache\n     Locking 26 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n      Adding raw-cpuid v10.7.0 (latest: v11.1.0)\n      Adding tock-registers v0.8.1 (latest: v0.9.0)\n    Blocking waiting for file lock on package cache\n   Compiling serde v1.0.210\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n    Checking bitflags v1.3.2\n   Compiling indexmap v2.5.0\n   Compiling x86 v0.52.0\n    Checking bit_field v0.10.2\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.20\n    Checking log v0.4.22\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n    Checking cfg-if v1.0.0\nerror: could not compile `axconfig` (build script) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel_guard, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/kernel_guard\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.210\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling x86 v0.52.0\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling indexmap v2.5.0\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#8a3436e3)\n   Compiling bit_field v0.10.2\n   Compiling toml_edit v0.22.20\n   Compiling numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling static_assertions v1.1.0\n   Compiling log v0.4.22\n   Compiling cfg-if v1.0.0\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\nerror: environment variable `AX_WORK_DIR` not defined at compile time\n --> /home/runner/.cargo/git/checkouts/axconfig-a375f0c4fb0314cc/ecfc417/build.rs:6:34\n  |\n6 |     let root_dir = PathBuf::from(std::env!(\"AX_WORK_DIR\"));\n  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^\n  |\n  = help: use `std::env::var(\"AX_WORK_DIR\")` to read the variable at run time\n  = note: this error originates in the macro `std::env` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: could not compile `axconfig` (build script) due to 1 previous error\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LazyInit<T>`\n  --> src/lib.rs:49:5\n   |\n49 | /     pub const fn new() -> Self {\n50 | |         Self {\n51 | |             inited: AtomicBool::new(false),\n52 | |             data: UnsafeCell::new(MaybeUninit::uninit()),\n53 | |         }\n54 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n47 + impl<T> Default for LazyInit<T> {\n48 +     fn default() -> Self {\n49 +         Self::new()\n50 +     }\n51 + }\n   |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/unsafe_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `List<A>`\n   --> src/unsafe_list.rs:99:5\n    |\n99  | /     pub const fn new() -> Self {\n100 | |         Self { first: None }\n101 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n97  + impl<A: Adapter + ?Sized> Default for List<A> {\n98  +     fn default() -> Self {\n99  +         Self::new()\n100 +     }\n101 + }\n    |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/unsafe_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `Links<T>`\n   --> src/unsafe_list.rs:435:5\n    |\n435 | /     pub const fn new() -> Self {\n436 | |         Self(UnsafeCell::new(MaybeUninit::uninit()))\n437 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n433 + impl<T: ?Sized> Default for Links<T> {\n434 +     fn default() -> Self {\n435 +         Self::new()\n436 +     }\n437 + }\n    |\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/unsafe_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:245:12\n    |\n245 |         if self.first.unwrap() == existing {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(ambiguous_wide_pointer_comparisons)]` on by default\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n245 |         if std::ptr::addr_eq(self.first.unwrap().as_ptr(), existing.as_ptr()) {\n    |            ++++++++++++++++++                   ~~~~~~~~~~         ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n245 |         if std::ptr::eq(self.first.unwrap().as_ptr(), existing.as_ptr()) {\n    |            +++++++++++++                   ~~~~~~~~~~         ++++++++++\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/unsafe_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:462:24\n    |\n462 |                     if links.next != head {\n    |                        ^^^^^^^^^^^^^^^^^^\n    |\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n462 |                     if !std::ptr::addr_eq(links.next.as_ptr(), head.as_ptr()) {\n    |                        +++++++++++++++++++          ~~~~~~~~~~     ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n462 |                     if !std::ptr::eq(links.next.as_ptr(), head.as_ptr()) {\n    |                        ++++++++++++++          ~~~~~~~~~~     ++++++++++\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/unsafe_list.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: ambiguous wide pointer comparison, the comparison includes metadata which may not be expected\n   --> src/unsafe_list.rs:483:28\n    |\n483 |                         if cur == head {\n    |                            ^^^^^^^^^^^\n    |\nhelp: use `std::ptr::addr_eq` or untyped pointers to only compare their addresses\n    |\n483 |                         if std::ptr::addr_eq(cur.as_ptr(), head.as_ptr()) {\n    |                            ++++++++++++++++++   ~~~~~~~~~~     ++++++++++\nhelp: use explicit `std::ptr::eq` method to compare metadata and addresses\n    |\n483 |                         if std::ptr::eq(cur.as_ptr(), head.as_ptr()) {\n    |                            +++++++++++++   ~~~~~~~~~~     ++++++++++\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 21,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 22,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 23,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_name` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n59 |     /// The name of the device.\n60 |     fn device_name(&self) -> &str;\n   |     ------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 23,
      "file": "/home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: method `device_type` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/driver_common-20128c663136e8cd/4cdcdd9/src/lib.rs:58:11\n   |\n58 | pub trait BaseDriverOps: Send + Sync {\n   |           ^^^^^^^^^^^^^ found 1 const parameter\n...\n63 |     fn device_type(&self) -> DeviceType;\n   |     ------------------------------------ expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 24,
      "file": "/home/runner/.cargo/git/checkouts/page_table-65b096dd9223c7bd/d6ba329/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0049]: associated function `vaddr_is_valid` has 1 const parameter but its trait declaration has 0 const parameters\n  --> /home/runner/.cargo/git/checkouts/page_table-65b096dd9223c7bd/d6ba329/src/lib.rs:59:1\n   |\n59 | #[const_trait]\n   | ^^^^^^^^^^^^^^ found 1 const parameter\n...\n79 |     fn vaddr_is_valid(vaddr: usize) -> bool {\n   |                      - expected 0 const parameters\n\n"
    },
    {
      "cmd_idx": 25,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:35:45Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-07T07:35:45Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 26,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:36:04Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-07T07:36:04Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 27,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:36:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-07T07:36:18Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 28,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:36:37Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at src/syscall_fs/imp/ctl.rs:216:18: 216:90 (#0) after dropped at src/syscall_fs/imp/ctl.rs:219:5: 219:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-07T07:36:37Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 29,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n Downloading crates ...\n  Downloaded defmt-macros v0.3.8\n  Downloaded toml_datetime v0.6.5\n  Downloaded virtio-drivers v0.7.2\n  Downloaded rustversion v1.0.16\n  Downloaded unicode-width v0.1.12\n  Downloaded thiserror-impl v1.0.60\n  Downloaded proc-macro2 v1.0.82\n  Downloaded raw-cpuid v11.0.2\n  Downloaded defmt v0.3.7\n  Downloaded thiserror v1.0.60\n  Downloaded serde v1.0.201\n  Downloaded log v0.4.19\n  Downloaded syn v2.0.63\n  Downloaded libc v0.2.154\n    Checking log v0.4.19\n   Compiling proc-macro2 v1.0.82\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking bitflags v2.5.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling serde v1.0.201\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.5\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling indexmap v2.2.6\n   Compiling toml_datetime v0.6.5\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.3.0\n   Compiling quote v1.0.36\n   Compiling winnow v0.5.40\n   Compiling syn v1.0.109\n   Compiling lock_api v0.4.12\n   Compiling syn v2.0.63\n   Compiling toml_edit v0.19.15\n   Compiling rustversion v1.0.16\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n   Compiling libc v0.2.154\n    Checking spin v0.9.8\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n    Checking tock-registers v0.8.1\n    Checking x86_64 v0.14.12\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.12\n    Checking aarch64-cpu v9.4.0\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling svgbobdoc v0.3.0\n    Checking spin v0.5.2\n    Checking const-default v1.0.0\n   Compiling paste v1.0.15\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#3d6bdc92)\n    Checking lazy_static v1.4.0\n    Checking rlsf v0.2.1\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#81ef766c)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#dca9e983)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n    Checking bit v0.1.1\n    Checking fdt v0.1.5\n    Checking x2apic v0.4.3\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#64b47ba1)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#6665f35e)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#d6ba329d)\n    Checking raw-cpuid v11.0.2\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n   Compiling zerocopy-derive v0.7.34\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n    Checking nb v1.1.0\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#a21caaac)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking rand_core v0.6.4\n    Checking rand v0.8.5\n    Checking nb v0.1.3\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#3a6861cf)\n   Compiling riscv v0.10.1\n    Checking zero v0.1.3\n    Checking zerocopy v0.7.34\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#267cb5b0)\n    Checking xmas-elf v0.9.1\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#00c26de4)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#4f70d39a)\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#34e5f5bd)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#d00386a2)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=a3a834e#a3a834ef)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#1340dde1)\n    Checking critical-section v1.1.2\n    Checking virtio-drivers v0.7.2\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#2bcdfea0)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n    Checking stable_deref_trait v1.2.0\n    Checking managed v0.8.0\n   Compiling num_enum_derive v0.5.11\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#55e907a9)\nerror: could not compile `driver_virtio` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 30,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n    Checking log v0.4.19\n    Checking bit_field v0.10.2\n    Checking bitflags v2.5.0\n    Checking bitflags v1.3.2\n    Checking cfg-if v1.0.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking raw-cpuid v10.7.0\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking static_assertions v1.1.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking volatile v0.4.6\n    Checking tock-registers v0.8.1\n    Checking x86_64 v0.14.12\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.9.8\n    Checking const-default v1.0.0\n    Checking spin v0.5.2\n    Checking lazy_static v1.4.0\n    Checking rlsf v0.2.1\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking byteorder v1.5.0\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n    Checking bit v0.1.1\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n    Checking fdt v0.1.5\n    Checking x2apic v0.4.3\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#81ef766c)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#3d6bdc92)\n    Checking axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#6665f35e)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#64b47ba1)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n    Checking raw-cpuid v11.0.2\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#d6ba329d)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking zerocopy v0.7.34\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking nb v1.1.0\n    Checking rand_core v0.6.4\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#a21caaac)\n    Checking nb v0.1.3\n    Checking rand v0.8.5\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#3a6861cf)\n    Checking virtio-drivers v0.7.2\n    Checking void v1.0.2\n    Checking zero v0.1.3\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#267cb5b0)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#00c26de4)\n    Checking xmas-elf v0.9.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#34e5f5bd)\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#4f70d39a)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#1340dde1)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#d00386a2)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=a3a834e#a3a834ef)\n    Checking critical-section v1.1.2\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#2bcdfea0)\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#55e907a9)\nerror: could not compile `driver_virtio` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 31,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking log v0.4.19\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking static_assertions v1.1.0\n   Compiling lock_api v0.4.12\n    Checking scopeguard v1.2.0\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking bit_field v0.10.2\n    Checking tock-registers v0.8.1\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n    Checking const-default v1.0.0\n    Checking aarch64-cpu v9.4.0\n    Checking spin v0.5.2\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking spin v0.9.8\n    Checking nb v1.1.0\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#81ef766c)\n    Checking lazy_static v1.4.0\n    Checking nb v0.1.3\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking byteorder v1.5.0\n    Checking void v1.0.2\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n    Checking embedded-hal v0.2.7\n   Compiling riscv v0.10.1\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n    Checking sbi-spec v0.0.4\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n    Checking critical-section v1.1.2\n    Checking fdt v0.1.5\n    Checking sbi-rt v0.0.2\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#64b47ba1)\n    Checking axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#6665f35e)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking zerocopy v0.7.34\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#3d6bdc92)\n    Checking rand_core v0.6.4\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#d6ba329d)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking bitflags v1.3.2\n    Checking rand v0.8.5\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#a21caaac)\n    Checking driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#3a6861cf)\n    Checking zero v0.1.3\n    Checking virtio-drivers v0.7.2\n    Checking axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#267cb5b0)\n    Checking xmas-elf v0.9.1\n    Checking axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#34e5f5bd)\n    Checking axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#00c26de4)\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=a3a834e#a3a834ef)\n    Checking axio v0.1.0 (https://github.com/Starry-OS/axio.git#4f70d39a)\n    Checking axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#1340dde1)\n    Checking capability v0.1.0 (https://github.com/Starry-OS/capability.git#d00386a2)\n    Checking elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#2bcdfea0)\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#55e907a9)\n    Checking stable_deref_trait v1.2.0\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n    Checking managed v0.8.0\nerror: could not compile `driver_virtio` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 32,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=linux_syscall_api, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/kern-crates/linux_syscall_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n Downloading crates ...\n  Downloaded either v1.11.0\n    Checking log v0.4.19\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.5.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#12d36f6c)\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking aarch64-cpu v9.4.0\n   Compiling lock_api v0.4.12\n    Checking numeric-enum-macro v0.2.0 (https://github.com/mexus/numeric-enum-macro#20aef288)\n    Checking scopeguard v1.2.0\n    Checking static_assertions v1.1.0\n    Checking bit_field v0.10.2\n    Checking spin v0.5.2\n    Checking const-default v1.0.0\n    Checking lazy_static v1.4.0\n    Checking spin v0.9.8\n    Checking rlsf v0.2.1\n    Checking bitmap-allocator v0.1.0 (https://github.com/rcore-os/bitmap-allocator.git?rev=88e871a#88e871a5)\n    Checking axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#4ae66642)\n    Checking byteorder v1.5.0\n    Checking allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#6923b09d)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#939e6eb9)\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#a19854cc)\n    Checking fdt v0.1.5\n    Checking axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#4adca0d0)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#bb7589fe)\n    Checking dw_apb_uart v0.1.0 (https://github.com/Starry-OS/dw_apb_uart.git#e17045e7)\n    Checking of v0.1.0 (https://github.com/Starry-OS/of.git#8c5083c1)\n    Checking arm_pl011 v0.1.0 (https://github.com/Starry-OS/arm_pl011.git#44088f39)\n    Checking handler_table v0.1.0 (https://github.com/Starry-OS/handler_table.git#d6495e7d)\n    Checking either v1.11.0\n    Checking ratio v0.1.0 (https://github.com/Starry-OS/ratio.git#e3381d7b)\n    Checking lazy_init v0.1.0 (https://github.com/Starry-OS/lazy_init.git#0aee1e3b)\n    Checking driver_common v0.1.0 (https://github.com/Starry-OS/driver_common.git#4cdcdd9b)\n    Checking zerocopy v0.7.34\n    Checking linked_list v0.1.0 (https://github.com/Starry-OS/linked_list.git#3238ef86)\n    Checking driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#261bd624)\n    Checking scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#1142d117)\n    Checking timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#0ba32228)\n    Checking bitflags v1.3.2\n    Checking nb v1.1.0\n    Checking taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#7296a141)\n    Checking page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#3d6bdc92)\n    Checking arm_gic v0.1.0 (https://github.com/Starry-OS/arm_gic.git#631819a3)\n    Checking kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n    Checking virtio-drivers v0.7.2\n    Checking page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#d6ba329d)\n    Checking spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#81ef766c)\n    Checking axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#64b47ba1)\nerror: could not compile `page_table` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_7/kern-crates/loongArch64/src/lib.rs (original lines from 5 to 5)\n+pub mod consts;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_7/kern-crates/loongArch64/src/lib.rs (original lines from 10 to 10)\n-pub mod consts;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/register/base/ecfg.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_7/kern-crates/loongArch64/src/register/base/ecfg.rs (original lines from 1 to 1)\n-use core::fmt::Debug;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/register/base/ecfg.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_7/kern-crates/loongArch64/src/register/base/ecfg.rs (original lines from 5 to 5)\n+use core::fmt::Debug;\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `asm_const` has been stable since 1.83.0-nightly and no longer requires an attribute to enable\n --> src/lib.rs:2:12\n  |\n2 | #![feature(asm_const)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n --> src/iocsr.rs:6:25\n  |\n6 |         asm!(\"iocsrwr.w {},{}\", in(reg) value, in(reg) reg);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n  = note: `#[warn(asm_sub_register)]` on by default\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:18:25\n   |\n18 |         asm!(\"iocsrwr.h {},{}\", in(reg) value, in(reg) reg);\n   |                         ^^              ----- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f16, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f16, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:41:25\n   |\n41 |         asm!(\"iocsrrd.h {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/iocsr.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:50:25\n   |\n50 |         asm!(\"iocsrrd.w {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/ipi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n --> src/ipi.rs:7:25\n  |\n7 |         asm!(\"iocsrwr.w {},{}\", in(reg) value,in(reg) addr);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/ipi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: formatting may not be suitable for sub-register argument\n  --> src/ipi.rs:13:25\n   |\n13 |         asm!(\"iocsrrd.w {},{}\", out(reg) value, in(reg) addr);\n   |                         ^^               ----- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=loongArch64, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/loongArch64\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Updating crates.io index\n    Blocking waiting for file lock on package cache\n     Locking 2 packages to latest compatible versions\n      Adding bitflags v1.3.2 (latest: v2.6.0)\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Blocking waiting for file lock on package cache\n    Checking bit_field v0.10.2\n    Checking bitflags v1.3.2\n    Checking loongArch64 v0.2.4 (/home/runner/check/batch_7/kern-crates/loongArch64)\nerror: could not compile `loongArch64` (lib) due to 3 previous errors; 7 warnings emitted\n"
    },
    {
      "cmd_idx": 37,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=loongArch64, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/loongArch64\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling bitflags v1.3.2\n   Compiling bit_field v0.10.2\n   Compiling loongArch64 v0.2.4 (/home/runner/check/batch_7/kern-crates/loongArch64)\nwarning: formatting may not be suitable for sub-register argument\n --> src/iocsr.rs:6:25\n  |\n6 |         asm!(\"iocsrwr.w {},{}\", in(reg) value, in(reg) reg);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n  = note: `#[warn(asm_sub_register)]` on by default\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:18:25\n   |\n18 |         asm!(\"iocsrwr.h {},{}\", in(reg) value, in(reg) reg);\n   |                         ^^              ----- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nerror: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:24:41\n   |\n24 |         asm!(\"iocsrwr.b {},{}\", in(reg) value, in(reg) reg);\n   |                                         ^^^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\nerror: type `u8` cannot be used with this register class\n  --> src/iocsr.rs:32:41\n   |\n32 |         asm!(\"iocsrrd.b {},{}\",out(reg) val, in(reg) reg);\n   |                                         ^^^\n   |\n   = note: register class `reg` supports these types: i16, i32, i64, f32, f64\n   = help: consider using the `reg_byte` register class instead\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:41:25\n   |\n41 |         asm!(\"iocsrrd.h {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:x}` to have the register formatted as `ax` (for 16-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/iocsr.rs:50:25\n   |\n50 |         asm!(\"iocsrrd.w {},{}\",out(reg) val, in(reg) reg);\n   |                         ^^              --- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n --> src/ipi.rs:7:25\n  |\n7 |         asm!(\"iocsrwr.w {},{}\", in(reg) value,in(reg) addr);\n  |                         ^^              ----- for this argument\n  |\n  = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n  = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: formatting may not be suitable for sub-register argument\n  --> src/ipi.rs:13:25\n   |\n13 |         asm!(\"iocsrrd.w {},{}\", out(reg) value, in(reg) addr);\n   |                         ^^               ----- for this argument\n   |\n   = help: use `{0:e}` to have the register formatted as `eax` (for 32-bit values)\n   = help: or use `{0:r}` to keep the default formatting of `rax` (for 64-bit values)\n\nwarning: `loongArch64` (lib) generated 6 warnings\nerror: could not compile `loongArch64` (lib) due to 2 previous errors; 6 warnings emitted\n"
    },
    {
      "cmd_idx": 39,
      "file": "lwext4-rs/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:35:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T07:35:25Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the feature `error_in_core` has been stable since 1.81.0 and no longer requires an attribute to enable\n --> lwext4-rs/src/lib.rs:2:12\n  |\n2 | #![feature(error_in_core)]\n  |            ^^^^^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/block.rs:41:25\n   |\n41 |                 p_user: transmute(Box::leak(Box::new(interface))),\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Box::leak(Box::new(interface)) as *mut T as *mut std::ffi::c_void`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&T`)\n  --> lwext4-rs/src/block.rs:81:18\n   |\n81 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*((*self.raw.bdif).p_user as *const T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n   = note: `#[warn(clippy::transmute_ptr_to_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut std::ffi::c_void`) to a reference type (`&mut T`)\n  --> lwext4-rs/src/block.rs:86:18\n   |\n86 |         unsafe { transmute((*self.raw.bdif).p_user) }\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *((*self.raw.bdif).p_user as *mut T)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/block.rs:120:50\n    |\n120 |             errno_to_result(ext4_device_register(transmute(&bdev.raw), c_name.as_ptr()))?;\n    |                                                  ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:234:47\n    |\n234 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:252:47\n    |\n252 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:256:36\n    |\n256 |                 from_raw_parts_mut(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                    ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*mut std::ffi::c_void, *mut u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n    = note: `#[warn(clippy::missing_transmute_annotations)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:271:47\n    |\n271 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute used without annotations\n   --> lwext4-rs/src/block.rs:275:32\n    |\n275 |                 from_raw_parts(transmute(buf), (blk_cnt * bsize) as usize),\n    |                                ^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const std::ffi::c_void, *const u8>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:285:47\n    |\n285 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:293:47\n    |\n293 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/block.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*mut lwext4_sys::ext4::ext4_blockdev`) to a reference type (`&mut block::BlockDevice<T>`)\n   --> lwext4-rs/src/block.rs:301:47\n    |\n301 |             let device: &mut BlockDevice<T> = transmute(bdev);\n    |                                               ^^^^^^^^^^^^^^^ help: try: `&mut *(bdev as *mut block::BlockDevice<T>)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `ext4_file` which implements the `Copy` trait\n  --> lwext4-rs/src/dir.rs:37:19\n   |\n37 |         File::new(self.raw.f.clone(), self.path.clone())\n   |                   ^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.raw.f`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `ext4_direntry` which implements the `Copy` trait\n   --> lwext4-rs/src/dir.rs:108:26\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `(*transmute::<_, &ext4_direntry>(result))`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a pointer type (`*const lwext4_sys::ext4::ext4_direntry`) to a reference type (`&lwext4_sys::ext4::ext4_direntry`)\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*result.cast::<ext4_direntry>()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#transmute_ptr_to_ref\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/dir.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute used without annotations\n   --> lwext4-rs/src/dir.rs:108:28\n    |\n108 |                     raw: (*transmute::<_, &ext4_direntry>(result)).clone(),\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider adding missing annotations: `transmute::<*const lwext4_sys::ext4::ext4_direntry, &lwext4_sys::ext4::ext4_direntry>`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_transmute_annotations\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/error.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/error.rs:103:1\n    |\n103 | impl Into<std::io::Error> for Error {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<error::Error>`\n    |\n103 ~ impl From<Error> for std::io::Error {\n104 ~     fn from(val: Error) -> Self {\n105 ~         std::io::Error::from_raw_os_error(val as i32)\n    |\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/standard.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-rs/src/standard.rs:28:27\n   |\n28 |         self.0.read_exact(&mut buf).unwrap();\n   |                           ^^^^^^^^ help: change this to: `buf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/fs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> lwext4-rs/src/fs.rs:230:16\n    |\n230 |             if x.len() > 0 {\n    |                ^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/mkfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n  --> lwext4-rs/src/mkfs.rs:68:27\n   |\n68 |                     bdev: transmute(&bdev.raw),\n   |                           ^^^^^^^^^^^^^^^^^^^^ help: try: `&bdev.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/mkfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FsBuilder`\n   --> lwext4-rs/src/mkfs.rs:181:5\n    |\n181 | /     pub fn new() -> Self {\n182 | |         Self {\n183 | |             block_size: 1024,\n184 | |             ty: None,\n...   |\n187 | |         }\n188 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n180 + impl Default for FsBuilder {\n181 +     fn default() -> Self {\n182 +         Self::new()\n183 +     }\n184 + }\n    |\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/mkfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:251:17\n    |\n251 |                 transmute(&fs.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&fs.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/mkfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:267:17\n    |\n267 |                 transmute(&self.device.raw),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.device.raw as *const lwext4_sys::ext4::ext4_blockdev as *mut lwext4_sys::ext4::ext4_blockdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/mkfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from a reference to a pointer\n   --> lwext4-rs/src/mkfs.rs:268:17\n    |\n268 |                 transmute(&self.raw_info),\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&self.raw_info as *const lwext4_sys::ext4::ext4_mkfs_info as *mut lwext4_sys::ext4::ext4_mkfs_info`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/types.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> lwext4-rs/src/types.rs:102:27\n    |\n102 |     pub(super) fn to_ext4(&self) -> u8 {\n    |                           ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/types.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `MountStats`\n   --> lwext4-rs/src/types.rs:121:5\n    |\n121 | /     pub fn new() -> Self {\n122 | |         Self(ext4_mount_stats {\n123 | |             inodes_count: 0,\n124 | |             free_inodes_count: 0,\n...   |\n132 | |         })\n133 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n120 + impl Default for MountStats {\n121 +     fn default() -> Self {\n122 +         Self::new()\n123 +     }\n124 + }\n    |\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n   --> lwext4-rs/src/types.rs:166:1\n    |\n166 | / bitflags! {\n167 | |     pub struct OpenFlags:u32{\n168 | |         const RDONLY = O_RDONLY;\n169 | |         const WRONLY = O_WRONLY;\n...   |\n175 | |     }\n176 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n    = note: `#[deny(clippy::bad_bit_mask)]` on by default\n    = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/types.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `Metadata` has a public `len` method, but no `is_empty` method\n   --> lwext4-rs/src/types.rs:379:5\n    |\n379 |     pub fn len(&self) -> u64 {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_without_is_empty\n    = note: `#[warn(clippy::len_without_is_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 42,
      "file": "lwext4-rs/src/types.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> lwext4-rs/src/types.rs:517:1\n    |\n517 | impl Into<u32> for Time {\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<types::Time>`\n    |\n517 ~ impl From<Time> for u32 {\n518 ~     fn from(val: Time) -> Self {\n519 ~         val.epoch_secs as u32\n    |\n\n"
    },
    {
      "cmd_idx": 43,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:36:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T07:36:11Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4-rs, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu (default), target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_7/kern-crates/lwext4/lwext4-rs\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling glob v0.3.1\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.158\n   Compiling prettyplease v0.2.22\n   Compiling clang-sys v1.8.1\n   Compiling rustix v0.38.36\n   Compiling regex-syntax v0.8.4\n   Compiling minimal-lexical v0.2.1\n   Compiling quote v1.0.37\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling memchr v2.7.4\n   Compiling linux-raw-sys v0.4.14\n   Compiling syn v2.0.77\n   Compiling regex-automata v0.4.7\n   Compiling nom v7.1.3\n   Compiling libloading v0.8.5\n   Compiling bindgen v0.65.1\n   Compiling home v0.5.9\n   Compiling either v1.13.0\n   Compiling cexpr v0.6.0\n   Compiling which v4.4.2\n   Compiling regex v1.10.6\n   Compiling lazy_static v1.5.0\n   Compiling shlex v1.3.0\n   Compiling bitflags v1.3.2\n   Compiling log v0.4.22\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling peeking_take_while v0.1.2\n   Compiling lwext4-sys v0.1.0 (/home/runner/check/batch_7/kern-crates/lwext4/lwext4-sys)\n    Checking lwext4-rs v0.1.0 (/home/runner/check/batch_7/kern-crates/lwext4/lwext4-rs)\nerror: could not compile `lwext4-rs` (lib) due to 2 previous errors; 29 warnings emitted\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: used `assert_eq!` with a literal bool\n  --> lwext4-sys/build.rs:17:9\n   |\n17 |         assert_eq!(cp.success(), true);\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_assert_comparison\n   = note: `#[warn(clippy::bool_assert_comparison)]` on by default\nhelp: replace it with `assert!(..)`\n   |\n17 -         assert_eq!(cp.success(), true);\n17 +         assert!(cp.success());\n   |\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> lwext4-sys/build.rs:34:22\n   |\n34 |         .current_dir(&lwext4)\n   |                      ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-sys/build.rs:52:28\n   |\n52 |         generates_bindings(&lwext4, \"build_generic\");\n   |                            ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> lwext4-sys/build.rs:76:28\n   |\n76 |         generates_bindings(&lwext4, \"build_musl-generic\");\n   |                            ^^^^^^^ help: change this to: `lwext4`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&PathBuf` instead of `&Path` involves a new object where a slice will do\n  --> lwext4-sys/build.rs:85:31\n   |\n85 | fn generates_bindings(lwext4: &PathBuf, build_dir: &str) {\n   |                               ^^^^^^^^ help: change this to: `&Path`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/src/ext4.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n  --> lwext4-sys/src/ext4.rs:20:5\n   |\n20 |     pub unsafe fn as_slice(&self, len: usize) -> &[T] {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 46,
      "file": "lwext4-sys/src/ext4.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs are missing a `# Safety` section\n  --> lwext4-sys/src/ext4.rs:24:5\n   |\n24 |     pub unsafe fn as_mut_slice(&mut self, len: usize) -> &mut [T] {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 47,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-07T07:36:42Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-07T07:36:42Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    }
  ]
}