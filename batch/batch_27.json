{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (243d2ca4d 2025-01-06)",
          "commit_hash": "243d2ca4db6f96d2d18aaf3a2381251d38eb6b0b",
          "commit_date": "2025-01-06",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-07-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1736713580327,
        "finish": 1736713581852,
        "duration_ms": 1525,
        "git_time": "2025-01-11 21:16:49 +0800",
        "git_sha": "75b8311a67f1171923e75534468ed4a155cf052a"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "arceos-org",
        "repo": "percpu"
      },
      {
        "user": "arceos-org",
        "repo": "scheduler"
      }
    ],
    "packages": [
      {
        "name": "percpu",
        "repo": {
          "repo_idx": 0,
          "user": "arceos-org",
          "repo": "percpu"
        }
      },
      {
        "name": "percpu_macros",
        "repo": {
          "repo_idx": 0,
          "user": "arceos-org",
          "repo": "percpu"
        }
      },
      {
        "name": "scheduler",
        "repo": {
          "repo_idx": 1,
          "user": "arceos-org",
          "repo": "scheduler"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 3637,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1296,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 168,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 171,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 8250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 5290,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3951,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3944,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 10,
      "duration_ms": 6533,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 5289,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 1799,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 4415,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 4224,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 3846,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 3905,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 248,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 217,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 221,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 221,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 82,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1757,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 30,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 30,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 32,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 31,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2355,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 2368,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 2363,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 2384,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 93,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 222,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 217,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 224,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 220,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 81,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 243,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 222,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 221,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 231,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 653,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 816,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 664,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 249,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 145,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 148,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 154,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 203,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 906,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 899,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 899,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 898,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 260,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 137,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 137,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 136,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 134,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 74,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 653,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 664,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 816,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-06",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:53:1\n   |\n53 | just a global variable, architecture-specific thread pointer register is\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n53 |   just a global variable, architecture-specific thread pointer register is\n   | ++\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:54:1\n   |\n54 | not used.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n54 |   not used.\n   | ++\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:56:1\n   |\n56 | preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n56 |   preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ++\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:57:1\n   |\n57 | when it's being accessing and the current thread happens to be preempted.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n57 |   when it's being accessing and the current thread happens to be preempted.\n   | ++\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:59:1\n   |\n59 | In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n59 |   In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ++\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:60:1\n   |\n60 | to store the base address of per-CPU data area.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n60 |   to store the base address of per-CPU data area.\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:53:1\n   |\n53 | just a global variable, architecture-specific thread pointer register is\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n53 |   just a global variable, architecture-specific thread pointer register is\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:54:1\n   |\n54 | not used.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n54 |   not used.\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:56:1\n   |\n56 | preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n56 |   preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:57:1\n   |\n57 | when it's being accessing and the current thread happens to be preempted.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n57 |   when it's being accessing and the current thread happens to be preempted.\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:59:1\n   |\n59 | In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n59 |   In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ++\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:60:1\n   |\n60 | to store the base address of per-CPU data area.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n60 |   to store the base address of per-CPU data area.\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:53:1\n   |\n53 | just a global variable, architecture-specific thread pointer register is\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n53 |   just a global variable, architecture-specific thread pointer register is\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:54:1\n   |\n54 | not used.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n54 |   not used.\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:56:1\n   |\n56 | preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n56 |   preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:57:1\n   |\n57 | when it's being accessing and the current thread happens to be preempted.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n57 |   when it's being accessing and the current thread happens to be preempted.\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:59:1\n   |\n59 | In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n59 |   In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ++\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:60:1\n   |\n60 | to store the base address of per-CPU data area.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n60 |   to store the base address of per-CPU data area.\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:53:1\n   |\n53 | just a global variable, architecture-specific thread pointer register is\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\n   = note: `#[warn(clippy::doc_lazy_continuation)]` on by default\nhelp: indent this line\n   |\n53 |   just a global variable, architecture-specific thread pointer register is\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:54:1\n   |\n54 | not used.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n54 |   not used.\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:56:1\n   |\n56 | preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n56 |   preemption when accessing per-CPU data. Otherwise, the data may be corrupted\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:57:1\n   |\n57 | when it's being accessing and the current thread happens to be preempted.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n57 |   when it's being accessing and the current thread happens to be preempted.\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:59:1\n   |\n59 | In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n59 |   In this case, we use `TPIDR_EL2` instead of `TPIDR_EL1`\n   | ++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "percpu/src/../README.md",
      "kind": "Clippy(Warn)",
      "raw": "warning: doc list item without indentation\n  --> percpu/src/../README.md:60:1\n   |\n60 | to store the base address of per-CPU data area.\n   | ^\n   |\n   = help: if this is supposed to be its own paragraph, add a blank line\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#doc_lazy_continuation\nhelp: indent this line\n   |\n60 |   to store the base address of per-CPU data area.\n   | ++\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/src/imp.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/src/imp.rs:18:5\n   |\n18 |     percpu_symbol_offset!(_percpu_load_end) - percpu_symbol_offset!(_percpu_load_start)\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the macro `percpu_symbol_offset` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/src/imp.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n   --> percpu/src/imp.rs:98:21\n    |\n98  | /                     core::arch::asm!(\n99  | |                         \"syscall\",\n100 | |                         in(\"eax\") SYS_ARCH_PRCTL,\n101 | |                         in(\"edi\") ARCH_SET_GS,\n102 | |                         in(\"rsi\") tp,\n103 | |                     );\n    | |_____________________^\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/src/imp.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n   --> percpu/src/imp.rs:128:1\n    |\n128 | #[percpu_macros::def_percpu]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this warning originates in the attribute macro `percpu_macros::def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n --> percpu/tests/test_percpu.rs:7:1\n  |\n7 | #[def_percpu]\n  | ^^^^^^^^^^^^^\n  |\n  = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:10:1\n   |\n10 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:13:1\n   |\n13 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:16:1\n   |\n16 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:19:1\n   |\n19 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:22:1\n   |\n22 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "percpu/tests/test_percpu.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] Inline assembly code cannot be analyzed by MIRAI.\n  --> percpu/tests/test_percpu.rs:30:1\n   |\n30 | #[def_percpu]\n   | ^^^^^^^^^^^^^\n   |\n   = note: this warning originates in the attribute macro `def_percpu` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n...   |\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 54,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 55,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n...   |\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 55,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 55,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n...   |\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "src/cfs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CFScheduler<T>`\n   --> src/cfs.rs:111:5\n    |\n111 | /     pub const fn new() -> Self {\n112 | |         Self {\n113 | |             ready_queue: BTreeMap::new(),\n114 | |             min_vruntime: None,\n...   |\n117 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n109 + impl<T> Default for CFScheduler<T> {\n110 +     fn default() -> Self {\n111 +         Self::new()\n112 +     }\n113 + }\n    |\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "src/fifo.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `FifoScheduler<T>`\n  --> src/fifo.rs:29:5\n   |\n29 | /     pub const fn new() -> Self {\n30 | |         Self {\n31 | |             ready_queue: List::new(),\n32 | |         }\n33 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n27 + impl<T> Default for FifoScheduler<T> {\n28 +     fn default() -> Self {\n29 +         Self::new()\n30 +     }\n31 + }\n   |\n\n"
    },
    {
      "cmd_idx": 57,
      "file": "src/round_robin.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `RRScheduler<T, S>`\n  --> src/round_robin.rs:64:5\n   |\n64 | /     pub const fn new() -> Self {\n65 | |         Self {\n66 | |             ready_queue: VecDeque::new(),\n67 | |         }\n68 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n62 + impl<T, const S: usize> Default for RRScheduler<T, S> {\n63 +     fn default() -> Self {\n64 +         Self::new()\n65 +     }\n66 + }\n   |\n\n"
    },
    {
      "cmd_idx": 58,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=scheduler, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\npkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\ntimestamp=2025-01-09 17:12:06.834839093 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building scheduler v0.2.0 (current)\n       Built [   0.297s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    },
    {
      "cmd_idx": 59,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=scheduler, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\npkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\ntimestamp=2025-01-09 17:12:06.177962103 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building scheduler v0.2.0 (current)\n       Built [   0.288s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    },
    {
      "cmd_idx": 61,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=scheduler, checker=SemverChecks\ntoolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\npkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\ncmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\ntimestamp=2025-01-09 17:12:07.505110532 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building scheduler v0.2.0 (current)\n       Built [   0.302s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `aarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    },
    {
      "cmd_idx": 77,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=scheduler, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf\n// timestamp=2025-01-09 17:12:06.181072508 +08:00:00\n    Building scheduler v0.2.0 (current)\n       Built [   0.297s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `riscv64gc-unknown-none-elf` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    },
    {
      "cmd_idx": 78,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=scheduler, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none\n// timestamp=2025-01-09 17:12:06.840517348 +08:00:00\n    Building scheduler v0.2.0 (current)\n       Built [   0.302s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `aarch64-unknown-none` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `aarch64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    },
    {
      "cmd_idx": 79,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=scheduler, checker=SemverChecks\n// toolchain=nightly-2025-01-07-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_7/arceos-org/scheduler\n// cmd=cargo +nightly-2025-01-07-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none\n// timestamp=2025-01-09 17:12:05.36135904 +08:00:00\n    Building scheduler v0.2.0 (current)\n       Built [   0.288s] (current)\n     Parsing scheduler v0.2.0 (current)\n      Parsed [   0.002s] (current)\n    Building scheduler v0.1.3 (baseline)\nerror: running cargo-doc on crate 'scheduler' failed with output:\n-----\n   Compiling libc v0.2.169\n    Checking errno v0.3.10\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `x86_64-unknown-none` target may not support the standard library\n  = note: `std` is required by `errno` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:30:5\n   |\n30 | use std::error::Error;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:32:5\n   |\n32 | use std::io;\n   |     ^^^ can't find crate\n   |\n   = note: the `x86_64-unknown-none` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:151:3\n    |\n151 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:157:5\n    |\n157 |     assert_eq!(error.kind(), new_error.kind());\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:117:3\n    |\n117 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:119:21\n    |\n119 |     let expect = if cfg!(windows) {\n    |                     ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:121:15\n    |\n121 |     } else if cfg!(target_os = \"illumos\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:15\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:123:43\n    |\n123 |     } else if cfg!(target_os = \"wasi\") || cfg!(target_os = \"emscripten\") {\n    |                                           ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:125:15\n    |\n125 |     } else if cfg!(target_os = \"haiku\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:131:25\n    |\n131 |     let errno_code = if cfg!(target_os = \"haiku\") {\n    |                         ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `cfg` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:133:15\n    |\n133 |     } else if cfg!(target_os = \"hurd\") {\n    |               ^^^\n    |\n    = note: `cfg` is in scope, but it is an attribute: `#[cfg]`\nhelp: consider importing this macro\n    |\n28  + use core::cfg;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:140:5\n    |\n140 |     assert_eq!(errno().to_string(), expect);\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:141:5\n    |\n141 |     assert_eq!(\n    |     ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n28  + use core::assert_eq;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:110:3\n    |\n110 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find attribute `test` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:103:3\n    |\n103 | #[test]\n    |   ^^^^\n    |\nhelp: consider importing this attribute macro\n    |\n28  + use core::prelude::rust_2024::test;\n    |\n\nerror: cannot find macro `write` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:28\n   |\n60 |             Err(fm_err) => write!(\n   |                            ^^^^^\n   |\nhelp: consider importing this macro\n   |\n28 + use core::write;\n   |\n\nerror: cannot find attribute `derive` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:42:3\n   |\n42 | #[derive(Copy, Clone, Eq, Ord, PartialEq, PartialOrd, Hash)]\n   |   ^^^^^^\n   |\nhelp: consider importing this attribute macro\n   |\n28 + use core::prelude::rust_2024::derive;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:59:13\n   |\n59 |             Ok(desc) => fmt.write_str(desc),\n   |             ^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Ok;\n   |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:60:13\n   |\n60 |             Err(fm_err) => write!(\n   |             ^^^ not found in this scope\n   |\nhelp: consider importing this tuple variant\n   |\n28 + use core::result::Result::Err;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:71:6\n   |\n71 | impl From<Errno> for i32 {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nerror[E0405]: cannot find trait `From` in this scope\n  --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/errno-0.3.10/src/lib.rs:87:6\n   |\n87 | impl From<Errno> for io::Error {\n   |      ^^^^ not found in this scope\n   |\nhelp: consider importing this trait\n   |\n28 + use core::convert::From;\n   |\n\nSome errors have detailed explanations: E0405, E0463, E0531, E0583.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `errno` (lib) due to 24 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate scheduler v0.1.3\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add scheduler@=0.1.3 &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate scheduler v0.1.3\n"
    }
  ]
}