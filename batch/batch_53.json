{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1740147305531,
        "finish": 1740147306446,
        "duration_ms": 914,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "axfs_ramfs"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axfs_vfs"
      }
    ],
    "packages": [
      {
        "name": "",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "axfs_ramfs"
        }
      },
      {
        "name": "axfs_vfs",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "axfs_vfs"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=LayoutParseError cargo",
      "count": 1,
      "duration_ms": 0,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 12,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 0,
      "duration_ms": 915,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 1296,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 3552,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 1037,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 3506,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 75,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1296,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "batch_52/shilei-massclouds/axfs_ramfs",
      "kind": "Cargo",
      "raw": "\n   0: 无法解析 `batch_52/shilei-massclouds/axfs_ramfs` 内的 Rust 项目布局\n   1: 无法读取 cargo metadata 的结果：`cargo metadata` exited with an error: error: current package believes it's in a workspace when it's not:\n      current:   /home/runner/check/batch_52/shilei-massclouds/axfs_ramfs/procfs/Cargo.toml\n      workspace: /home/runner/check/batch_52/shilei-massclouds/axfs_ramfs/Cargo.toml\n\n      this may be fixable by adding `procfs` to the `workspace.members` array of the manifest located at: /home/runner/check/batch_52/shilei-massclouds/axfs_ramfs/Cargo.toml\n      Alternatively, to keep it out of the workspace, add the package to the `workspace.exclude` array, or add an empty `[workspace]` table to the package's manifest.\n   1: \n\nLocation:\n   src/layout/mod.rs:60\n\n  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ SPANTRACE ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n   0: os_checker::run_checker::try_new with user=\"shilei-massclouds\" repo=\"axfs_ramfs\"\n      at src/run_checker/mod.rs:219\n\nBacktrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it.\nRun with RUST_BACKTRACE=full to include source snippets."
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 48 to 49)\n-use alloc::{sync::Arc, vec::Vec};\n-use alloc::string::String;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 51 to 51)\n+use alloc::string::String;\n+use alloc::{sync::Arc, vec::Vec};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 55 to 55)\n+pub use self::structs::{FileSystemInfo, LinuxDirent64, VfsNodeAttrValid, DT_};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 56 to 56)\n-pub use self::structs::{VfsNodeAttrValid, FileSystemInfo, DT_, LinuxDirent64};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 104 to 104)\n-    fn alloc_inode(&self, _ty: VfsNodeType, _uid: u32, _gid: u32, _mode: i32) -> VfsResult<VfsNodeRef> {\n+    fn alloc_inode(\n+        &self,\n+        _ty: VfsNodeType,\n+        _uid: u32,\n+        _gid: u32,\n+        _mode: i32,\n+    ) -> VfsResult<VfsNodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 207 to 207)\n-    fn create_child(&self, _fname: &str, _ty: VfsNodeType, _uid: u32, _gid: u32, _mode: i32) -> VfsResult<VfsNodeRef> {\n+    fn create_child(\n+        &self,\n+        _fname: &str,\n+        _ty: VfsNodeType,\n+        _uid: u32,\n+        _gid: u32,\n+        _mode: i32,\n+    ) -> VfsResult<VfsNodeRef> {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 257 to 257)\n-        Self { path: String::from(path), fs }\n+        Self {\n+            path: String::from(path),\n+            fs,\n+        }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 368 to 368)\n-        self.main_fs.root_dir().create(path, FileType::Dir, uid, gid, 0o777)?;\n+        self.main_fs\n+            .root_dir()\n+            .create(path, FileType::Dir, uid, gid, 0o777)?;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/lib.rs (original lines from 411 to 411)\n-            Ok((self.main_fs.clone(), path.to_owned()))        // not matched any mount point\n+            Ok((self.main_fs.clone(), path.to_owned())) // not matched any mount point\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/macros.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/macros.rs (original lines from 48 to 48)\n-        fn create(&self, _path: &str, _ty: $crate::VfsNodeType, _uid: u32, _gid: u32, _mode: i32) -> $crate::VfsResult {\n+        fn create(\n+            &self,\n+            _path: &str,\n+            _ty: $crate::VfsNodeType,\n+            _uid: u32,\n+            _gid: u32,\n+            _mode: i32,\n+        ) -> $crate::VfsResult {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/structs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/structs.rs (original lines from 287 to 287)\n-    pub const fn new(mode: VfsNodePerm, ty: VfsNodeType, size: u64, blocks: u64, uid: u32, gid: u32) -> Self {\n+    pub const fn new(\n+        mode: VfsNodePerm,\n+        ty: VfsNodeType,\n+        size: u64,\n+        blocks: u64,\n+        uid: u32,\n+        gid: u32,\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/structs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/src/structs.rs (original lines from 474 to 478)\n-    pub d_ino:      u64,    // 64-bit inode number\n-    pub d_off:      i64,    // 64-bit offset to next structure\n-    pub d_reclen:   u16,    // Size of this dirent\n-    pub d_type:     u8,     // File type\n-    pub d_name:     [u8; 0],// Filename (null-terminated)\n+    pub d_ino: u64,      // 64-bit inode number\n+    pub d_off: i64,      // 64-bit offset to next structure\n+    pub d_reclen: u16,   // Size of this dirent\n+    pub d_type: u8,      // File type\n+    pub d_name: [u8; 0], // Filename (null-terminated)\n"
    },
    {
      "cmd_idx": 3,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axfs_vfs, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 23:39:16.265962377 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axfs_vfs v0.1.0 (current)\n       Built [   0.841s] (current)\n     Parsing axfs_vfs v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/target/semver-checks/local-axfs_vfs-0_1_0-5f34a8e9237717c9/target/x86_64-unknown-linux-gnu/doc/axfs_vfs.json\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/path.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible attempt to subtract with overflow\n  --> src/path.rs:41:32\n   |\n41 |                 } else if &buf[buf.len() - 1..] != \"/\" {\n   |                                ^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs_vfs, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 23:39:14.969502748 +08:00:00\n    Building axfs_vfs v0.1.0 (current)\n       Built [   0.841s] (current)\n     Parsing axfs_vfs v0.1.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_52/shilei-massclouds/axfs_vfs/axfs_vfs/target/semver-checks/local-axfs_vfs-0_1_0-5f34a8e9237717c9/target/x86_64-unknown-linux-gnu/doc/axfs_vfs.json\n"
    }
  ]
}