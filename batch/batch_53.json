{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-linux-gnu",
              "aarch64-unknown-linux-musl",
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-linux-gnu",
              "riscv64gc-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-linux-musl",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-linux-musl",
              "rust-std-aarch64-unknown-none",
              "rust-std-aarch64-unknown-none-softfloat",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-linux-gnu",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-riscv64imac-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-musl",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-01-18",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none-softfloat",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "llvm-tools-preview",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_53/shilei-massclouds/axhal/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-01-18",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none-softfloat",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "llvm-tools-preview",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_53/shilei-massclouds/axlog2/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1739720912773,
        "finish": 1739721141487,
        "duration_ms": 228714,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "shilei-massclouds",
        "repo": "axhal"
      },
      {
        "user": "shilei-massclouds",
        "repo": "axlog2"
      }
    ],
    "packages": [
      {
        "name": "axhal",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "axhal"
        }
      },
      {
        "name": "rt_axhal",
        "repo": {
          "repo_idx": 0,
          "user": "shilei-massclouds",
          "repo": "axhal"
        }
      },
      {
        "name": "axlog2",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "axlog2"
        }
      },
      {
        "name": "rt_axlog2",
        "repo": {
          "repo_idx": 1,
          "user": "shilei-massclouds",
          "repo": "axlog2"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 18,
      "duration_ms": 124,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 18,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 18,
      "duration_ms": 123,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat  --no-deps",
      "count": 0,
      "duration_ms": 123,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 121,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 118,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat ",
      "count": 1,
      "duration_ms": 5601,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 998,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none ",
      "count": 1,
      "duration_ms": 2466,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 6744,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 3028,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 773,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 6227,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 6679,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 4749,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 8654,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 8231,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 8259,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 5601,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 773,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6744,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3028,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 2466,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6679,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6227,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 998,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4749,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 2,
      "duration_ms": 99,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 2,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 2,
      "duration_ms": 98,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat  --no-deps",
      "count": 0,
      "duration_ms": 121,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 120,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 122,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 217,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 284,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 6287,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 4497,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 6664,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 8338,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 8211,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 8440,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6287,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4497,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 217,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6664,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 284,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 112,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat  --no-deps",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat ",
      "count": 1,
      "duration_ms": 3152,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 2218,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none ",
      "count": 1,
      "duration_ms": 1147,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 4227,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 1685,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 552,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 4635,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 4357,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 4205,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6853,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6762,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6874,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 3152,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 552,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4227,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1685,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1147,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4357,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4635,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 2218,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4205,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 96,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat  --no-deps",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 1987,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 608,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 1053,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 6351,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 4579,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 6561,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6722,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6799,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 6784,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6351,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4579,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1987,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6561,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1053,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 608,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-18",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/aarch64/context.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/context.rs (original lines from 185 to 189)\n-    let mut regs = unsafe {\n-        core::slice::from_raw_parts_mut(\n-            regs as *mut TrapFrame, 1\n-        )\n-    };\n+    let mut regs = unsafe { core::slice::from_raw_parts_mut(regs as *mut TrapFrame, 1) };\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 3 to 3)\n+use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 5 to 5)\n-use crate::trap::SyscallArgs;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 91 to 94)\n-    [\n-        tf.r[0], tf.r[1], tf.r[2],\n-        tf.r[3], tf.r[4], tf.r[5],\n-    ].map(|x| x as usize)\n+    [tf.r[0], tf.r[1], tf.r[2], tf.r[3], tf.r[4], tf.r[5]].map(|x| x as usize)\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/aarch64/trap.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/aarch64/trap.rs (original lines from 99 to 99)\n-    F: FnOnce(SyscallArgs, usize) -> usize\n+    F: FnOnce(SyscallArgs, usize) -> usize,\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 10 to 10)\n+use axerrno::{linux_err, LinuxError};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 13 to 13)\n-use axerrno::{LinuxError, linux_err};\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 37 to 38)\n-pub const SR_SPIE:  usize = 0x00000020; /* Previous Supervisor IE */\n-pub const SR_SPP:   usize = 0x00000100; /* Previously Supervisor */\n+pub const SR_SPIE: usize = 0x00000020; /* Previous Supervisor IE */\n+pub const SR_SPP: usize = 0x00000100; /* Previously Supervisor */\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 172 to 192)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   lb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   li {x}, 0\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = out(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   lb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   li {x}, 0\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = out(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 200 to 219)\n-    unsafe { core::arch::asm!(\n-        \"1:\",\n-        \"   sb {x}, ({ptr})\",\n-        \"2:\",\n-        \"   .section .fixup,\\\"ax\\\"\",\n-        \"   .balign 4\",\n-        \"3:\",\n-        \"   li {err}, {err_val}\",\n-        \"   jump 2b, {_tmp}\",\n-        \"   .previous\",\n-        \"   .section __ex_table,\\\"a\\\"\",\n-        \"   .balign 8\",\n-        \"   .dword 1b, 3b\",\n-        \"   .previous\",\n-        err = inout(reg) err,\n-        x = in(reg) x,\n-        ptr = in(reg) ptr,\n-        err_val = const (-(LinuxError::EFAULT as isize)),\n-        _tmp = out(reg) _tmp,\n-    )}\n+    unsafe {\n+        core::arch::asm!(\n+            \"1:\",\n+            \"   sb {x}, ({ptr})\",\n+            \"2:\",\n+            \"   .section .fixup,\\\"ax\\\"\",\n+            \"   .balign 4\",\n+            \"3:\",\n+            \"   li {err}, {err_val}\",\n+            \"   jump 2b, {_tmp}\",\n+            \"   .previous\",\n+            \"   .section __ex_table,\\\"a\\\"\",\n+            \"   .balign 8\",\n+            \"   .dword 1b, 3b\",\n+            \"   .previous\",\n+            err = inout(reg) err,\n+            x = in(reg) x,\n+            ptr = in(reg) ptr,\n+            err_val = const (-(LinuxError::EFAULT as isize)),\n+            _tmp = out(reg) _tmp,\n+        )\n+    }\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/mod.rs (original lines from 276 to 277)\n-pub fn early_init() {\n-}\n+pub fn early_init() {}\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 17 to 17)\n-pub const LINUX_SYSCALL_MOUNT:usize = 0x28;\n+pub const LINUX_SYSCALL_MOUNT: usize = 0x28;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/riscv/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/riscv/sysno.rs (original lines from 47 to 47)\n-pub const LINUX_SYSCALL_SETGID:usize = 0x90;\n+pub const LINUX_SYSCALL_SETGID: usize = 0x90;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/arch/x86_64/sysno.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/arch/x86_64/sysno.rs (original lines from 85 to 85)\n-pub const LINUX_SYSCALL_SETGID:usize = 106;\n+pub const LINUX_SYSCALL_SETGID: usize = 106;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 5 to 5)\n-use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 7 to 7)\n+use spinbase::SpinNoIrq;\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 12 to 12)\n-\tlet mut seed = PARK_MILLER_LEHMER_SEED.lock();\n+    let mut seed = PARK_MILLER_LEHMER_SEED.lock();\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/misc.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/axhal/src/misc.rs (original lines from 19 to 19)\n-\t    *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n+        *seed = ((u64::from(*seed) * 48271) % RAND_MAX) as u32;\n"
    },
    {
      "cmd_idx": 6,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-02-16 23:48:54.980247954 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 7,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-16 23:48:55.981232577 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking critical-section v1.2.0\n    Checking nb v0.1.3\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n    Checking log v0.4.25\n    Checking sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 8,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axhal, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-02-16 23:48:58.449748574 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.19\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking log v0.4.25\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking x86_64 v0.14.13\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking static_assertions v1.1.0\n    Checking x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 15,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:49:53.602562939 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 16,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:50:01.835652673 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 17,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=axhal, checker=Outdated\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:50:10.096469181 +08:00:00\n\nName            Project  Compat  Latest  Kind    Platform\n----            -------  ------  ------  ----    --------\naarch64-cpu     9.4.0    ---     10.0.0  Normal  cfg(target_arch = \"aarch64\")\nriscv           0.10.1   ---     0.12.1  Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\nsbi-rt          0.0.2    ---     0.0.3   Normal  cfg(any(target_arch = \"riscv32\", target_arch = \"riscv64\"))\ntock-registers  0.8.1    ---     0.9.0   Normal  cfg(target_arch = \"aarch64\")\nx2apic          0.4.3    ---     0.5.0   Normal  cfg(target_arch = \"x86_64\")\nx86_64          0.14.13  ---     0.15.2  Normal  cfg(target_arch = \"x86_64\")\n"
    },
    {
      "cmd_idx": 18,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:48:49.378841564 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.38\n    Checking log v0.4.25\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling toml_edit v0.19.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 19,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:49:05.198041825 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling nb v1.1.0\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n   Compiling static_assertions v1.1.0\n   Compiling nb v0.1.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling critical-section v1.2.0\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.25\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.8.0\n[2025-02-16T15:49:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 20,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:48:58.451799467 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.93\n   Compiling cfg-if v1.0.0\n   Compiling unicode-ident v1.0.16\n   Compiling indexmap v2.7.1\n   Compiling quote v1.0.38\n   Compiling log v0.4.25\n   Compiling syn v2.0.98\n[2025-02-16T15:49:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling toml_edit v0.19.15\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 21,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:49:05.973289056 +08:00:00\n   Compiling bit_field v0.10.2\n   Compiling rustversion v1.0.19\n   Compiling bitflags v2.8.0\n   Compiling cfg-if v1.0.0\n   Compiling volatile v0.4.6\n   Compiling bitflags v1.3.2\n   Compiling raw-cpuid v10.7.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling paste v1.0.15\n   Compiling x86 v0.52.0\n   Compiling log v0.4.25\n[2025-02-16T15:49:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling bit v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n   Compiling raw-cpuid v11.3.0\n   Compiling x86_64 v0.14.13\n   Compiling lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling static_assertions v1.1.0\n   Compiling ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-02-16 23:48:55.982980299 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.19\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking log v0.4.25\n   Compiling x86 v0.52.0\n   Compiling paste v1.0.15\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking bit v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n    Checking raw-cpuid v11.3.0\n    Checking x86_64 v0.14.13\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking static_assertions v1.1.0\n    Checking x2apic v0.4.3\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:49:09.828437862 +08:00:00\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.16\n    Checking cfg-if v1.0.0\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking tock-registers v0.8.1\n    Checking aarch64-cpu v9.4.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:16|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 24,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:49:16.509620063 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n    Checking nb v1.1.0\n   Compiling unicode-ident v1.0.16\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n   Compiling riscv v0.10.1\n    Checking embedded-hal v0.2.7\n   Compiling toml_edit v0.19.15\n   Compiling quote v1.0.38\n    Checking sbi-spec v0.0.4\n    Checking bit_field v0.10.2\n    Checking critical-section v1.2.0\n    Checking log v0.4.25\n    Checking sbi-rt v0.0.2\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:22|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 25,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:48:54.982124339 +08:00:00\n    Building axhal v0.1.0 (current)\nerror: running cargo-doc on crate 'axhal' failed with output:\n-----\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking critical-section v1.2.0\n    Checking nb v0.1.3\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n    Checking log v0.4.25\n    Checking sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_53/shilei-massclouds/axhal/axhal)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-27aa013ee5514833/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axhal v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axhal/axhal --features alloc,default,fp_simd,irq,monolithic,paging,smp &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axhal v0.1.0\n"
    },
    {
      "cmd_idx": 26,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:49:22.739892725 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling rustversion v1.0.19\n   Compiling indexmap v2.7.1\n   Compiling proc-macro2 v1.0.93\n    Checking bit_field v0.10.2\n   Compiling unicode-ident v1.0.16\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.8.0\n   Compiling toml_edit v0.19.15\n    Checking bitflags v1.3.2\n    Checking volatile v0.4.6\n    Checking raw-cpuid v10.7.0\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n   Compiling quote v1.0.38\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling paste v1.0.15\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:27|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 27,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 28,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 28,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 29,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 7 to 7)\n-use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 29,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal/src/main.rs (original lines from 9 to 9)\n+use core::panic::PanicInfo;\n"
    },
    {
      "cmd_idx": 42,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:49:34.158993053 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling proc-macro2 v1.0.93\n    Checking cfg-if v1.0.0\n   Compiling indexmap v2.7.1\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling unicode-ident v1.0.16\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n    Checking bit_field v0.10.2\n   Compiling toml_edit v0.19.15\n    Checking critical-section v1.2.0\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n    Checking sbi-rt v0.0.2\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bitflags v2.8.0\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:40|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 43,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:49:40.448443255 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling rustversion v1.0.19\n   Compiling indexmap v2.7.1\n    Checking bit_field v0.10.2\n   Compiling proc-macro2 v1.0.93\n    Checking bitflags v2.8.0\n    Checking cfg-if v1.0.0\n    Checking bitflags v1.3.2\n   Compiling unicode-ident v1.0.16\n   Compiling toml_edit v0.19.15\n    Checking volatile v0.4.6\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\n    Checking raw-cpuid v10.7.0\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:44|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 44,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:49:09.003571806 +08:00:00\n[2025-02-16T15:49:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 45,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:49:27.491972486 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling unicode-ident v1.0.16\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking tock-registers v0.8.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking aarch64-cpu v9.4.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase#a3496db8)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:49:34|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 46,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:49:09.338056819 +08:00:00\n[2025-02-16T15:49:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x2apic v0.4.3\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 47,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axhal, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axhal/rt_axhal\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:49:09.223437019 +08:00:00\n[2025-02-16T15:49:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:49:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal.git#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 54,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axlog2, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \ntimestamp=2025-02-16 23:50:55.731774827 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling autocfg v1.4.0\n   Compiling indexmap v2.7.1\n   Compiling num-traits v0.2.19\n    Checking cfg-if v1.0.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 55,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axlog2, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-16 23:50:57.951826282 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking nb v1.1.0\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n   Compiling num-traits v0.2.19\n    Checking critical-section v1.2.0\n    Checking bit_field v0.10.2\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 56,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=axlog2, checker=SemverChecks\ntoolchain=nightly-2024-01-18, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-02-16 23:50:59.101075154 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking cfg-if v1.0.0\n   Compiling num-traits v0.2.19\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n    Checking volatile v0.4.6\n    Checking bit_field v0.10.2\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 66,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:50:52.578930222 +08:00:00\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling autocfg v1.4.0\n   Compiling indexmap v2.7.1\n   Compiling num-traits v0.2.19\n    Checking cfg-if v1.0.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 67,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:51:03.332936279 +08:00:00\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling riscv v0.10.1\n   Compiling void v1.0.2\n   Compiling static_assertions v1.1.0\n   Compiling nb v0.1.3\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling bit_field v0.10.2\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.2.0\n   Compiling sbi-rt v0.0.2\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.8.0\n   Compiling log v0.4.25\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n[2025-02-16T15:51:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:51:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\n"
    },
    {
      "cmd_idx": 68,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:50:59.103049116 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n   Compiling cfg-if v1.0.0\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.8.0\n   Compiling log v0.4.25\n[2025-02-16T15:50:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:50:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling indexmap v2.7.1\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 69,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:51:03.887635896 +08:00:00\n   Compiling rustversion v1.0.19\n   Compiling cfg-if v1.0.0\n   Compiling volatile v0.4.6\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling bit_field v0.10.2\n   Compiling kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling bitflags v2.8.0\n   Compiling spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling log v0.4.25\n[2025-02-16T15:51:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:51:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling x86_64 v0.14.13\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 70,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-02-16 23:50:57.953853963 +08:00:00\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling rustversion v1.0.19\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n    Checking cfg-if v1.0.0\n   Compiling num-traits v0.2.19\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n    Checking volatile v0.4.6\n    Checking bit_field v0.10.2\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 71,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:51:09.377402684 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n    Checking cfg-if v1.0.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n   Compiling indexmap v2.7.1\n    Checking log v0.4.25\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\n15:51:13|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 72,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:51:13.73670251 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling serde v1.0.217\n   Compiling hashbrown v0.15.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n    Checking void v1.0.2\n   Compiling indexmap v2.7.1\n   Compiling riscv v0.10.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n    Checking bit_field v0.10.2\n    Checking critical-section v1.2.0\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking log v0.4.25\n    Checking bitflags v2.8.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n   Compiling toml_edit v0.19.15\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\n15:51:18|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 73,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=SemverChecks\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:50:55.733647105 +08:00:00\n    Building axlog2 v0.1.0 (current)\nerror: running cargo-doc on crate 'axlog2' failed with output:\n-----\n   Compiling toml_edit v0.19.15\n    Checking nb v1.1.0\n    Checking void v1.0.2\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.10.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n    Checking sbi-spec v0.0.4\n    Checking embedded-hal v0.2.7\n   Compiling num-traits v0.2.19\n    Checking critical-section v1.2.0\n    Checking bit_field v0.10.2\n    Checking sbi-rt v0.0.2\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking log v0.4.25\nerror: multiple max_level_* features set\n   --> /home/runner/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/log-0.4.25/src/lib.rs:368:1\n    |\n368 | compile_error!(\"multiple max_level_* features set\");\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `log` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n\n-----\n\nerror: failed to build rustdoc for crate axlog2 v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2 --features default,log-level-debug,log-level-error,log-level-info,log-level-off,log-level-trace,log-level-warn,std &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate axlog2 v0.1.0\n"
    },
    {
      "cmd_idx": 74,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:51:18.869041776 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n   Compiling rustversion v1.0.19\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n    Checking bitflags v2.8.0\n    Checking bit_field v0.10.2\n    Checking volatile v0.4.6\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking x86_64 v0.14.13\n   Compiling toml_edit v0.19.15\n    Checking log v0.4.25\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:51:23|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 90,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:51:29.640014612 +08:00:00\n   Compiling equivalent v1.0.2\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling winnow v0.5.40\n   Compiling toml_datetime v0.6.8\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n    Checking static_assertions v1.1.0\n   Compiling unicode-ident v1.0.16\n   Compiling riscv v0.10.1\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking sbi-spec v0.0.4\n   Compiling toml_edit v0.19.15\n    Checking log v0.4.25\n    Checking bit_field v0.10.2\n    Checking critical-section v1.2.0\n   Compiling quote v1.0.38\n    Checking sbi-rt v0.0.2\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking bitflags v2.8.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:51:35|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 91,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:51:35.993948089 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.19\n   Compiling indexmap v2.7.1\n    Checking cfg-if v1.0.0\n   Compiling proc-macro2 v1.0.93\n    Checking bitflags v2.8.0\n   Compiling unicode-ident v1.0.16\n    Checking volatile v0.4.6\n    Checking bitflags v1.3.2\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.19.15\n    Checking x86_64 v0.14.13\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/addr.rs:387:51\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> Option<usize>`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n387 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.13/src/structures/paging/page.rs:284:51\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> (usize, Option<usize>) {\n    |                                                   ^^^^^^^^^^^^^^^^^^^^^^ expected `Option<usize>`, found `(usize, Option<usize>)`\n    |\n    = note: expected signature `fn(&Page<_>, &Page<_>) -> Option<usize>`\n               found signature `fn(&Page<_>, &Page<_>) -> (usize, Option<usize>)`\nhelp: change the output type to match the trait\n    |\n284 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ~~~~~~~~~~~~~\n\nFor more information about this error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:51:40|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 92,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:51:05.575102239 +08:00:00\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n[2025-02-16T15:50:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:50:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling tock-registers v0.8.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling aarch64-cpu v9.4.0\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 93,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Rapx\n// toolchain=nightly-2024-01-18, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 23:51:23.07633996 +08:00:00\n   Compiling hashbrown v0.15.2\n   Compiling serde v1.0.217\n   Compiling equivalent v1.0.2\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.5.40\n    Checking cfg-if v1.0.0\n   Compiling proc-macro2 v1.0.93\n   Compiling indexmap v2.7.1\n   Compiling unicode-ident v1.0.16\n    Checking log v0.4.25\n   Compiling quote v1.0.38\n   Compiling toml_edit v0.19.15\n    Checking bitflags v2.8.0\n   Compiling syn v2.0.98\n    Checking kernel_guard_base v0.1.0 (ssh://git@github.com/shilei-massclouds/kernel_guard_base#4e672f3e)\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n    Checking tock-registers v0.8.1\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n    Checking aarch64-cpu v9.4.0\n    Checking spinbase v0.1.0 (ssh://git@github.com/shilei-massclouds/spinbase.git#a3496db8)\n    Checking ratio v0.1.0 (ssh://git@github.com/shilei-massclouds/ratio#bc2f2303)\n    Checking static_assertions v1.1.0\n    Checking memory_addr v0.1.0 (ssh://git@github.com/shilei-massclouds/memory_addr#8d24a00e)\n    Checking lazy_init v0.1.0 (ssh://git@github.com/shilei-massclouds/lazy_init#3cee00cf)\n   Compiling axconfig v0.1.0 (ssh://git@github.com/shilei-massclouds/axconfig#51b81e4a)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling percpu_macros2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\nerror[E0583]: file not found for module `aarch64_common`\n --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/mod.rs:5:9\n  |\n5 |         mod aarch64_common;\n  |         ^^^^^^^^^^^^^^^^^^^\n  |\n  = help: to create the module `aarch64_common`, create file \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common.rs\" or \"/home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/aarch64_common/mod.rs\"\n  = note: if there is a `mod aarch64_common` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n15:51:29|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 94,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-02-16 23:51:08.174581566 +08:00:00\n   Compiling bitflags v1.3.2\n   Compiling x86 v0.52.0\n[2025-02-16T15:51:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:51:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling paste v1.0.15\n   Compiling quote v1.0.38\n   Compiling raw-cpuid v10.7.0\n   Compiling bit v0.1.1\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `console_init` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:17:15\n   |\n17 |     platform::console_init();\n   |               ^^^^^^^^^^^^ not found in `platform`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 95,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=rt_axlog2, checker=Lockbud\n// toolchain=nightly-2024-01-18, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_53/shilei-massclouds/axlog2/rt_axlog2\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:51:07.564670539 +08:00:00\n   Compiling proc-macro2 v1.0.93\n[2025-02-16T15:51:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1453:11: 1453:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.25/src/lib.rs:1456:13: 1456:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T15:51:03Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu2 v0.1.0 (ssh://git@github.com/shilei-massclouds/percpu2#2fa7f00e)\n   Compiling early_console v0.1.0 (ssh://git@github.com/shilei-massclouds/early_console.git#8bc0d219)\n   Compiling axerrno v0.1.0 (ssh://git@github.com/shilei-massclouds/axerrno#892169aa)\n   Compiling arch_boot v0.1.0 (ssh://git@github.com/shilei-massclouds/arch_boot.git#8663e839)\n   Compiling axhal v0.1.0 (ssh://git@github.com/shilei-massclouds/axhal#db90ff50)\nerror[E0432]: unresolved imports `platform::getchar`, `platform::putchar`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:12:20\n   |\n12 | pub use platform::{getchar, putchar};\n   |                    ^^^^^^^  ^^^^^^^ no `putchar` in `platform`\n   |                    |\n   |                    no `getchar` in `platform`\n\nerror[E0433]: failed to resolve: unresolved import\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/platform/dummy/mod.rs:31:69\n   |\n31 |     pub(crate) fn platform_regions() -> impl Iterator<Item = crate::mem::MemRegion> {\n   |                                                                     ^^^\n   |                                                                     |\n   |                                                                     unresolved import\n   |                                                                     help: a similar path exists: `core::mem`\n\nerror[E0425]: cannot find function `putchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:23:19\n   |\n23 |         platform::putchar(*c);\n   |                   ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::putchar;\n   |\nhelp: if you import `putchar`, refer to it directly\n   |\n23 -         platform::putchar(*c);\n23 +         putchar(*c);\n   |\n\nerror[E0425]: cannot find function `getchar` in module `platform`\n  --> /home/runner/.cargo/git/checkouts/early_console-7e3c35ca140a48a7/8bc0d21/early_console/src/lib.rs:31:36\n   |\n31 |         if let Some(c) = platform::getchar() {\n   |                                    ^^^^^^^ not found in `platform`\n   |\nhelp: consider importing this function\n   |\n12 + use crate::platform::console::getchar;\n   |\nhelp: if you import `getchar`, refer to it directly\n   |\n31 -         if let Some(c) = platform::getchar() {\n31 +         if let Some(c) = getchar() {\n   |\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `early_console` (lib) due to 4 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}