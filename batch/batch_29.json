{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "aarch64-unknown-none",
              "loongarch64-unknown-none",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-linux-gnu",
              "x86_64-unknown-none"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-aarch64-unknown-none",
              "rust-std-loongarch64-unknown-none",
              "rust-std-riscv64gc-unknown-none-elf",
              "rust-std-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-none",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1740147290714,
        "finish": 1740147291632,
        "duration_ms": 918,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "dbydd",
        "repo": "driver_usb"
      },
      {
        "user": "elliott10",
        "repo": "e1000-driver"
      }
    ],
    "packages": [
      {
        "name": "driver_usb",
        "repo": {
          "repo_idx": 0,
          "user": "dbydd",
          "repo": "driver_usb"
        }
      },
      {
        "name": "e1000-driver",
        "repo": {
          "repo_idx": 1,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      },
      {
        "name": "e1000-driver-test",
        "repo": {
          "repo_idx": 1,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 1,
      "duration_ms": 166,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 0,
      "duration_ms": 4887,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 4833,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 4,
      "duration_ms": 7355,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 6353,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 12380,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 94,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 745,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 88,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 4833,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 25,
      "duration_ms": 105,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 25,
      "duration_ms": 107,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 173,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 172,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf ",
      "count": 1,
      "duration_ms": 625,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 673,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64imac-unknown-none-elf ",
      "count": 0,
      "duration_ms": 263,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 219,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64imac-unknown-none-elf ",
      "count": 0,
      "duration_ms": 1313,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 1290,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 122,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 125,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 625,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 673,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 18,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 118,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 1300,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 1722,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 219,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/usb/universal_drivers/uvc_drivers/uvc_spec_transfer.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/usb/universal_drivers/uvc_drivers/uvc_spec_transfer.rs (original lines from 57 to 63)\n-        unsafe {\n-            ptr::write_bytes(\n-                self as *mut UVCStreamControlBlock,\n-                0u8,\n-                1\n-            )\n-        };\n+        unsafe { ptr::write_bytes(self as *mut UVCStreamControlBlock, 0u8, 1) };\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=driver_usb, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_28/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 22:49:47.280977127 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building driver_usb v0.1.0 (current)\nerror: running cargo-doc on crate 'driver_usb' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking accessor v0.3.3\n    Checking bitflags v2.8.0\n    Checking pci_types v0.6.2\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.38\n   Compiling syn v2.0.98\n    Checking spinning_top v0.3.0\n    Checking tock-registers v0.9.0\n    Checking driver_common v0.1.0 (https://github.com/kern-crates/driver_common.git#2e86ed35)\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/kern-crates/memory_addr.git#8d24a00e)\n   Compiling num-derive v0.3.3\n   Compiling const-enum v0.1.0 (https://github.com/dbydd/const-enum-new.git#ad1a0106)\n   Compiling num-derive v0.4.2\n    Checking xhci v0.9.2 (https://github.com/dbydd/xhci.git#5a4ad17c)\n Documenting driver_usb v0.1.0 (/home/runner/check/batch_28/dbydd/driver_usb/driver_usb)\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:18:6\n   |\n18 | impl<T> OSAbstractions for PlatAbstraction {\n   |      ^ unconstrained type parameter\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:50:6\n   |\n50 | ) -> Option<XHCIPCIDriver<'a>> {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:73:24\n   |\n73 | impl BaseDriverOps for XHCIPCIDriver<'_> {\n   |                        ^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:74:20\n   |\n74 |     fn device_name(&self) -> &str {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:78:20\n   |\n78 |     fn device_type(&self) -> driver_common::DeviceType {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nSome errors have detailed explanations: E0207, E0282.\nFor more information about an error, try `rustc --explain E0207`.\nerror: could not document `driver_usb`\n\n-----\n\nerror: failed to build rustdoc for crate driver_usb v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_28/dbydd/driver_usb/driver_usb --features default,driver_common,packed_drivers,pci,xhci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_usb v0.1.0\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/usb/descriptors/desc_uvc/uvc_interfaces.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:343:19\n    |\n343 |         let len = raw[0];\n    |                   ^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/usb/descriptors/desc_uvc/uvc_interfaces.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:440:19\n    |\n440 |         let len = raw[0];\n    |                   ^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/usb/descriptors/desc_uvc/uvc_interfaces.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:487:34\n    |\n487 |                     frame_index: raw[3],\n    |                                  ^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/usb/descriptors/desc_uvc/uvc_interfaces.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible index out of bounds\n   --> src/usb/descriptors/desc_uvc/uvc_interfaces.rs:549:34\n    |\n549 |                     frame_index: raw[3],\n    |                                  ^^^^^^\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rapx",
      "raw": "pkg=driver_usb, checker=Rapx\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_28/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-16 22:50:13.608717679 +08:00:00\n\nwarning: Double free detected.\n   --> src/host/data_structures/host_controllers/xhci/context.rs:228:5\n    |\n228 |     }\n    |     - Double free detected.\n    |\nwarning: Dangling pointer detected.\n   --> src/host/data_structures/host_controllers/xhci/context.rs:207:1\n    |\n207 | / pub fn new(entries: u32, os: O) -> Self {\n208 | |         let page_size = O::PAGE_SIZE;\n...   |\n227 | |         Self { entries, pages }\n228 | |     }\n    | |_____- Dangling pointer detected.\n    |\nwarning: Dangling pointer detected.\n   --> src/host/data_structures/host_controllers/xhci/mod.rs:99:1\n    |\n 99 | / |one| {\n100 | |                     if let Ok(ExtendedCapability::XhciSupportedProtocol(protcol)) = one {\n...   |\n103 | |                     None\n104 | |                 }\n    | |_________________- Dangling pointer detected.\n    |\nOver visited: DefId(0:498 ~ driver_usb[3cf5]::host::data_structures::host_controllers::xhci::{impl#1}::chip_hardware_reset)\nOver visited: DefId(0:513 ~ driver_usb[3cf5]::host::data_structures::host_controllers::xhci::{impl#1}::init_ir)\nOver visited: DefId(0:540 ~ driver_usb[3cf5]::host::data_structures::host_controllers::xhci::{impl#1}::re_enable_endpoint)\nOver visited: DefId(0:554 ~ driver_usb[3cf5]::host::data_structures::host_controllers::xhci::{impl#2}::new)\nOver visited: DefId(0:557 ~ driver_usb[3cf5]::host::data_structures::host_controllers::xhci::{impl#2}::control_transfer)\nOver visited: DefId(0:765 ~ driver_usb[3cf5]::usb::descriptors::parser::{impl#1}::parse_function)\nOver visited: DefId(0:838 ~ driver_usb[3cf5]::usb::descriptors::desc_uvc::uvc_interfaces::{impl#0}::from_u8_array)\nOver visited: DefId(0:841 ~ driver_usb[3cf5]::usb::descriptors::desc_uvc::uvc_interfaces::{impl#1}::from_u8_array)\nOver visited: DefId(0:1053 ~ driver_usb[3cf5]::usb::universal_drivers::hid_drivers::hid_mouse::{impl#1}::prepare_for_drive)\nwarning: Double free detected.\n   --> src/usb/universal_drivers/uvc_drivers/uvc_device_model.rs:108:5\n    |\n108 |     }\n    |     - Double free detected.\n    |\nwarning: Dangling pointer detected during unwinding.\n   --> src/lib.rs:165:1\n    |\n165 | / pub fn init_probe(&mut self) -> &mut Self {\n166 | |         // async { //todo:async it!\n...   |\n192 | |         self\n193 | |     }\n    | |_____- Dangling pointer detected during unwinding.\n    |\nOver visited: DefId(0:1330 ~ driver_usb[3cf5]::{impl#0}::new_device)\n"
    },
    {
      "cmd_idx": 7,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=driver_usb, checker=Outdated\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_28/dbydd/driver_usb/driver_usb\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 22:50:14.450706246 +08:00:00\n\nName       Project  Compat  Latest  Kind    Platform\n----       -------  ------  ------  ----    --------\npci_types  0.6.2    ---     0.10.0  Normal  ---\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=driver_usb, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_28/dbydd/driver_usb/driver_usb\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-16 22:49:42.447751853 +08:00:00\n    Building driver_usb v0.1.0 (current)\nerror: running cargo-doc on crate 'driver_usb' failed with output:\n-----\n   Compiling proc-macro2 v1.0.93\n   Compiling unicode-ident v1.0.16\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling paste v1.0.15\n    Checking scopeguard v1.2.0\n    Checking bit_field v0.10.2\n    Checking accessor v0.3.3\n    Checking bitflags v2.8.0\n    Checking pci_types v0.6.2\n   Compiling lock_api v0.4.12\n   Compiling num-traits v0.2.19\n   Compiling quote v1.0.38\n   Compiling syn v2.0.98\n    Checking spinning_top v0.3.0\n    Checking tock-registers v0.9.0\n    Checking driver_common v0.1.0 (https://github.com/kern-crates/driver_common.git#2e86ed35)\n    Checking log v0.4.25\n    Checking cfg-if v1.0.0\n    Checking memory_addr v0.1.0 (https://github.com/kern-crates/memory_addr.git#8d24a00e)\n   Compiling num-derive v0.3.3\n   Compiling const-enum v0.1.0 (https://github.com/dbydd/const-enum-new.git#ad1a0106)\n   Compiling num-derive v0.4.2\n    Checking xhci v0.9.2 (https://github.com/dbydd/xhci.git#5a4ad17c)\n Documenting driver_usb v0.1.0 (/home/runner/check/batch_28/dbydd/driver_usb/driver_usb)\nerror[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:18:6\n   |\n18 | impl<T> OSAbstractions for PlatAbstraction {\n   |      ^ unconstrained type parameter\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:50:6\n   |\n50 | ) -> Option<XHCIPCIDriver<'a>> {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:73:24\n   |\n73 | impl BaseDriverOps for XHCIPCIDriver<'_> {\n   |                        ^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:74:20\n   |\n74 |     fn device_name(&self) -> &str {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nerror[E0282]: type annotations needed\n  --> /home/runner/check/batch_28/dbydd/driver_usb/driver_usb/src/pci_interface.rs:78:20\n   |\n78 |     fn device_type(&self) -> driver_common::DeviceType {\n   |                    ^^^^^ cannot infer type for type parameter `T`\n\nSome errors have detailed explanations: E0207, E0282.\nFor more information about an error, try `rustc --explain E0207`.\nerror: could not document `driver_usb`\n\n-----\n\nerror: failed to build rustdoc for crate driver_usb v0.1.0\nnote: this is usually due to a compilation error in the crate,\n      and is unlikely to be a bug in cargo-semver-checks\nnote: the following command can be used to reproduce the compilation error:\n      cargo new --lib example &&\n          cd example &&\n          echo '[workspace]' >> Cargo.toml &&\n          cargo add --path /home/runner/check/batch_28/dbydd/driver_usb/driver_usb --features default,driver_common,packed_drivers,pci,xhci &&\n          cargo check\n\nerror: aborting due to failure to build rustdoc for crate driver_usb v0.1.0\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 10,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 10,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 11,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 14,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=e1000-driver, checker=SemverChecks\ntoolchain=nightly-2023-02-23, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \ntimestamp=2025-02-16 23:44:23.877780687 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building e1000-driver v0.2.0 (current)\n       Built [   0.399s] (current)\n     Parsing e1000-driver v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_29/elliott10/e1000-driver/target/semver-checks/local-e1000_driver-0_2_0-01666ec060466c14/target/riscv64imac-unknown-none-elf/doc/e1000_driver.json\n"
    },
    {
      "cmd_idx": 15,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=e1000-driver, checker=SemverChecks\ntoolchain=nightly-2023-02-23, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-16 23:44:24.553190336 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building e1000-driver v0.2.0 (current)\n       Built [   0.293s] (current)\n     Parsing e1000-driver v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_29/elliott10/e1000-driver/target/semver-checks/local-e1000_driver-0_2_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/e1000_driver.json\n"
    },
    {
      "cmd_idx": 20,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=e1000-driver, checker=Outdated\ntoolchain=nightly-2023-02-23, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:44:30.93644311 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nvolatile  0.3.0    ---     0.6.1   Normal  ---\n"
    },
    {
      "cmd_idx": 21,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=e1000-driver, checker=Outdated\ntoolchain=nightly-2023-02-23, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:44:31.063222002 +08:00:00\n\nName      Project  Compat  Latest  Kind    Platform\n----      -------  ------  ------  ----    --------\nvolatile  0.3.0    ---     0.6.1   Normal  ---\n"
    },
    {
      "cmd_idx": 22,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=e1000-driver, checker=SemverChecks\n// toolchain=nightly-2023-02-23, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64imac-unknown-none-elf \n// timestamp=2025-02-16 23:44:23.251814877 +08:00:00\n    Building e1000-driver v0.2.0 (current)\n       Built [   0.399s] (current)\n     Parsing e1000-driver v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_29/elliott10/e1000-driver/target/semver-checks/local-e1000_driver-0_2_0-01666ec060466c14/target/riscv64imac-unknown-none-elf/doc/e1000_driver.json\n"
    },
    {
      "cmd_idx": 23,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=e1000-driver, checker=SemverChecks\n// toolchain=nightly-2023-02-23, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 23:44:23.879378558 +08:00:00\n    Building e1000-driver v0.2.0 (current)\n       Built [   0.293s] (current)\n     Parsing e1000-driver v0.2.0 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_29/elliott10/e1000-driver/target/semver-checks/local-e1000_driver-0_2_0-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/e1000_driver.json\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 24,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_29/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 27,
      "file": "[rap] Not supported to display yet.",
      "kind": "Rapx",
      "raw": "pkg=e1000-driver-test, checker=Rapx\ntoolchain=nightly-2024-01-31, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver/examples\ncmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-16 23:44:30.811210596 +08:00:00\n\nwarning: Memory Leak detected.\n  --> src/e1000.rs:22:21\n   |\n10 | fn dma_alloc_coherent(&mut self, pages: usize) -> (usize, usize) {\n11 |         let paddr: Box<[u32]> = if pages == 1 {\n12 |             Box::new([0; 1024]) // 4096\n13 |         } else if pages == 8 {\n14 |             Box::new([0; 1024 * 8]) // 4096\n15 |         } else {\n16 |             info!(\"Alloc {} pages failed\", pages);\n17 |             Box::new([0; 1024])\n18 |         };\n19 |\n20 |         let len = paddr.len();\n21 |\n22 |         let paddr = Box::into_raw(paddr) as *const u32 as usize;\n   |                     -------------------- Memory Leak Candidates.\n23 |         let vaddr = paddr;\n24 |         println!(\"alloc paddr: {:#x}, len={}\", paddr, len);\n25 |\n26 |         (vaddr, paddr)\n27 |     }\n   |\nOver visited: DefId(0:136 ~ e1000_driver_test[3dcc]::walk_dt_node)\n"
    },
    {
      "cmd_idx": 28,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=e1000-driver-test, checker=Outdated\ntoolchain=nightly-2024-01-31, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_29/elliott10/e1000-driver/examples\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 23:44:31.283954616 +08:00:00\n\nName                    Project  Compat  Latest  Kind    Platform\n----                    -------  ------  ------  ----    --------\nbuddy_system_allocator  0.6.0    ---     0.11.0  Normal  ---\nriscv                   0.8.0    ---     0.12.1  Normal  ---\n"
    }
  ]
}