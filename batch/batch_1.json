{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (1bc403daa 2024-10-11)",
          "commit_hash": "1bc403daadbebb553ccc211a0a8eebb73989665f",
          "commit_date": "2024-10-11",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.1"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2024-05-02",
            "profile": "minimal",
            "targets": [
              "aarch64-unknown-none",
              "aarch64-unknown-none-softfloat",
              "riscv64gc-unknown-none-elf",
              "x86_64-unknown-none"
            ],
            "components": [
              "rust-src",
              "llvm-tools",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/arceos-org/arceos/rust-toolchain.toml",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1728711185069,
        "finish": 1728711749911,
        "duration_ms": 564842,
        "git_time": "2024-10-12 13:28:50 +0800",
        "git_sha": "c07cbec2dacd65bcc8434163cbf156bca02ce6e1"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Mirai",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "mirai": [
          "Mirai"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "AsyncModules",
        "repo": "embassy-priority"
      },
      {
        "user": "Byte-OS",
        "repo": "lose-net-stack"
      },
      {
        "user": "Byte-OS",
        "repo": "polyhal"
      },
      {
        "user": "Starry-OS",
        "repo": "Starry"
      },
      {
        "user": "arceos-org",
        "repo": "arceos"
      },
      {
        "user": "elliott10",
        "repo": "e1000-driver"
      },
      {
        "user": "elliott10",
        "repo": "lwext4_rust"
      },
      {
        "user": "guoweikang",
        "repo": "osl"
      }
    ],
    "packages": [
      {
        "name": "embassy-boot",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-boot-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-embedded-hal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-executor",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-executor-macros",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-futures",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-hal-internal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-adin1110",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-driver-channel",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-enc28j60",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-esp-hosted",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-ppp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-tuntap",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-net-wiznet",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-stm32-wpan",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-sync",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-time-queue-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-dfu",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-logger",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "embassy-usb-synopsys-otg",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        }
      },
      {
        "name": "example",
        "repo": {
          "repo_idx": 1,
          "user": "Byte-OS",
          "repo": "lose-net-stack"
        }
      },
      {
        "name": "lose-net-stack",
        "repo": {
          "repo_idx": 1,
          "user": "Byte-OS",
          "repo": "lose-net-stack"
        }
      },
      {
        "name": "example",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "polyhal",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "polyhal-macro",
        "repo": {
          "repo_idx": 2,
          "user": "Byte-OS",
          "repo": "polyhal"
        }
      },
      {
        "name": "arceos-bwbench",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-display",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-echoserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-exception",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-helloworld",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-httpclient",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-httpserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-memtest",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-parallel",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-priority",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-shell",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-sleep",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-tls",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-udpserver",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-yield",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "axlibc",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "bwbench-client",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "deptool",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "mingo",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "monolithic_userboot",
        "repo": {
          "repo_idx": 3,
          "user": "Starry-OS",
          "repo": "Starry"
        }
      },
      {
        "name": "arceos-helloworld",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpclient",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-httpserver",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos-shell",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_api",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "arceos_posix_api",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axalloc",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axconfig",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdisplay",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdma",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axdriver",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axfeat",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axfs",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axhal",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axlibc",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axlog",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axmm",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axnet",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axruntime",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axstd",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axsync",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "axtask",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "bwbench-client",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "deptool",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "mingo",
        "repo": {
          "repo_idx": 4,
          "user": "arceos-org",
          "repo": "arceos"
        }
      },
      {
        "name": "e1000-driver",
        "repo": {
          "repo_idx": 5,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      },
      {
        "name": "e1000-driver-test",
        "repo": {
          "repo_idx": 5,
          "user": "elliott10",
          "repo": "e1000-driver"
        }
      },
      {
        "name": "lwext4_rust",
        "repo": {
          "repo_idx": 6,
          "user": "elliott10",
          "repo": "lwext4_rust"
        }
      },
      {
        "name": "lwext4_rust_examples",
        "repo": {
          "repo_idx": 6,
          "user": "elliott10",
          "repo": "lwext4_rust"
        }
      },
      {
        "name": "osl",
        "repo": {
          "repo_idx": 7,
          "user": "guoweikang",
          "repo": "osl"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1864,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1876,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1884,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1850,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1944,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1892,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1936,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1907,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 2918,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2311,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2304,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2260,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2271,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2250,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2269,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2285,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2295,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 3182,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 165,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 168,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 168,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 166,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 57,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9593,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 13030,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9530,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 9576,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9273,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9402,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 9508,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9593,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9486,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9486,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9402,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9593,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9273,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9508,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9576,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9593,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9530,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13030,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 191,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 188,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 189,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 191,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 188,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 193,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 55,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 11816,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 28555,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 11815,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 11684,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 11648,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 11539,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 11408,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 11648,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 11873,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 28555,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 11408,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3293,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1281,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1258,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1253,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1246,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1277,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1266,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1262,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1285,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 58,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1651,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 3425,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1630,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1681,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1663,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1652,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1617,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1654,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1759,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1266,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1262,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1759,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1246,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1654,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3425,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1651,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1285,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1617,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1253,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1652,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1281,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1663,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1258,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1681,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3293,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1630,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1277,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1637,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1693,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1653,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1661,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1656,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1620,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1624,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1667,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 2245,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1911,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1918,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1881,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1958,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1888,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1906,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1893,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1901,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2396,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 6409,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 262,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 260,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 263,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 268,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 265,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 267,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 266,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 266,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 6870,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 235,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 241,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 241,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 245,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 221,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 244,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 228,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 242,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 260,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 266,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 262,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 266,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 263,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 268,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 265,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 267,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6409,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 113,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 115,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 112,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 113,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 5729,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 51,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 74,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 73,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 73,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 72,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 62,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 72,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 75,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 74,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 6416,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 223,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 225,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 217,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 227,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 223,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 222,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 225,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 260,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 50,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 178,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 176,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 176,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 172,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 163,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 170,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 178,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 175,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 216,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 608,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 596,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 607,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 579,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 608,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 598,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 607,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 603,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1094,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 708,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 700,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 691,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 710,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 674,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 686,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 703,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 700,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1168,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 2216,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1127,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1099,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1145,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1138,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1131,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1130,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1502,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2488,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1437,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1461,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1475,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1464,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1492,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1487,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1489,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 120,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 122,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 121,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 121,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 119,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 121,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 122,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 121,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 2,
      "duration_ms": 121,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1131,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1489,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1145,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1487,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2488,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1502,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1130,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1492,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1099,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1464,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1475,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1127,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1461,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2216,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1437,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1138,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 2436,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1753,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1726,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1689,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1744,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1741,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1694,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1744,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1738,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2580,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2078,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2052,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1988,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2017,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2019,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2038,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1726,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1744,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1753,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1738,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1689,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1744,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1741,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1694,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2436,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 150,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 145,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 149,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 150,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 153,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 149,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 179,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 111,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 101,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 101,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 2,
      "duration_ms": 112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1252,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1293,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1252,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1228,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1263,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1256,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1232,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1269,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 56,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1597,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1525,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1582,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1591,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1612,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1597,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1581,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1611,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1917,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1438,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1450,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1400,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1501,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1474,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1443,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1450,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1434,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1958,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1615,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1601,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1586,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1618,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1581,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1605,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1541,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1593,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2066,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 109,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 107,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 110,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 108,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 109,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 110,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 2,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1994,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1970,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1963,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1957,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1988,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1970,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1984,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2002,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 5448,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 55,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2328,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2336,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2424,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2315,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2247,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2244,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2415,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2328,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 6120,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1487,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1376,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1527,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1440,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1371,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1420,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1376,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1439,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 4128,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1890,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1826,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1874,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1848,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1924,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1835,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1805,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1783,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 4445,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 286,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 820,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 281,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 631,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 285,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2297,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 282,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 287,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 329,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 732,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 296,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 227,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 381,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 298,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 453,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 297,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 631,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3418,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 100,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 1,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 329,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 381,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 820,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 298,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 631,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 453,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 732,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 297,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 282,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 631,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 285,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 287,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 296,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 281,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 227,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 286,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1514,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1518,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1470,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1534,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1476,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1495,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1567,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1490,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2091,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 56,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1848,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1821,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1826,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1826,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1821,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1815,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1854,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1827,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2278,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 163,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 168,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 165,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 165,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 174,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9261,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 12590,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9328,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 9361,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9212,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9230,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 9161,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9248,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9196,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 240,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 240,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 239,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 236,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 253,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 238,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 240,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 241,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 238,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9196,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9230,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9261,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9212,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9161,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9361,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9248,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9328,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 12590,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 193,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 189,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 194,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 57,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 12114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 26860,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 10585,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 10162,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 10177,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 10427,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 10309,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 10424,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 10402,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 198,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 196,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 202,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 197,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 197,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 200,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 196,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 198,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 200,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 26860,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10309,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10162,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 4890,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1161,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1159,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1150,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1159,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1149,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1471,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 59,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1472,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 6039,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1516,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1530,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1471,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1493,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1527,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1481,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1653,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 506,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 503,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 505,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 506,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 506,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 507,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 508,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 510,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 1,
      "duration_ms": 505,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1149,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1653,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1150,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1481,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6039,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1472,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1471,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1527,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1159,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1493,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1161,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1471,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1530,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4890,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1516,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1159,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5353,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1504,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1473,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1486,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1396,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1400,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1452,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1884,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1820,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 6359,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1784,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1806,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1726,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1923,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1814,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1819,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2033,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 125,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 126,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 125,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 1,
      "duration_ms": 125,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1452,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2033,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1396,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1819,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6359,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1820,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1884,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1814,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1486,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1923,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1504,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1726,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1473,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1806,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5353,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1784,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1400,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1372,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1396,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1383,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1417,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1425,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1404,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1411,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1396,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1755,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1480,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1515,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1474,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1531,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1468,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1505,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1492,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1504,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1741,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 142,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 140,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 138,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 139,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 143,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 139,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 139,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1121,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1143,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1138,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1145,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1117,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1146,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1690,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 58,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1397,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1460,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1430,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1523,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1374,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1423,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1419,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1442,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1914,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 827,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 141,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 140,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 142,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 141,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 140,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 834,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 107,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 109,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 141,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 141,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 140,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 140,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 142,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 140,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 827,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 284,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 51,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 85,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 97,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 98,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 203,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2510,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2483,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2477,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2509,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2450,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2495,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2461,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2475,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7416,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3045,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3030,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 3071,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3024,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 2968,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 3058,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3043,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3087,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 8699,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 136,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 133,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 3220,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1920,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1886,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1894,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1920,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1936,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1931,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1921,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1884,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 54,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2473,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 3410,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2407,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2522,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2487,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2464,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2496,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2511,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2520,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1931,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1921,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2520,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1920,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2511,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3410,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2473,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1884,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2496,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1894,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2464,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1920,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2487,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1886,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2522,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3220,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2407,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1936,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 158,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 189,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 112,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 160,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2248,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2269,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2233,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2314,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2287,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2289,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2244,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2285,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 7407,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3134,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3120,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 3022,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3188,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3003,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 3040,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3104,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3097,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 8275,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 2229,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1847,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1805,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1828,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1857,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1836,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1832,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1844,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1819,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2124,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1852,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1857,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1838,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1816,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1819,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1845,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1816,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1814,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 152,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 166,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 166,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 147,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1805,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1844,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1847,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1819,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1828,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1857,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1836,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1832,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2229,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain": "1.78",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 11,
      "duration_ms": 5629,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 789,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 10,
      "duration_ms": 101,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 31,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 789,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2022-08-08",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 13,
      "duration_ms": 338,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 13,
      "duration_ms": 391,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 12,
      "duration_ms": 2084,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 293,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 289,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lose-net-stack -- --emit=json",
      "count": 100,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lose-net-stack -- --emit=json",
      "count": 100,
      "duration_ms": 107,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 338,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 32,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 391,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 6049,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 2037,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 3239,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1909,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 2008,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1807,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 1,
      "duration_ms": 2688,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 7403,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2863,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 2834,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4862,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 3312,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p example -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2688,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2834,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 33,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3312,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 4282,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 11,
      "duration_ms": 1953,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 23,
      "duration_ms": 2913,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 9,
      "duration_ms": 836,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 4703,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 2495,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3530,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 1,
      "duration_ms": 922,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 34,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal -- --emit=json",
      "count": 2,
      "duration_ms": 112,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 154,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 160,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 4011,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 73,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 73,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none",
      "count": 0,
      "duration_ms": 72,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 35,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p polyhal-macro -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 13742,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6396,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 21709,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-bwbench -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 36,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 6396,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2225,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 7048,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 5023,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-display -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 37,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 7048,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 341,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 694,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 38,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-echoserver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 326,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 1,
      "duration_ms": 632,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1889,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 39,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-exception -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 329,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 620,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1892,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 40,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-helloworld -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 642,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1950,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 41,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpclient -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 342,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 675,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2035,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 42,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpserver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 682,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 4090,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2596,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 43,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-memtest -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 714,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 2386,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2157,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 44,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-parallel -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 358,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 1109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 45,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-priority -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 407,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 978,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2170,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 46,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-shell -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 337,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 642,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2007,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 47,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-sleep -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 8734,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 4829,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 10524,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-tls -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 48,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 4829,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 335,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 649,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2023,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 49,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-udpserver -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 334,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 842,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1976,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 50,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-yield -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 22075,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6893,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 25998,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 51,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 6893,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1656,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 53,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2343,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p bwbench-client -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 52,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1656,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 1434,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3363,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 53,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p deptool -- --emit=json",
      "count": 35,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 353,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 6,
      "duration_ms": 416,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 263,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 353,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 416,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 54,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 263,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 15385,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 6707,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 29222,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p monolithic_userboot -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 6707,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 55,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 29222,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-helloworld -- --emit=json",
      "count": 0,
      "duration_ms": 590,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 201,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 390,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 56,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 211,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpclient -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 212,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 406,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 57,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 261,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-httpserver -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 216,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 435,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 58,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 300,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos-shell -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 280,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 732,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 59,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 364,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_api -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7403,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 1873,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1521,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3010,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8496,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 2405,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1981,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4646,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7403,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1873,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8496,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 60,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2405,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p arceos_posix_api -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 12392,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 854,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 6846,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2983,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 13576,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 999,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 7455,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4480,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 12392,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 854,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13576,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 61,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 999,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axalloc -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 4422,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 503,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 492,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 492,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 4749,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 585,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 583,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 62,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 570,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axconfig -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3638,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 188,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 189,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 4227,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 145,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 144,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 63,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 147,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdisplay -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6651,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 631,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1405,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2670,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7303,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 746,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1889,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3234,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6651,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 631,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7303,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 64,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 746,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdma -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 613,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 813,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2267,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7846,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 667,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 897,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2958,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7522,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 613,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7846,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 65,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 667,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axdriver -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6654,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 532,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1294,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2513,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7148,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 602,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1745,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3181,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6654,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 532,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7148,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 66,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 602,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfeat -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6656,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 721,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1162,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2433,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7156,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 835,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1560,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3084,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6656,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 721,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7156,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 67,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 835,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 117,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axfs -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7175,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 893,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1902,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 3067,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7809,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 815,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2721,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4575,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7175,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 893,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7809,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 68,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 815,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axhal -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6239,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 419,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 665,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2128,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6642,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 389,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 642,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2635,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6239,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 419,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6642,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 69,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 389,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlibc -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 15223,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 840,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2822,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2931,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 13578,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 5149,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2732,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4291,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 15223,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 840,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13578,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 70,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5149,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axlog -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 3630,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 266,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 269,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 274,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 3942,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 248,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 249,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 71,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 246,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axmm -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7487,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 615,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 784,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2251,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7869,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 654,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 859,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2926,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7487,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 615,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7869,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 72,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 654,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 117,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 115,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 115,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axnet -- --emit=json",
      "count": 1,
      "duration_ms": 115,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7810,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 744,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1991,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 3343,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 8605,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 831,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 2981,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 4709,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7810,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 744,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8605,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 73,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 831,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axruntime -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6601,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 718,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1163,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2419,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 7128,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 847,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1517,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3061,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6601,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 718,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7128,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 74,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 847,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axstd -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6739,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 754,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1298,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2557,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 7249,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 896,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1635,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 3206,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6739,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 754,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7249,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 75,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 896,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axsync -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6155,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 413,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 629,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2046,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6608,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 388,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 638,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2669,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6155,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 413,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6608,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 76,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 388,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p axtask -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 6156,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 411,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 615,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2056,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 1,
      "duration_ms": 6626,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 637,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 1,
      "duration_ms": 2651,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6156,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 411,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6626,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 77,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 386,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p bwbench-client -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 46,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2220,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 78,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1569,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p deptool -- --emit=json",
      "count": 35,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 10,
      "duration_ms": 1357,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "mirai",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 47,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 79,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 3217,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p mingo -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1268,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 1219,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 148,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none",
      "count": 0,
      "duration_ms": 1710,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat",
      "count": 0,
      "duration_ms": 1613,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 0,
      "duration_ms": 107,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1268,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1219,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 148,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 152,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1710,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1613,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 107,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 80,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2024-05-02",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 179,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 295,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 249,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver -- --emit=json",
      "count": 25,
      "duration_ms": 110,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 81,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver -- --emit=json",
      "count": 25,
      "duration_ms": 113,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-02-23",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 1097,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 82,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p e1000-driver-test -- --emit=json",
      "count": 18,
      "duration_ms": 106,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 740,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 555,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 936,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 851,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 644,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust -- --emit=json",
      "count": 18,
      "duration_ms": 127,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust -- --emit=json",
      "count": 18,
      "duration_ms": 127,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 740,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 555,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 936,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 851,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 83,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 644,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf",
      "count": 1,
      "duration_ms": 3458,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p lwext4_rust_examples -- --emit=json",
      "count": 17,
      "duration_ms": 111,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 84,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3458,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2024-01-31",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 5578,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "audit",
      "cmd": "cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 0,
      "duration_ms": 52,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 7219,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "lockbud",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p osl -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5578,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 85,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 7219,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-10-10",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 4,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 5,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 6,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 8,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 57,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 58,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 59,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"
    },
    {
      "cmd_idx": 60,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 61,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 62,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 63,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 64,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling typenum v1.17.0\n   Compiling semver-parser v0.7.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling proc-macro2 v1.0.87\n   Compiling semver v0.9.0\n   Compiling heapless v0.8.0\n   Compiling version_check v0.9.5\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling rustc_version v0.2.3\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling generic-array v0.14.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling unicode-ident v1.0.13\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling bare-metal v0.2.5\n   Compiling document-features v0.2.10\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling cortex-m v0.7.7\n   Compiling quote v1.0.37\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling fixed v1.28.0\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling bitflags v2.6.0\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 75,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 76,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 77,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 78,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 79,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 80,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 81,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 82,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 83,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 93,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling libc v0.2.159\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling version_check v0.9.5\n   Compiling syn v1.0.109\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.12\n   Compiling parking_lot_core v0.9.10\n   Compiling memchr v2.7.4\n   Compiling nb v1.1.0\n   Compiling quote v1.0.37\n   Compiling dirs-sys-next v0.1.2\n   Compiling aho-corasick v1.1.3\n   Compiling smallvec v1.13.2\n   Compiling cortex-m v0.7.7\n   Compiling regex-syntax v0.8.5\n   Compiling typenum v1.17.0\n   Compiling scopeguard v1.2.0\n   Compiling crunchy v0.2.2\n   Compiling semver-parser v0.7.0\n   Compiling semver v0.9.0\n   Compiling dirs-next v2.0.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling tiny-keccak v2.0.2\n   Compiling siphasher v0.3.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.0\n   Compiling phf_shared v0.10.0\n   Compiling regex-automata v0.4.8\n   Compiling indexmap v2.6.0\n   Compiling embedded-hal v0.2.7\n   Compiling term v0.7.0\n   Compiling parking_lot v0.12.3\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustc_version v0.2.3\n   Compiling log v0.4.22\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling paste v1.0.15\n   Compiling critical-section v1.1.3\n   Compiling new_debug_unreachable v1.0.6\n   Compiling precomputed-hash v0.1.1\n   Compiling byteorder v1.5.0\n   Compiling once_cell v1.20.2\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling either v1.13.0\n   Compiling fixedbitset v0.4.2\n   Compiling heapless v0.8.0\n   Compiling bit-vec v0.6.3\n   Compiling regex v1.11.0\n   Compiling bit-set v0.5.3\n   Compiling itertools v0.10.5\n   Compiling lalrpop-util v0.19.12\n   Compiling petgraph v0.6.5\n   Compiling num_enum_derive v0.5.11\n   Compiling string_cache v0.8.7\n   Compiling hash32 v0.3.1\n   Compiling ena v0.14.3\n   Compiling bare-metal v0.2.5\n   Compiling ascii-canvas v3.0.0\n   Compiling is-terminal v0.4.13\n   Compiling generic-array v0.14.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling diff v0.1.13\n   Compiling unicode-xid v0.2.6\n   Compiling stable_deref_trait v1.2.0\n   Compiling litrs v0.4.1\n   Compiling embedded-hal v1.0.0\n   Compiling regex-syntax v0.6.29\n   Compiling futures-task v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling document-features v0.2.10\n   Compiling proc-macro-error-attr v1.0.4\n   Compiling debug-helper v0.3.13\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling volatile-register v0.2.2\n   Compiling crc-any v2.5.0\n   Compiling num_enum v0.5.11\n   Compiling num-traits v0.2.19\n   Compiling proc-macro-error v1.0.4\n   Compiling arrayvec v0.7.6\n   Compiling az v1.2.1\n   Compiling lalrpop v0.19.12\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling pio v0.2.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling rp2040-boot2 v0.3.0\n   Compiling rp-pac v6.0.0\n   Compiling termcolor v1.4.1\n   Compiling fixed v1.28.0\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling atomic-polyfill v1.0.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling unicode-width v0.1.14\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling codespan-reporting v0.11.1\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling half v2.4.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp)\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling pio-parser v0.2.2\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling pio-proc v0.2.2\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 94,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n   Compiling typenum v1.17.0\n   Compiling void v1.0.2\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:38Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling embedded-hal v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:52Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:45Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling rp-pac v6.0.0\n   Compiling atomic-polyfill v1.0.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:20:59Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling arrayvec v0.7.6\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling pio v0.2.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 123,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking nb v0.1.3\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.31\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 124,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 125,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling num-traits v0.2.19\n   Compiling syn v1.0.109\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x556afc5aa225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x556afc5c853b - core::fmt::write::h0c46818975380aad\n     2:     0x556afc5a809f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x556afc5a9ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x556afc5ab369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x556afc5ab0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x556afc5ab823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x556afc5ab6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x556afc5aa6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x556afc5ab437 - rust_begin_unwind\n    10:     0x556afc5c7763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x556afc58ee3e - build_script_build::main::hf548add4bf28e130\n    12:     0x556afc58ca63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x556afc58d986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x556afc58d9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x556afc5a551d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x556afc58d9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x556afc58ef05 - main\n    18:     0x7f30fa629d90 - <unknown>\n    19:     0x7f30fa629e40 - __libc_start_main\n    20:     0x556afc58b2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 126,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 127,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56464761c225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x56464763a53b - core::fmt::write::h0c46818975380aad\n     2:     0x56464761a09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x56464761bffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x56464761d369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x56464761d0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x56464761d823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x56464761d6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x56464761c6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x56464761d437 - rust_begin_unwind\n    10:     0x564647639763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x564647600e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x5646475fea63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x5646475ff986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x5646475ff9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x56464761751d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x5646475ff9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x564647600f05 - main\n    18:     0x7fd3e5a29d90 - <unknown>\n    19:     0x7fd3e5a29e40 - __libc_start_main\n    20:     0x5646475fd2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 128,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling proc-macro2 v1.0.87\n   Compiling embedded-hal v0.2.7\n   Compiling byteorder v1.5.0\n   Compiling semver v0.9.0\n   Compiling heapless v0.8.0\n   Compiling unicode-ident v1.0.13\n   Compiling hash32 v0.3.1\n   Compiling rustc_version v0.2.3\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.31\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling version_check v0.9.5\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling quote v1.0.37\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling litrs v0.4.1\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling volatile-register v0.2.2\n   Compiling document-features v0.2.10\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling bitfield v0.13.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling cortex-m-rt v0.7.3\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x560c9b1b4225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x560c9b1d253b - core::fmt::write::h0c46818975380aad\n     2:     0x560c9b1b209f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x560c9b1b3ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x560c9b1b5369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x560c9b1b50ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x560c9b1b5823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x560c9b1b56cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x560c9b1b46e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x560c9b1b5437 - rust_begin_unwind\n    10:     0x560c9b1d1763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x560c9b198e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x560c9b196a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x560c9b197986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x560c9b1979d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x560c9b1af51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x560c9b1979b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x560c9b198f05 - main\n    18:     0x7f8557c29d90 - <unknown>\n    19:     0x7f8557c29e40 - __libc_start_main\n    20:     0x560c9b1952c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 129,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x558adf464225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x558adf48253b - core::fmt::write::h0c46818975380aad\n     2:     0x558adf46209f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x558adf463ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x558adf465369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x558adf4650ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x558adf465823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x558adf4656cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x558adf4646e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x558adf465437 - rust_begin_unwind\n    10:     0x558adf481763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x558adf448e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x558adf446a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x558adf447986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x558adf4479d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x558adf45f51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x558adf4479b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x558adf448f05 - main\n    18:     0x7f6283429d90 - <unknown>\n    19:     0x7f6283429e40 - __libc_start_main\n    20:     0x558adf4452c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 130,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking futures-core v0.3.31\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 131,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56437aa1b225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x56437aa3953b - core::fmt::write::h0c46818975380aad\n     2:     0x56437aa1909f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x56437aa1affe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x56437aa1c369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x56437aa1c0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x56437aa1c823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x56437aa1c6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x56437aa1b6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x56437aa1c437 - rust_begin_unwind\n    10:     0x56437aa38763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x56437a9ffe3e - build_script_build::main::hf548add4bf28e130\n    12:     0x56437a9fda63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x56437a9fe986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x56437a9fe9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x56437aa1651d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x56437a9fe9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x56437a9fff05 - main\n    18:     0x7f5db0029d90 - <unknown>\n    19:     0x7f5db0029e40 - __libc_start_main\n    20:     0x56437a9fc2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 132,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 133,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56080c532225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x56080c55053b - core::fmt::write::h0c46818975380aad\n     2:     0x56080c53009f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x56080c531ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x56080c533369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x56080c5330ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x56080c533823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x56080c5336cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x56080c5326e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x56080c533437 - rust_begin_unwind\n    10:     0x56080c54f763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x56080c516e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x56080c514a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x56080c515986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x56080c5159d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x56080c52d51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x56080c5159b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x56080c516f05 - main\n    18:     0x7f7314a29d90 - <unknown>\n    19:     0x7f7314a29e40 - __libc_start_main\n    20:     0x56080c5132c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 134,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 135,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55eeffd54225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55eeffd7253b - core::fmt::write::h0c46818975380aad\n     2:     0x55eeffd5209f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55eeffd53ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55eeffd55369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55eeffd550ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55eeffd55823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55eeffd556cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55eeffd546e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55eeffd55437 - rust_begin_unwind\n    10:     0x55eeffd71763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55eeffd38e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55eeffd36a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55eeffd37986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55eeffd379d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55eeffd4f51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55eeffd379b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55eeffd38f05 - main\n    18:     0x7fc6f3829d90 - <unknown>\n    19:     0x7fc6f3829e40 - __libc_start_main\n    20:     0x55eeffd352c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 136,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 137,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x560cc4a73225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x560cc4a9153b - core::fmt::write::h0c46818975380aad\n     2:     0x560cc4a7109f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x560cc4a72ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x560cc4a74369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x560cc4a740ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x560cc4a74823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x560cc4a746cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x560cc4a736e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x560cc4a74437 - rust_begin_unwind\n    10:     0x560cc4a90763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x560cc4a57e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x560cc4a55a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x560cc4a56986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x560cc4a569d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x560cc4a6e51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x560cc4a569b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x560cc4a57f05 - main\n    18:     0x7f489d029d90 - <unknown>\n    19:     0x7f489d029e40 - __libc_start_main\n    20:     0x560cc4a542c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 138,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling proc-macro2 v1.0.87\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling semver v0.9.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n   Compiling rustc_version v0.2.3\n   Compiling unicode-ident v1.0.13\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n   Compiling bare-metal v0.2.5\n   Compiling version_check v0.9.5\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n   Compiling typenum v1.17.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling quote v1.0.37\n   Compiling embedded-hal-async v1.0.0\n   Compiling vcell v0.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling document-features v0.2.10\n   Compiling syn v1.0.109\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling cortex-m-rt v0.7.3\n   Compiling bitfield v0.13.2\n   Compiling autocfg v1.4.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 139,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55c6769f3225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55c676a1153b - core::fmt::write::h0c46818975380aad\n     2:     0x55c6769f109f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55c6769f2ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55c6769f4369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55c6769f40ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55c6769f4823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55c6769f46cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55c6769f36e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55c6769f4437 - rust_begin_unwind\n    10:     0x55c676a10763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55c6769d7e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55c6769d5a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55c6769d6986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55c6769d69d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55c6769ee51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55c6769d69b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55c6769d7f05 - main\n    18:     0x7f359a829d90 - <unknown>\n    19:     0x7f359a829e40 - __libc_start_main\n    20:     0x55c6769d42c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 140,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.31\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 141,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 142,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 143,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 144,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 145,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 146,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 147,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 148,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 169,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 169,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 170,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 170,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 171,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 171,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 172,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 172,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 173,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 173,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 174,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 174,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 175,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 175,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 176,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 176,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 177,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 177,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 197,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 198,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 199,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 200,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 201,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 202,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 203,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 204,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 205,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling strsim v0.11.1\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n   Compiling litrs v0.4.1\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\n   Compiling document-features v0.2.10\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling embassy-executor-macros v0.4.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor-macros)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 206,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 207,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 208,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 209,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 210,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 211,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 212,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 234,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 234,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 234,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 234,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 235,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 235,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 235,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 235,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 236,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 236,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 236,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 236,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 237,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 237,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 237,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 237,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 238,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 238,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 238,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 238,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 239,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 239,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 239,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 239,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 241,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 241,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 241,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 241,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 262,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 262,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 262,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 263,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 263,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 263,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 264,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 264,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 264,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 265,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 265,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 265,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 266,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 266,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 266,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 267,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 267,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 267,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 269,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 269,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 269,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 290,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 291,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 292,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 293,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 294,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 295,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 309,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 309,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 310,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 310,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 311,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 311,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 312,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 312,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 313,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 313,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 314,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 314,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 315,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 315,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 316,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 316,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 317,
      "file": "src/device.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/device.rs (original lines from 21 to 22)\n-    type RxToken<'a> = RxTokenAdapter<T::RxToken<'a>> where Self: 'a;\n-    type TxToken<'a> = TxTokenAdapter<T::TxToken<'a>> where Self: 'a;\n+    type RxToken<'a>\n+        = RxTokenAdapter<T::RxToken<'a>>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxTokenAdapter<T::TxToken<'a>>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 317,
      "file": "src/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net/src/tcp.rs (original lines from 644 to 644)\n-        type Connection<'m> = TcpConnection<'m, N, TX_SZ, RX_SZ> where Self: 'm;\n+        type Connection<'m>\n+            = TcpConnection<'m, N, TX_SZ, RX_SZ>\n+        where\n+            Self: 'm;\n"
    },
    {
      "cmd_idx": 318,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking cfg-if v1.0.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.31\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking critical-section v1.1.3\n    Checking no-std-net v0.6.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n    Checking embedded-nal v0.8.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 319,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n    Checking embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 320,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling futures-util v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 321,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 322,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 323,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.31\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling document-features v0.2.10\n   Compiling embedded-nal-async v0.7.1\n   Compiling void v1.0.2\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 324,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.31\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 325,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.31\n    Checking nb v0.1.3\n    Checking no-std-net v0.6.0\n    Checking void v1.0.2\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 326,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling futures-util v0.3.31\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 327,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking no-std-net v0.6.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 328,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling cfg-if v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 329,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking pin-utils v0.1.0\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking critical-section v1.1.3\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n    Checking embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 330,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling futures-task v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling hash32 v0.3.1\n   Compiling nb v0.1.3\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling critical-section v1.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 331,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking cfg-if v1.0.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 332,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling no-std-net v0.6.0\n   Compiling embedded-hal v1.0.0\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 333,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.31\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking cfg-if v1.0.0\n   Compiling litrs v0.4.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n    Checking nb v0.1.3\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n   Compiling document-features v0.2.10\n    Checking void v1.0.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\n"
    },
    {
      "cmd_idx": 334,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 335,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 336,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 337,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 338,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 339,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 340,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 364,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 365,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 366,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking nb v1.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 367,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling embedded-hal-bus v0.1.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 368,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 369,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.31\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v1.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 370,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 371,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 372,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.31\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v1.1.0\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n   Compiling embedded-hal-bus v0.1.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n   Compiling document-features v0.2.10\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 373,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 374,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 375,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 376,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 377,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 378,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 379,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 380,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 381,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 392,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 392,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 393,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 393,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 394,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 394,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 395,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 395,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 396,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 396,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 397,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 397,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 398,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 398,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 399,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 399,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 400,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 86 to 86)\n-    type RxToken<'a> = T::RxToken<'a>\n+    type RxToken<'a>\n+        = T::RxToken<'a>\n"
    },
    {
      "cmd_idx": 400,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver/src/lib.rs (original lines from 89 to 89)\n-    type TxToken<'a> = T::TxToken<'a>\n+    type TxToken<'a>\n+        = T::TxToken<'a>\n"
    },
    {
      "cmd_idx": 401,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 401,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 402,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 402,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 403,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 403,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 404,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 404,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 405,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 405,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 406,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 406,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 407,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 407,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 408,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 408,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 409,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 409,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 420,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 421,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 422,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 423,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 424,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 425,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 426,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 427,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 428,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel/src/lib.rs (original lines from 329 to 330)\n-    type RxToken<'a> = RxToken<'a, MTU> where Self: 'a ;\n-    type TxToken<'a> = TxToken<'a, MTU> where Self: 'a ;\n+    type RxToken<'a>\n+        = RxToken<'a, MTU>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, MTU>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 429,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 430,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 431,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 432,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 448,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 449,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 450,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 451,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 451,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 452,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 452,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 453,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 453,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 454,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 454,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 455,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 455,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 456,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 638 to 638)\n-    type RxToken<'a> = RxToken<'a>\n+    type RxToken<'a>\n+        = RxToken<'a>\n"
    },
    {
      "cmd_idx": 456,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60/src/lib.rs (original lines from 642 to 642)\n-    type TxToken<'a> = TxToken<'a, S, O>\n+    type TxToken<'a>\n+        = TxToken<'a, S, O>\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 457,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 458,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1032 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1552 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1560 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 459,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 460,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 485,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 486,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 487,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 488,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 513,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 514,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 515,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 516,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 517,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 519,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 520,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 521,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 530,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:28:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:28:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 531,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:28:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:28:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:28:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:28:11Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 532,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 533,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 534,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 535,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 536,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 537,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 538,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 539,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 540,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap/src/lib.rs (original lines from 155 to 156)\n-    type RxToken<'a> = RxToken where Self: 'a;\n-    type TxToken<'a> = TxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 541,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling slab v0.4.9\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling polling v2.8.0\n   Compiling rustix v0.37.27\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 542,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling libc v0.2.159\n   Compiling polling v2.8.0\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling slab v0.4.9\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 543,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 544,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 545,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n    Checking instant v0.1.13\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\n    Checking fastrand v1.9.0\n   Compiling async-io v1.13.0\n    Checking waker-fn v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking futures-io v0.3.31\n    Checking event-listener v2.5.3\n    Checking parking v2.2.1\n    Checking log v0.4.22\n    Checking bitflags v1.3.2\n    Checking errno v0.3.9\n    Checking memchr v2.7.4\nerror: could not compile `errno` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 546,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\n   Compiling async-io v1.13.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\n   Compiling memchr v2.7.4\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0463]: can't find crate for `std`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/memchr-2.7.4/src/lib.rs:198:1\n    |\n198 | extern crate std;\n    | ^^^^^^^^^^^^^^^^^ can't find crate\n    |\n    = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n    = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror: could not compile `memchr` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 547,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 548,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 549,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 550,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling cfg-if v1.0.0\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling instant v0.1.13\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n   Compiling fastrand v1.9.0\n   Compiling futures-io v0.3.31\n   Compiling memchr v2.7.4\n   Compiling futures-core v0.3.31\n   Compiling waker-fn v1.2.0\n   Compiling log v0.4.22\n   Compiling errno v0.3.9\n   Compiling pin-project-lite v0.2.14\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\nSome errors have detailed explanations: E0425, E0583.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `errno` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n[2024-10-11T08:28:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:28:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n"
    },
    {
      "cmd_idx": 551,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 552,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n    Checking pin-project-lite v0.2.14\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 553,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 554,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 555,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling libc v0.2.159\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n   Compiling parking v2.2.1\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `parking` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:53:5\n   |\n53 | use std::sync;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:58:5\n   |\n58 | use std::cell::Cell;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:59:5\n   |\n59 | use std::fmt;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:60:5\n   |\n60 | use std::marker::PhantomData;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:61:5\n   |\n61 | use std::sync::Arc;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:62:5\n   |\n62 | use std::task::{Wake, Waker};\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:63:5\n   |\n63 | use std::time::Duration;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0463]: can't find crate for `std`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:66:5\n   |\n66 | use std::time::Instant;\n   |     ^^^ can't find crate\n   |\n   = note: the `thumbv6m-none-eabi` target may not support the standard library\n   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nerror[E0432]: unresolved imports `sync::atomic::AtomicUsize`, `sync::atomic::Ordering::SeqCst`, `sync::Condvar`, `sync::Mutex`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:68:5\n   |\n68 | use sync::atomic::AtomicUsize;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n69 | use sync::atomic::Ordering::SeqCst;\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n70 | use sync::{Condvar, Mutex};\n   |            ^^^^^^^  ^^^^^\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:370:23\n    |\n370 |             Err(n) => panic!(\"inconsistent park_timeout state: {}\", n),\n    |                       ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:400:30\n    |\n400 |                         n => panic!(\"inconsistent park_timeout state: {}\", n),\n    |                              ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `panic` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:422:18\n    |\n422 |             _ => panic!(\"inconsistent state in unpark\"),\n    |                  ^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::panic;\n    |\n\nerror: cannot find macro `assert_eq` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:367:17\n    |\n367 |                 assert_eq!(old, NOTIFIED, \"park state changed unexpectedly\");\n    |                 ^^^^^^^^^\n    |\nhelp: consider importing this macro\n    |\n52  + use core::assert_eq;\n    |\n\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\nerror[E0425]: cannot find value `None` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:132:34\n    |\n132 |         self.unparker.inner.park(None);\n    |                                  ^^^^ not found in this scope\n    |\nhelp: consider importing this unit variant\n    |\n52  + use core::option::Option::None;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:153:34\n    |\n153 |         self.unparker.inner.park(Some(duration))\n    |                                  ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function, tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:175:19\n    |\n175 |             .park(Some(instant.saturating_duration_since(Instant::now())))\n    |                   ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0405]: cannot find trait `Default` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:225:6\n    |\n225 | impl Default for Parker {\n    |      ^^^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::default::Default;\n    |\n\nerror[E0405]: cannot find trait `Clone` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:312:6\n    |\n312 | impl Clone for Unparker {\n    |      ^^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::clone::Clone;\n    |\n\nerror[E0405]: cannot find trait `From` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:320:6\n    |\n320 | impl From<Unparker> for Waker {\n    |      ^^^^ not found in this scope\n    |\nhelp: consider importing this trait\n    |\n52  + use core::convert::From;\n    |\n\nerror[E0412]: cannot find type `Option` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:337:29\n    |\n337 |     fn park(&self, timeout: Option<Duration>) -> bool {\n    |                             ^^^^^^ not found in this scope\n    |\nhelp: consider importing this enum\n    |\n52  + use core::option::Option;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:348:16\n    |\n348 |         if let Some(dur) = timeout {\n    |                ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Ok` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:358:13\n    |\n358 |             Ok(_) => {}\n    |             ^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Ok;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:360:13\n    |\n360 |             Err(NOTIFIED) => {\n    |             ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Err;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Err` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:370:13\n    |\n370 |             Err(n) => panic!(\"inconsistent park_timeout state: {}\", n),\n    |             ^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::result::Result::Err;\n    |\n\nerror[E0531]: cannot find tuple struct or tuple variant `Some` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:389:13\n    |\n389 |             Some(timeout) => {\n    |             ^^^^ not found in this scope\n    |\nhelp: consider importing this tuple variant\n    |\n52  + use core::option::Option::Some;\n    |\n\nerror[E0425]: cannot find function `drop` in this scope\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:433:9\n    |\n433 |         drop(self.lock.lock().unwrap());\n    |         ^^^^ not found in this scope\n    |\nhelp: consider importing this function\n    |\n52  + use core::mem::drop;\n    |\n\nerror: requires `sized` lang_item\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking-2.2.1/src/lib.rs:79:18\n   |\n79 | pub fn pair() -> (Parker, Unparker) {\n   |                  ^^^^^^^^^^^^^^^^^^\n\nerror: requires `sized` lang_item\n\nSome errors have detailed explanations: E0405, E0412, E0425, E0432, E0463, E0531.\nFor more information about an error, try `rustc --explain E0405`.\nerror: could not compile `parking` (lib) due to 29 previous errors\n"
    },
    {
      "cmd_idx": 556,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.159\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 557,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 558,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 559,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 613,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 614,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 615,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 616,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.31\n   Compiling cortex-m v0.7.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"
    },
    {
      "cmd_idx": 617,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 618,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 619,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling cortex-m v0.7.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 620,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 621,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling semver-parser v0.7.0\n   Compiling nb v1.1.0\n   Compiling proc-macro2 v1.0.87\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n   Compiling unicode-ident v1.0.13\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling critical-section v1.1.3\n   Compiling litrs v0.4.1\n   Compiling pin-utils v0.1.0\n   Compiling autocfg v1.4.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-core v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling cortex-m v0.7.7\n   Compiling futures-task v0.3.31\n   Compiling syn v1.0.109\n   Compiling futures-util v0.3.31\n   Compiling num-traits v0.2.19\n   Compiling document-features v0.2.10\n   Compiling quote v1.0.37\n   Compiling vcell v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 632,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 633,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 634,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 635,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 636,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 637,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 638,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 639,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 640,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 650,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling libc v0.2.159\n   Compiling autocfg v1.4.0\n   Compiling syn v1.0.109\n   Compiling cfg-if v1.0.0\n   Compiling parking_lot_core v0.9.10\n   Compiling memchr v2.7.4\n   Compiling lock_api v0.4.12\n   Compiling nb v1.1.0\n   Compiling quote v1.0.37\n   Compiling aho-corasick v1.1.3\n   Compiling dirs-sys-next v0.1.2\n   Compiling crunchy v0.2.2\n   Compiling smallvec v1.13.2\n   Compiling scopeguard v1.2.0\n   Compiling semver-parser v0.7.0\n   Compiling regex-syntax v0.8.5\n   Compiling semver v0.9.0\n   Compiling dirs-next v2.0.0\n   Compiling version_check v0.9.5\n   Compiling siphasher v0.3.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.15.0\n   Compiling regex-automata v0.4.8\n   Compiling tiny-keccak v2.0.2\n   Compiling cortex-m v0.7.7\n   Compiling indexmap v2.6.0\n   Compiling phf_shared v0.10.0\n   Compiling term v0.7.0\n   Compiling parking_lot v0.12.3\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling once_cell v1.20.2\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling void v1.0.2\n   Compiling either v1.13.0\n   Compiling bit-vec v0.6.3\n   Compiling new_debug_unreachable v1.0.6\n   Compiling precomputed-hash v0.1.1\n   Compiling fixedbitset v0.4.2\n   Compiling paste v1.0.15\n   Compiling regex v1.11.0\n   Compiling log v0.4.22\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling ena v0.14.3\n   Compiling lalrpop-util v0.19.12\n   Compiling petgraph v0.6.5\n   Compiling string_cache v0.8.7\n   Compiling bit-set v0.5.3\n   Compiling itertools v0.10.5\n   Compiling embedded-hal v0.2.7\n   Compiling num_enum_derive v0.5.11\n   Compiling bare-metal v0.2.5\n   Compiling ascii-canvas v3.0.0\n   Compiling is-terminal v0.4.13\n   Compiling diff v0.1.13\n   Compiling critical-section v1.1.3\n   Compiling heapless v0.8.0\n   Compiling unicode-xid v0.2.6\n   Compiling cortex-m-rt v0.7.3\n   Compiling regex-syntax v0.6.29\n   Compiling byteorder v1.5.0\n   Compiling hash32 v0.3.1\n   Compiling proc-macro-error-attr v1.0.4\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling vcell v0.1.3\n   Compiling debug-helper v0.3.13\n   Compiling embedded-hal v1.0.0\n   Compiling futures-task v0.3.31\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.31\n   Compiling crc-any v2.5.0\n   Compiling futures-util v0.3.31\n   Compiling volatile-register v0.2.2\n   Compiling num_enum v0.5.11\n   Compiling document-features v0.2.10\n   Compiling proc-macro-error v1.0.4\n   Compiling num-traits v0.2.19\n   Compiling lalrpop v0.19.12\n   Compiling arrayvec v0.7.6\n   Compiling typenum v1.17.0\n   Compiling embedded-io v0.6.1\n   Compiling az v1.2.1\n   Compiling bitfield v0.13.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling pio v0.2.1\n   Compiling rp2040-boot2 v0.3.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embedded-storage v0.3.1\n   Compiling atomic-polyfill v1.0.3\n   Compiling fixed v1.28.0\n   Compiling unicode-width v0.1.14\n   Compiling rp-pac v6.0.0\n   Compiling termcolor v1.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling codespan-reporting v0.11.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\nerror: statics with a custom `#[link_section]` must be a simple list of bytes on the wasm target with no extra levels of indirection such as references\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rp-pac-6.0.0/src/_vectors.rs:41:1\n   |\n41 | pub static __INTERRUPTS: [Vector; 32] = [\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `rp-pac` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n"
    },
    {
      "cmd_idx": 651,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling cortex-m-rt v0.7.3\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling embedded-hal v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling vcell v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.31\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling bitfield v0.13.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling atomic-polyfill v1.0.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling rp-pac v6.0.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling arrayvec v0.7.6\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling pio v0.2.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 652,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:24Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling void v1.0.2\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.2/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:30:25Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling byteorder v1.5.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:38Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal-async v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bitfield v0.13.2\n   Compiling embedded-io v0.6.1\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:33Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling atomic-polyfill v1.0.3\n   Compiling rp-pac v6.0.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling rp2040-boot2 v0.3.0\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.8/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:30:52Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling arrayvec v0.7.6\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling pio v0.2.1\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 672,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 673,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 674,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 675,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 676,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 677,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 678,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 679,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 680,
      "file": "src/eth/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/src/eth/mod.rs (original lines from 77 to 78)\n-    type RxToken<'a> = RxToken<'a, 'd> where Self: 'a;\n-    type TxToken<'a> = TxToken<'a, 'd> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'a, 'd>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'a, 'd>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 681,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking nb v0.1.3\n    Checking futures-core v0.3.31\n    Checking embedded-hal v0.2.7\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking vcell v0.1.3\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 682,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking nb v0.1.3\n    Checking futures-task v0.3.31\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking futures-util v0.3.31\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 683,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x564629cd46a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x564629cd46a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x564629cd46a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x564629cd46a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x564629cf29bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x564629cf29bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x564629cd243f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x564629cd447e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x564629cd447e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x564629cd57e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x564629cd552d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x564629cd5ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x564629cd5b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x564629cd4b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x564629cd58b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x564629cf1be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x564629cb90ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x564629cb3fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x564629cb35be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x564629cb3631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x564629ccf7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x564629ccf7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x564629ccf7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x564629ccf7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x564629ccf7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x564629ccf7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x564629ccf7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x564629ccf7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x564629ccf7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x564629cb360a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x564629cb91ce - main\n    31:     0x7ff2c2e29d90 - <unknown>\n    32:     0x7ff2c2e29e40 - __libc_start_main\n    33:     0x564629cb2f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 684,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking nb v0.1.3\n    Checking futures-core v0.3.31\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 685,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling futures-util v0.3.31\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling volatile-register v0.2.2\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x555fd16c86a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x555fd16c86a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x555fd16c86a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x555fd16c86a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x555fd16e69bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x555fd16e69bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x555fd16c643f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x555fd16c847e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x555fd16c847e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x555fd16c97e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x555fd16c952d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x555fd16c9ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x555fd16c9b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x555fd16c8b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x555fd16c98b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x555fd16e5be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x555fd16ad0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x555fd16a7fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x555fd16a75be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x555fd16a7631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x555fd16c37dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x555fd16c37dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x555fd16c37dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x555fd16c37dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x555fd16c37dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x555fd16c37dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x555fd16c37dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x555fd16c37dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x555fd16c37dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x555fd16a760a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x555fd16ad1ce - main\n    31:     0x7f9d31429d90 - <unknown>\n    32:     0x7f9d31429e40 - __libc_start_main\n    33:     0x555fd16a6f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 686,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.87\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling nb v1.1.0\n   Compiling unicode-ident v1.0.13\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling bare-metal v0.2.5\n   Compiling quote v1.0.37\n   Compiling byteorder v1.5.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling vcell v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling volatile-register v0.2.2\n   Compiling autocfg v1.4.0\n   Compiling embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling litrs v0.4.1\n   Compiling bitfield v0.13.2\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling document-features v0.2.10\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5602c33616a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5602c33616a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5602c33616a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5602c33616a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5602c337f9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5602c337f9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5602c335f43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5602c336147e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5602c336147e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5602c33627e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5602c336252d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5602c3362ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5602c3362b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5602c3361b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5602c33628b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5602c337ebe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5602c33460ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5602c3340fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5602c33405be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5602c3340631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5602c335c7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5602c335c7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5602c335c7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5602c335c7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5602c335c7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5602c335c7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5602c335c7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5602c335c7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5602c335c7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5602c334060a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5602c33461ce - main\n    31:     0x7ff230629d90 - <unknown>\n    32:     0x7ff230629e40 - __libc_start_main\n    33:     0x5602c333ff45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 687,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling futures-core v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55e83744a6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55e83744a6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55e83744a6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55e83744a6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55e8374689bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55e8374689bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55e83744843f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55e83744a47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55e83744a47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55e83744b7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55e83744b52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55e83744bca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55e83744bb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55e83744ab69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55e83744b8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55e837467be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55e83742f0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55e837429fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55e8374295be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55e837429631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55e8374457dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55e8374457dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55e8374457dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55e8374457dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55e8374457dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55e8374457dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55e8374457dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55e8374457dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55e8374457dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55e83742960a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55e83742f1ce - main\n    31:     0x7f8a94c29d90 - <unknown>\n    32:     0x7f8a94c29e40 - __libc_start_main\n    33:     0x55e837428f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 688,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling document-features v0.2.10\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 689,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling futures-util v0.3.31\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x557ef948b6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x557ef948b6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x557ef948b6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x557ef948b6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x557ef94a99bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x557ef94a99bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x557ef948943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x557ef948b47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x557ef948b47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x557ef948c7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x557ef948c52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x557ef948cca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x557ef948cb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x557ef948bb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x557ef948c8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x557ef94a8be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x557ef94700ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x557ef946afbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x557ef946a5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x557ef946a631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x557ef94867dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x557ef94867dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x557ef94867dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x557ef94867dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x557ef94867dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x557ef94867dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x557ef94867dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x557ef94867dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x557ef94867dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x557ef946a60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x557ef94701ce - main\n    31:     0x7fbb17e29d90 - <unknown>\n    32:     0x7fbb17e29e40 - __libc_start_main\n    33:     0x557ef9469f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 690,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.31\n    Checking vcell v0.1.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 691,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55894485a6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55894485a6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55894485a6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55894485a6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5589448789bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5589448789bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55894485843f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55894485a47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55894485a47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55894485b7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55894485b52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55894485bca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55894485bb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55894485ab69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55894485b8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x558944877be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55894483f0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x558944839fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5589448395be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x558944839631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5589448557dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5589448557dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5589448557dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5589448557dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5589448557dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5589448557dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5589448557dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5589448557dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5589448557dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55894483960a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55894483f1ce - main\n    31:     0x7fa99b429d90 - <unknown>\n    32:     0x7fa99b429e40 - __libc_start_main\n    33:     0x558944838f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 692,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.31\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.31\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n    Checking futures-util v0.3.31\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 693,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55775e9c16a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55775e9c16a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55775e9c16a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55775e9c16a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55775e9df9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55775e9df9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55775e9bf43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55775e9c147e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55775e9c147e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55775e9c27e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55775e9c252d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55775e9c2ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55775e9c2b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55775e9c1b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55775e9c28b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55775e9debe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55775e9a60ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55775e9a0fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55775e9a05be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55775e9a0631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55775e9bc7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55775e9bc7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55775e9bc7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55775e9bc7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55775e9bc7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55775e9bc7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55775e9bc7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55775e9bc7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55775e9bc7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55775e9a060a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55775e9a61ce - main\n    31:     0x7f46a5629d90 - <unknown>\n    32:     0x7f46a5629e40 - __libc_start_main\n    33:     0x55775e99ff45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 694,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 695,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.31\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55a3bf3956a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a3bf3956a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a3bf3956a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a3bf3956a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a3bf3b39bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a3bf3b39bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a3bf39343f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a3bf39547e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a3bf39547e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a3bf3967e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a3bf39652d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a3bf396ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a3bf396b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55a3bf395b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a3bf3968b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a3bf3b2be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a3bf37a0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55a3bf374fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55a3bf3745be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55a3bf374631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55a3bf3907dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55a3bf3907dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55a3bf3907dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55a3bf3907dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55a3bf3907dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55a3bf3907dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55a3bf3907dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55a3bf3907dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55a3bf3907dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55a3bf37460a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55a3bf37a1ce - main\n    31:     0x7f8ba6c29d90 - <unknown>\n    32:     0x7f8ba6c29e40 - __libc_start_main\n    33:     0x55a3bf373f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 696,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n    Checking nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling bare-metal v0.2.5\n    Checking embedded-hal v0.2.7\n   Compiling quote v1.0.37\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n   Compiling vcell v0.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n   Compiling volatile-register v0.2.2\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n   Compiling litrs v0.4.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling autocfg v1.4.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling bitfield v0.13.2\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 697,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55ecc94326a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55ecc94326a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55ecc94326a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55ecc94326a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55ecc94509bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55ecc94509bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55ecc943043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55ecc943247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55ecc943247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55ecc94337e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55ecc943352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55ecc9433ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55ecc9433b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55ecc9432b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55ecc94338b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55ecc944fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55ecc94170ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55ecc9411fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55ecc94115be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55ecc9411631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55ecc942d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55ecc942d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55ecc942d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55ecc942d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55ecc942d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55ecc942d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55ecc942d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55ecc942d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55ecc942d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55ecc941160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55ecc94171ce - main\n    31:     0x7f2f02a29d90 - <unknown>\n    32:     0x7f2f02a29e40 - __libc_start_main\n    33:     0x55ecc9410f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 698,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 718,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 719,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 720,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 721,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 722,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 723,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 724,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 725,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 726,
      "file": "src/mac/driver.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/src/mac/driver.rs (original lines from 26 to 27)\n-    type RxToken<'a> = RxToken<'d> where Self: 'a;\n-    type TxToken<'a> = TxToken<'d> where Self: 'a;\n+    type RxToken<'a>\n+        = RxToken<'d>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = TxToken<'d>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 727,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking bitfield v0.13.2\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking generic-array v0.12.4\n    Checking generic-array v0.13.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 728,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking generic-array v0.12.4\n    Checking generic-array v0.13.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 729,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling nb v0.1.3\n   Compiling bare-metal v0.2.5\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling vcell v0.1.3\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.31\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling document-features v0.2.10\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5615fc2cb6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5615fc2cb6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5615fc2cb6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5615fc2cb6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5615fc2e99bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5615fc2e99bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5615fc2c943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5615fc2cb47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5615fc2cb47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5615fc2cc7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5615fc2cc52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5615fc2ccca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5615fc2ccb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5615fc2cbb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5615fc2cc8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5615fc2e8be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5615fc2b00ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5615fc2aafbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5615fc2aa5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5615fc2aa631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5615fc2c67dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5615fc2c67dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5615fc2c67dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5615fc2c67dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5615fc2c67dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5615fc2c67dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5615fc2c67dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5615fc2c67dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5615fc2c67dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5615fc2aa60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5615fc2b01ce - main\n    31:     0x7fdedd829d90 - <unknown>\n    32:     0x7fdedd829e40 - __libc_start_main\n    33:     0x5615fc2a9f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 730,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking bitfield v0.13.2\n    Checking futures-task v0.3.31\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 731,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling bitfield v0.13.2\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56145e04c6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x56145e04c6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x56145e04c6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x56145e04c6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x56145e06a9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x56145e06a9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x56145e04a43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x56145e04c47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x56145e04c47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x56145e04d7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x56145e04d52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x56145e04dca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x56145e04db4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x56145e04cb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x56145e04d8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x56145e069be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x56145e0310ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x56145e02bfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x56145e02b5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x56145e02b631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x56145e0477dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x56145e0477dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x56145e0477dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x56145e0477dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x56145e0477dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x56145e0477dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x56145e0477dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x56145e0477dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x56145e0477dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x56145e02b60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x56145e0311ce - main\n    31:     0x7fc872829d90 - <unknown>\n    32:     0x7fc872829e40 - __libc_start_main\n    33:     0x56145e02af45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 732,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling nb v1.1.0\n   Compiling proc-macro2 v1.0.87\n   Compiling stable_deref_trait v1.2.0\n   Compiling unicode-ident v1.0.13\n   Compiling semver v0.9.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling syn v1.0.109\n   Compiling embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling heapless v0.8.0\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling version_check v0.9.5\n   Compiling hash32 v0.3.1\n   Compiling generic-array v0.14.7\n   Compiling volatile-register v0.2.2\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-core v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling autocfg v1.4.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5556db8a86a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5556db8a86a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5556db8a86a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5556db8a86a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5556db8c69bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5556db8c69bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5556db8a643f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5556db8a847e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5556db8a847e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5556db8a97e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5556db8a952d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5556db8a9ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5556db8a9b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5556db8a8b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5556db8a98b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5556db8c5be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5556db88d0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5556db887fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5556db8875be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5556db887631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5556db8a37dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5556db8a37dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5556db8a37dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5556db8a37dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5556db8a37dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5556db8a37dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5556db8a37dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5556db8a37dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5556db8a37dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5556db88760a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5556db88d1ce - main\n    31:     0x7fb753029d90 - <unknown>\n    32:     0x7fb753029e40 - __libc_start_main\n    33:     0x5556db886f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 733,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.31\n   Compiling bitfield v0.13.2\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55b8720f06a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55b8720f06a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55b8720f06a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55b8720f06a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55b87210e9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55b87210e9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55b8720ee43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55b8720f047e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55b8720f047e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55b8720f17e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55b8720f152d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55b8720f1ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55b8720f1b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55b8720f0b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55b8720f18b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55b87210dbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55b8720d50ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55b8720cffbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55b8720cf5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55b8720cf631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55b8720eb7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55b8720eb7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55b8720eb7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55b8720eb7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55b8720eb7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55b8720eb7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55b8720eb7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55b8720eb7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55b8720eb7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55b8720cf60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55b8720d51ce - main\n    31:     0x7fb96dc29d90 - <unknown>\n    32:     0x7fb96dc29e40 - __libc_start_main\n    33:     0x55b8720cef45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 734,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling bare-metal v0.2.5\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking embedded-hal v0.2.7\n    Checking vcell v0.1.3\n    Checking hash32 v0.3.1\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling document-features v0.2.10\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 735,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55bc96aa36a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55bc96aa36a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55bc96aa36a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55bc96aa36a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55bc96ac19bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55bc96ac19bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55bc96aa143f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55bc96aa347e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55bc96aa347e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55bc96aa47e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55bc96aa452d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55bc96aa4ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55bc96aa4b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55bc96aa3b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55bc96aa48b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55bc96ac0be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55bc96a880ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55bc96a82fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55bc96a825be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55bc96a82631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55bc96a9e7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55bc96a9e7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55bc96a9e7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55bc96a9e7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55bc96a9e7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55bc96a9e7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55bc96a9e7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55bc96a9e7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55bc96a9e7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55bc96a8260a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55bc96a881ce - main\n    31:     0x7feb8ea29d90 - <unknown>\n    32:     0x7feb8ea29e40 - __libc_start_main\n    33:     0x55bc96a81f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 736,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking bitfield v0.13.2\n    Checking futures-task v0.3.31\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n    Checking generic-array v0.12.4\n    Checking generic-array v0.13.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 737,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.31\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.13.3\n   Compiling generic-array v0.12.4\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56430854f6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x56430854f6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x56430854f6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x56430854f6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x56430856d9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x56430856d9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x56430854d43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x56430854f47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x56430854f47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5643085507e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x56430855052d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x564308550ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x564308550b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x56430854fb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5643085508b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x56430856cbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5643085340ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x56430852efbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x56430852e5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x56430852e631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x56430854a7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x56430854a7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x56430854a7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x56430854a7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x56430854a7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x56430854a7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x56430854a7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x56430854a7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x56430854a7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x56430852e60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5643085341ce - main\n    31:     0x7fcf6f029d90 - <unknown>\n    32:     0x7fcf6f029e40 - __libc_start_main\n    33:     0x56430852df45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 738,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking bitfield v0.13.2\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking generic-array v0.12.4\n    Checking generic-array v0.13.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 739,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling futures-core v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x560716eba6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x560716eba6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x560716eba6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x560716eba6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x560716ed89bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x560716ed89bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x560716eb843f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x560716eba47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x560716eba47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x560716ebb7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x560716ebb52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x560716ebbca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x560716ebbb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x560716ebab69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x560716ebb8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x560716ed7be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x560716e9f0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x560716e99fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x560716e995be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x560716e99631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x560716eb57dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x560716eb57dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x560716eb57dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x560716eb57dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x560716eb57dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x560716eb57dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x560716eb57dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x560716eb57dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x560716eb57dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x560716e9960a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x560716e9f1ce - main\n    31:     0x7f6042a29d90 - <unknown>\n    32:     0x7f6042a29e40 - __libc_start_main\n    33:     0x560716e98f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 740,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n    Checking futures-core v0.3.31\n    Checking bitfield v0.13.2\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking generic-array v0.13.3\n    Checking generic-array v0.12.4\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 741,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.31\n   Compiling bitfield v0.13.2\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55a4c1b046a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55a4c1b046a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55a4c1b046a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55a4c1b046a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55a4c1b229bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55a4c1b229bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55a4c1b0243f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55a4c1b0447e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55a4c1b0447e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55a4c1b057e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55a4c1b0552d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55a4c1b05ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55a4c1b05b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55a4c1b04b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55a4c1b058b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55a4c1b21be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55a4c1ae90ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55a4c1ae3fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55a4c1ae35be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55a4c1ae3631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55a4c1aff7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55a4c1aff7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55a4c1aff7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55a4c1aff7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55a4c1aff7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55a4c1aff7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55a4c1aff7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55a4c1aff7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55a4c1aff7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55a4c1ae360a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55a4c1ae91ce - main\n    31:     0x7fe70e229d90 - <unknown>\n    32:     0x7fe70e229e40 - __libc_start_main\n    33:     0x55a4c1ae2f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 742,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling proc-macro2 v1.0.87\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n    Checking nb v0.1.3\n   Compiling rustc_version v0.2.3\n   Compiling syn v1.0.109\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling quote v1.0.37\n   Compiling version_check v0.9.5\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io-async v0.6.1\n    Checking bitfield v0.13.2\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.31\n   Compiling litrs v0.4.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n    Checking embedded-io v0.6.1\n   Compiling autocfg v1.4.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 743,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling bitfield v0.13.2\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling generic-array v0.12.4\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x555e306626a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x555e306626a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x555e306626a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x555e306626a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x555e306809bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x555e306809bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x555e3066043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x555e3066247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x555e3066247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x555e306637e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x555e3066352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x555e30663ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x555e30663b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x555e30662b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x555e306638b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x555e3067fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x555e306470ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x555e30641fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x555e306415be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x555e30641631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x555e3065d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x555e3065d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x555e3065d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x555e3065d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x555e3065d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x555e3065d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x555e3065d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x555e3065d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x555e3065d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x555e3064160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x555e306471ce - main\n    31:     0x7f16b5429d90 - <unknown>\n    32:     0x7f16b5429e40 - __libc_start_main\n    33:     0x555e30640f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 744,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking bitfield v0.13.2\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 745,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 745,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 746,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 746,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 747,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 748,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 749,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 749,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 750,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 751,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 751,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 752,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 752,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 753,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 753,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 773,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 773,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 773,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 801,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 804,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 804,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 804,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 829,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 830,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 831,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 832,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 833,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 834,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 835,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 836,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 837,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling document-features v0.2.10\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 876,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 877,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 878,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 879,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 880,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 881,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 882,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 883,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 884,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:35:00Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:35:00Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 894,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 895,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 896,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 897,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 898,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 899,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 900,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 901,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 902,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 922,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 923,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 924,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 925,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.31\n    Checking pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 926,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 927,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling heapless v0.8.0\n   Compiling byteorder v1.5.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling typenum v1.17.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.31\n   Compiling version_check v0.9.5\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.31\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling document-features v0.2.10\n   Compiling embedded-storage v0.3.1\n   Compiling block-buffer v0.10.4\n   Compiling embedded-storage-async v0.4.1\n   Compiling crypto-common v0.1.6\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 928,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 929,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 930,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 931,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 932,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling byteorder v1.5.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.31\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 933,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 934,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.31\n   Compiling pin-utils v0.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 935,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 936,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling futures-core v0.3.31\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.31\n   Compiling typenum v1.17.0\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 937,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.31\n   Compiling version_check v0.9.5\n    Checking pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.31\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling generic-array v0.14.7\n    Checking futures-util v0.3.31\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling litrs v0.4.1\n    Checking nb v0.1.3\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking block-buffer v0.10.4\n    Checking embedded-storage-async v0.4.1\n    Checking crypto-common v0.1.6\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking digest v0.10.7\n   Compiling document-features v0.2.10\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 938,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.31\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.31\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.31\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 939,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 968,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 968,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 969,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 969,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 970,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 970,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 971,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 971,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 972,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 972,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 973,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 973,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 974,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 974,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 975,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 975,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 976,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 976,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 978,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:36:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 979,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:36:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 980,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 981,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:37:11Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:37:11Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 982,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:37:08Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:37:08Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 983,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:37:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:37:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 984,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:37:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:37:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 985,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:36:59Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:59Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 986,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:36:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:46Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:36:48Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:36:48Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1004,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1024,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.31\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1025,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1026,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-io v0.6.1\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.31\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1027,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.31\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.31\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1028,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-project-lite v0.2.14\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1029,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking embedded-io v0.6.1\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.31\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1030,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.31\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.31\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1031,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.31\n    Checking futures-task v0.3.31\n    Checking stable_deref_trait v1.2.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.31\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1032,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.31\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.31\n    Checking futures-util v0.3.31\n    Checking critical-section v1.1.3\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1033,
      "file": "/home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused `#[macro_use]` import\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs:13:1\n   |\n13 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "/home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "/home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `println!(\"\")`\n   --> src/net.rs:146:9\n    |\n146 |         println!(\"\");\n    |         ^^^^^^^^^^^^ help: replace it with: `println!()`\n    |\n    = note: `#[warn(clippy::println_empty_string)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#println_empty_string\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:58:45\n   |\n58 |                     String::from_utf8_lossy(udp_packet.data.as_ref())\n   |                                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = note: `#[warn(clippy::useless_asref)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:60:25\n   |\n60 |                 hexdump(udp_packet.data.as_ref());\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n  --> src/net.rs:62:44\n   |\n62 |                 if String::from_utf8_lossy(udp_packet.data.as_ref()) == \"this is a ping!\" {\n   |                                            ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `udp_packet.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/net.rs:76:30\n   |\n76 |                     net.send(&reply_data).expect(\"can't send to net\");\n   |                              ^^^^^^^^^^^ help: change this to: `reply_data`\n   |\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n   --> src/net.rs:100:49\n    |\n100 |                         String::from_utf8_lossy(tcp_packet.data.as_ref())\n    |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this call to `as_ref` does nothing\n   --> src/net.rs:103:29\n    |\n103 |                     hexdump(tcp_packet.data.as_ref());\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `tcp_packet.data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_asref\n\n"
    },
    {
      "cmd_idx": 1033,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/net.rs:136:20\n    |\n136 |                 if c >= 0x20 && c <= 0x7e {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n    |\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n\n"
    },
    {
      "cmd_idx": 1034,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:38:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:38:29Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1035,
      "file": "src/dns.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/dns.rs (original lines from 1 to 1)\n+\n+\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 15 to 15)\n-mod net;\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 17 to 17)\n+mod net;\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 20 to 20)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 24 to 24)\n-\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/main.rs (original lines from 26 to 26)\n-\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 167 to 167)\n-    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47,0x45,0x54, 0x20] {\n+    if tcp_packet.data_len > 10 && tcp_packet.data[..4] == [0x47, 0x45, 0x54, 0x20] {\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 180 to 180)\n-            net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+            net.send(&reply_packet.build_data())\n+                .expect(\"can't send reply packet\");\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/net.rs (original lines from 187 to 187)\n-        net.send(&reply_packet.build_data()).expect(\"can't send reply packet\");\n+        net.send(&reply_packet.build_data())\n+            .expect(\"can't send reply packet\");\n"
    },
    {
      "cmd_idx": 1035,
      "file": "src/virtio_impls.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/example/src/virtio_impls.rs (original lines from 51 to 51)\n+\n"
    },
    {
      "cmd_idx": 1036,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2022-08-08, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\nwarning: `/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling autocfg v1.1.0\n   Compiling proc-macro2 v1.0.51\n   Compiling quote v1.0.23\n   Compiling unicode-ident v1.0.6\n   Compiling syn v1.0.109\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling cfg-if v1.0.0\nerror[E0635]: unknown feature `proc_macro_span_shrink`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/proc-macro2-1.0.51/src/lib.rs:92:30\n   |\n92 |     feature(proc_macro_span, proc_macro_span_shrink)\n   |                              ^^^^^^^^^^^^^^^^^^^^^^\n\n   Compiling bitflags v1.3.2\n   Compiling byteorder v1.4.3\n   Compiling lock_api v0.4.9\n[2024-10-11T08:38:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:38:29Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `proc-macro2` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n  --> src/net.rs:52:1\n   |\n52 | / bitflags! {\n53 | |     // #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n54 | |     pub struct TcpFlags: u8 {\n55 | |         const NONE = 0;\n...  |\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1037,
      "file": "src/packets/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/packets/arp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `UDP` contains a capitalized acronym\n  --> src/net.rs:45:12\n   |\n45 | pub struct UDP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Udp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/bitflags-1.3.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: &-masking with zero\n  --> src/net.rs:52:1\n   |\n52 | / bitflags! {\n53 | |     // #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n54 | |     pub struct TcpFlags: u8 {\n55 | |         const NONE = 0;\n...  |\n62 | |     }\n63 | | }\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bad_bit_mask\n   = note: `#[deny(clippy::bad_bit_mask)]` on by default\n   = note: this error originates in the macro `__impl_bitflags` which comes from the expansion of the macro `bitflags` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TCP` contains a capitalized acronym\n  --> src/net.rs:68:12\n   |\n68 | pub struct TCP {\n   |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tcp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ICMP` contains a capitalized acronym\n  --> src/net.rs:83:12\n   |\n83 | pub struct ICMP {\n   |            ^^^^ help: consider making the acronym lowercase, except the initial letter: `Icmp`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::IPv4` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:17:5\n   |\n17 | /     pub fn to_string(&self) -> String {\n18 | |         format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n19 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::IPv4`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n   = note: `#[deny(clippy::inherent_to_string_shadow_display)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/addr.rs",
      "kind": "Clippy(Error)",
      "raw": "error: type `addr::MacAddress` implements inherent method `to_string(&self) -> String` which shadows the implementation of `Display`\n  --> src/addr.rs:49:5\n   |\n49 | /     pub fn to_string(&self) -> String {\n50 | |         format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n51 | |     }\n   | |_____^\n   |\n   = help: remove the inherent method from type `addr::MacAddress`\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inherent_to_string_shadow_display\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n  --> src/packets/udp.rs:22:5\n   |\n22 | /     pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n23 | |         dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n24 | |         data_len: usize, data: &'a [u8]) -> Self {\n   | |________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n   = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/packets/udp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/udp.rs:68:34\n   |\n68 |         udp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1038,
      "file": "src/packets/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/packets/tcp.rs:63:34\n   |\n63 |         tcp_data.copy_from_slice(&self.data);\n   |                                  ^^^^^^^^^^ help: change this to: `self.data`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:55:13\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: variable does not need to be mutable\n  --> src/packets/arp.rs:61:13\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |             ----^^^^^^^^^^\n   |             |\n   |             help: remove this `mut`\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/consts.rs",
      "kind": "Mirai",
      "raw": "warning: constant `ARP_PTYPE_ETHTYPE_IP` is never used\n  --> src/consts.rs:10:18\n   |\n10 | pub(crate) const ARP_PTYPE_ETHTYPE_IP: u16 = 0x0800;\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/consts.rs",
      "kind": "Mirai",
      "raw": "warning: constant `IP_PROTOCAL_IGMP` is never used\n  --> src/consts.rs:17:18\n   |\n17 | pub(crate) const IP_PROTOCAL_IGMP: u8 = 2;\n   |                  ^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/udp.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/packets/udp.rs:60:27\n   |\n60 |         ip_header.len = ((self.data_len + UDP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:55:30\n   |\n55 |         let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/arp.rs",
      "kind": "Mirai",
      "raw": "warning: possible called `Option::unwrap()` on a `None` value\n  --> src/packets/arp.rs:61:30\n   |\n61 |         let mut arp_header = unsafe { data_ptr_iter.next_mut::<Arp>() }.unwrap();\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/packets/tcp.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/packets/tcp.rs:51:27\n   |\n51 |         ip_header.len = ((self.data_len + TCP_LEN + IP_LEN) as u16).to_be(); // toal len\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:57:9\n   |\n57 |         sum += unsafe{ *w as u32 };\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:62:19\n   |\n62 |             sum = (sum & 0xFFFF) + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:63:19\n   |\n63 |             sum = sum + (sum >> 16);\n   |                   ^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1039,
      "file": "src/utils.rs",
      "kind": "Mirai",
      "raw": "warning: possible attempt to add with overflow\n  --> src/utils.rs:68:9\n   |\n68 |         sum += unsafe { *(w as *const u8) as u32};\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n"
    },
    {
      "cmd_idx": 1042,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 1 to 1)\n-use core::fmt::{Display, Debug};\n+use core::fmt::{Debug, Display};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 3 to 3)\n-use alloc::{string::String, format};\n+use alloc::{format, string::String};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 18 to 18)\n-        format!(\"{}.{}.{}.{}\", (self.0 >> 24) & 0xff, (self.0 >> 16) & 0xff, (self.0 >> 8) & 0xff, self.0 & 0xff)\n+        format!(\n+            \"{}.{}.{}.{}\",\n+            (self.0 >> 24) & 0xff,\n+            (self.0 >> 16) & 0xff,\n+            (self.0 >> 8) & 0xff,\n+            self.0 & 0xff\n+        )\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 50 to 50)\n-        format!(\"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\", self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5])\n+        format!(\n+            \"{:x}:{:x}:{:x}:{:x}:{:x}:{:x}\",\n+            self.0[0], self.0[1], self.0[2], self.0[3], self.0[4], self.0[5]\n+        )\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 62 to 62)\n-        f.debug_tuple(\"MacAddress\").field(&self.to_string()).finish()\n+        f.debug_tuple(\"MacAddress\")\n+            .field(&self.to_string())\n+            .finish()\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/addr.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/addr.rs (original lines from 65 to 65)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 5 to 5)\n-pub(crate) const ETH_RTYPE_IP: u16 =  0x0800; // Internet protocol\n+pub(crate) const ETH_RTYPE_IP: u16 = 0x0800; // Internet protocol\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/consts.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/consts.rs (original lines from 24 to 24)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 3 to 3)\n-mod net;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 6 to 6)\n+mod net;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 20 to 20)\n-pub use net::TcpFlags;\n+use consts::*;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 24 to 24)\n+pub use net::TcpFlags;\n+use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 27 to 27)\n-use net::IP_LEN;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 32 to 32)\n-use consts::*;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 37 to 38)\n-    pub ip:  IPv4,\n-    pub mac: MacAddress\n+    pub ip: IPv4,\n+    pub mac: MacAddress,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 43 to 46)\n-        Self {\n-            ip,\n-            mac\n-        }\n+        Self { ip, mac }\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 49 to 51)\n-    fn analysis_udp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let udp_header = unsafe{data_ptr_iter.next::<UDP>()}.unwrap();\n-        let data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_udp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let udp_header = unsafe { data_ptr_iter.next::<UDP>() }.unwrap();\n+        let data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 54 to 62)\n-        Packet::UDP(packets::udp::UDPPacket { \n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: udp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: udp_header.dport.to_be(), \n-            data_len, \n-            data: &data[..data_len]\n+        Packet::UDP(packets::udp::UDPPacket {\n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: udp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: udp_header.dport.to_be(),\n+            data_len,\n+            data: &data[..data_len],\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 66 to 67)\n-    fn analysis_tcp(&self, mut data_ptr_iter: UnsafeRefIter, ip_header: &Ip, eth_header: &Eth) -> Packet {\n-        let tcp_header = unsafe{data_ptr_iter.next::<TCP>()}.unwrap();\n+    fn analysis_tcp(\n+        &self,\n+        mut data_ptr_iter: UnsafeRefIter,\n+        ip_header: &Ip,\n+        eth_header: &Eth,\n+    ) -> Packet {\n+        let tcp_header = unsafe { data_ptr_iter.next::<TCP>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 69 to 69)\n-        let data = &unsafe{data_ptr_iter.get_curr_arr()}[offset..];\n+        let data = &unsafe { data_ptr_iter.get_curr_arr() }[offset..];\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 73 to 78)\n-            source_ip: IPv4::from_u32(ip_header.src.to_be()), \n-            source_mac: MacAddress::new(eth_header.shost), \n-            source_port: tcp_header.sport.to_be(), \n-            dest_ip: IPv4::from_u32(ip_header.dst.to_be()), \n-            dest_mac: MacAddress::new(eth_header.dhost), \n-            dest_port: tcp_header.dport.to_be(), \n+            source_ip: IPv4::from_u32(ip_header.src.to_be()),\n+            source_mac: MacAddress::new(eth_header.shost),\n+            source_port: tcp_header.sport.to_be(),\n+            dest_ip: IPv4::from_u32(ip_header.dst.to_be()),\n+            dest_mac: MacAddress::new(eth_header.dhost),\n+            dest_port: tcp_header.dport.to_be(),\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 89 to 90)\n-    fn analysis_icmp(&self, data_ptr_iter: UnsafeRefIter, _ip_header: &Ip, _eth_header: &Eth) -> Packet {\n-        let _data = unsafe{data_ptr_iter.get_curr_arr()};\n+    fn analysis_icmp(\n+        &self,\n+        data_ptr_iter: UnsafeRefIter,\n+        _ip_header: &Ip,\n+        _eth_header: &Eth,\n+    ) -> Packet {\n+        let _data = unsafe { data_ptr_iter.get_curr_arr() };\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 96 to 96)\n-        let ip_header = unsafe{data_ptr_iter.next::<Ip>()}.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next::<Ip>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 99 to 99)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 103 to 103)\n-            return Packet::None\n+            return Packet::None;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 115 to 115)\n-        let arp_header = unsafe{data_ptr_iter.next::<Arp>()}.unwrap();\n+        let arp_header = unsafe { data_ptr_iter.next::<Arp>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 122 to 126)\n-                IPv4::from_u32(arp_header.spa.to_be()), \n-                MacAddress::new(arp_header.sha), \n-                IPv4::from_u32(arp_header.tpa.to_be()), \n-                MacAddress::new(arp_header.tha), \n-                rtype\n+                IPv4::from_u32(arp_header.spa.to_be()),\n+                MacAddress::new(arp_header.sha),\n+                IPv4::from_u32(arp_header.tpa.to_be()),\n+                MacAddress::new(arp_header.tha),\n+                rtype,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 133 to 133)\n-        let eth_header = unsafe{data_ptr_iter.next::<Eth>()}.unwrap();\n+        let eth_header = unsafe { data_ptr_iter.next::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/lib.rs (original lines from 137 to 137)\n-            _ => Packet::None // Unsupported type\n+            _ => Packet::None, // Unsupported type\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 3 to 3)\n-\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 9 to 9)\n-    pub(crate) rtype: u16      // packet type, arp or ip\n+    pub(crate) rtype: u16,     // packet type, arp or ip\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 15 to 23)\n-    pub(crate) httype: u16, // Hardware type\n-    pub(crate) pttype: u16, // Protocol type, For IPv4, this has the value 0x0800.\n-    pub(crate) hlen: u8,    // Hardware length: Ethernet address length is 6.\n-    pub(crate) plen: u8,    // Protocol length: IPv4 address length is 4.\n-    pub(crate) op: u16,     // Operation: 1 for request, 2 for reply.\n-    pub(crate) sha: [u8; 6],// Sender hardware address\n-    pub(crate) spa: u32,    // Sender protocol address\n-    pub(crate) tha: [u8; 6],// Target hardware address\n-    pub(crate) tpa: u32     // Target protocol address\n+    pub(crate) httype: u16,  // Hardware type\n+    pub(crate) pttype: u16,  // Protocol type, For IPv4, this has the value 0x0800.\n+    pub(crate) hlen: u8,     // Hardware length: Ethernet address length is 6.\n+    pub(crate) plen: u8,     // Protocol length: IPv4 address length is 4.\n+    pub(crate) op: u16,      // Operation: 1 for request, 2 for reply.\n+    pub(crate) sha: [u8; 6], // Sender hardware address\n+    pub(crate) spa: u32,     // Sender protocol address\n+    pub(crate) tha: [u8; 6], // Target hardware address\n+    pub(crate) tpa: u32,     // Target protocol address\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 30 to 39)\n-    pub(crate) vhl: u8,    // version << 4 | header length >> 2\n-    pub(crate) tos: u8,    // type of service\n-    pub(crate) len: u16,   // total length, packet length\n-    pub(crate) id: u16,    // identification, can combine all packets\n-    pub(crate) off: u16,   // fragment offset field, packet from\n-    pub(crate) ttl: u8,    // time to live\n-    pub(crate) pro: u8,    // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n-    pub(crate) sum: u16,   // checksum,\n-    pub(crate) src: u32,   // souce ip\n-    pub(crate) dst: u32    // destination ip\n+    pub(crate) vhl: u8,  // version << 4 | header length >> 2\n+    pub(crate) tos: u8,  // type of service\n+    pub(crate) len: u16, // total length, packet length\n+    pub(crate) id: u16,  // identification, can combine all packets\n+    pub(crate) off: u16, // fragment offset field, packet from\n+    pub(crate) ttl: u8,  // time to live\n+    pub(crate) pro: u8,  // protocol， ICMP(1)、IGMP(2)、TCP(6)、UDP(17)\n+    pub(crate) sum: u16, // checksum,\n+    pub(crate) src: u32, // souce ip\n+    pub(crate) dst: u32, // destination ip\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 49 to 49)\n-    pub(crate) sum: u16    // checksum\n+    pub(crate) sum: u16,   // checksum\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 69 to 73)\n-    pub(crate) sport: u16, // souce port\n-    pub(crate) dport: u16, // destination port\n-    pub(crate) seq: u32, // sequence number\n-    pub(crate) ack: u32, // acknowledgement number\n-    pub(crate) offset: u8, // offset, first 4 bytes are tcp header length\n+    pub(crate) sport: u16,      // souce port\n+    pub(crate) dport: u16,      // destination port\n+    pub(crate) seq: u32,        // sequence number\n+    pub(crate) ack: u32,        // acknowledgement number\n+    pub(crate) offset: u8,      // offset, first 4 bytes are tcp header length\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 75 to 77)\n-    pub(crate) win: u16,    // window size\n-    pub(crate) sum: u16,    // checksum\n-    pub(crate) urg: u16,    // urgent pointer\n+    pub(crate) win: u16,        // window size\n+    pub(crate) sum: u16,        // checksum\n+    pub(crate) urg: u16,        // urgent pointer\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 93 to 93)\n-pub(crate) const IP_LEN:  usize = size_of::<Ip>();\n+pub(crate) const IP_LEN: usize = size_of::<Ip>();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 102 to 102)\n-00 00 00 00 00 00 0a 00 02 0f                         ..........                  \n+00 00 00 00 00 00 0a 00 02 0f                         ..........\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 108 to 108)\n-52 55 0a 00 02 02 0a 00 02 02                         RU........                  \n+52 55 0a 00 02 02 0a 00 02 02                         RU........\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 117 to 117)\n-73 20 61 20 70 69 6e 67 21                            s a ping!                     \n+73 20 61 20 70 69 6e 67 21                            s a ping!\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 121 to 121)\n-74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!   \n+74 68 69 73 20 69 73 20 61 20 70 69 6e 67 21          this is a ping!\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/net.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/net.rs (original lines from 125 to 125)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 3 to 3)\n+use crate::consts::{\n+    ARP_ETHADDR_LEN, ARP_HRD_ETHER, ARP_OP_REPLY, ARP_OP_REQUEST, BROADCAST_MAC, ETH_RTYPE_ARP,\n+    ETH_RTYPE_IP,\n+};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 5 to 7)\n-use crate::consts::{ARP_OP_REQUEST, ARP_OP_REPLY, ARP_HRD_ETHER, ETH_RTYPE_IP, ARP_ETHADDR_LEN, ETH_RTYPE_ARP, BROADCAST_MAC};\n-use crate::MacAddress;\n-use crate::IPv4;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 9 to 9)\n+use crate::IPv4;\n+use crate::MacAddress;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 14 to 14)\n-    Unsupported\n+    Unsupported,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 22 to 22)\n-            _ => ArpType::Unsupported\n+            _ => ArpType::Unsupported,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 41 to 41)\n-    pub rtype: ArpType\n+    pub rtype: ArpType,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 45 to 46)\n-    pub fn new(sender_ip: IPv4, sender_mac: MacAddress, target_ip: IPv4, target_mac: MacAddress, rtype: ArpType) -> Self {\n-        ArpPacket { sender_ip, sender_mac, target_ip, target_mac, rtype }\n+    pub fn new(\n+        sender_ip: IPv4,\n+        sender_mac: MacAddress,\n+        target_ip: IPv4,\n+        target_mac: MacAddress,\n+        rtype: ArpType,\n+    ) -> Self {\n+        ArpPacket {\n+            sender_ip,\n+            sender_mac,\n+            target_ip,\n+            target_mac,\n+            rtype,\n+        }\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 55 to 55)\n-        let mut eth_header = unsafe{ data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let mut eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 64 to 65)\n-        arp_header.hlen = ARP_ETHADDR_LEN as u8;    // mac address len\n-        arp_header.plen = 4;    // ipv4\n+        arp_header.hlen = ARP_ETHADDR_LEN as u8; // mac address len\n+        arp_header.plen = 4; // ipv4\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 67 to 67)\n-        \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 70 to 70)\n-    \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 76 to 76)\n-    pub fn reply_packet(&self, local_ip: IPv4, local_mac: MacAddress) -> Result<Self, NetStackErrors> {\n+    pub fn reply_packet(\n+        &self,\n+        local_ip: IPv4,\n+        local_mac: MacAddress,\n+    ) -> Result<Self, NetStackErrors> {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 80 to 84)\n-                    local_ip, \n-                    local_mac, \n-                    self.sender_ip, \n-                    self.sender_mac, \n-                    ArpType::Reply\n+                    local_ip,\n+                    local_mac,\n+                    self.sender_ip,\n+                    self.sender_mac,\n+                    ArpType::Reply,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 89 to 89)\n-            _ => Err(NetStackErrors::NotRequiredReplyArp)\n+            _ => Err(NetStackErrors::NotRequiredReplyArp),\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/arp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/arp.rs (original lines from 93 to 93)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 1 to 1)\n-pub mod udp;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/mod.rs (original lines from 4 to 4)\n+pub mod udp;\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 4 to 4)\n-use crate::utils::{UnsafeRefIter, check_sum};\n+use crate::net::{Eth, Ip, TcpFlags, ETH_LEN, IP_LEN, TCP, TCP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 7 to 7)\n-use crate::net::{TCP_LEN, IP_LEN, ETH_LEN, Eth, Ip, TCP, TcpFlags};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 19 to 24)\n-    pub seq: u32,           // sequence number\n-    pub ack: u32,           // acknowledgement number\n-    pub flags: TcpFlags,    // flags, last 6 are flags(U, A, P, R, S, F)\n-    pub win: u16,           // window size\n-    pub urg: u16,           // urgent pointer\n-    pub data: &'a [u8]      // data buffer\n+    pub seq: u32,        // sequence number\n+    pub ack: u32,        // acknowledgement number\n+    pub flags: TcpFlags, // flags, last 6 are flags(U, A, P, R, S, F)\n+    pub win: u16,        // window size\n+    pub urg: u16,        // urgent pointer\n+    pub data: &'a [u8],  // data buffer\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 27 to 27)\n-impl<'a> TCPPacket<'a>  {\n+impl<'a> TCPPacket<'a> {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 33 to 36)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let tcp_header = unsafe{data_ptr_iter.next_mut::<TCP>()}.unwrap();\n-        let tcp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let tcp_header = unsafe { data_ptr_iter.next_mut::<TCP>() }.unwrap();\n+        let tcp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 38 to 38)\n-\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 42 to 42)\n-        \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 48 to 48)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 64 to 64)\n-        \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 69 to 69)\n-        tcp_header.sum = check_sum(tcp_header as *mut _ as *mut u8, (TCP_LEN + self.data_len) as _, sum); // tcp checksum. zero means no checksum is provided.\n+        tcp_header.sum = check_sum(\n+            tcp_header as *mut _ as *mut u8,\n+            (TCP_LEN + self.data_len) as _,\n+            sum,\n+        ); // tcp checksum. zero means no checksum is provided.\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 74 to 74)\n-    pub fn reply(&self, data: &'a[u8]) -> Self {\n+    pub fn reply(&self, data: &'a [u8]) -> Self {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 90 to 90)\n-        \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 108 to 108)\n-            data: TCP_EMPTY_DATA\n+            data: TCP_EMPTY_DATA,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/tcp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/tcp.rs (original lines from 112 to 112)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 3 to 4)\n-use crate::consts::{ETH_RTYPE_IP, IP_PROTOCAL_UDP, IP_HEADER_VHL};\n-use crate::net::{UDP, Eth, Ip, UDP_LEN, IP_LEN, ETH_LEN};\n+use crate::consts::{ETH_RTYPE_IP, IP_HEADER_VHL, IP_PROTOCAL_UDP};\n+use crate::net::{Eth, Ip, ETH_LEN, IP_LEN, UDP, UDP_LEN};\n+use crate::utils::{check_sum, UnsafeRefIter};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 7 to 7)\n-use crate::utils::{UnsafeRefIter, check_sum};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 18 to 18)\n-    pub data: &'a [u8]\n+    pub data: &'a [u8],\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 22 to 24)\n-    pub fn new(source_ip: IPv4, source_mac: MacAddress, source_port: u16, \n-        dest_ip: IPv4, dest_mac: MacAddress, dest_port: u16, \n-        data_len: usize, data: &'a [u8]) -> Self {\n+    pub fn new(\n+        source_ip: IPv4,\n+        source_mac: MacAddress,\n+        source_port: u16,\n+        dest_ip: IPv4,\n+        dest_mac: MacAddress,\n+        dest_port: u16,\n+        data_len: usize,\n+        data: &'a [u8],\n+    ) -> Self {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 33 to 33)\n-            data\n+            data,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 42 to 45)\n-        let eth_header = unsafe{data_ptr_iter.next_mut::<Eth>()}.unwrap();\n-        let ip_header = unsafe{data_ptr_iter.next_mut::<Ip>()}.unwrap();\n-        let udp_header = unsafe{data_ptr_iter.next_mut::<UDP>()}.unwrap();\n-        let udp_data = unsafe {data_ptr_iter.get_curr_arr_mut()};\n+        let eth_header = unsafe { data_ptr_iter.next_mut::<Eth>() }.unwrap();\n+        let ip_header = unsafe { data_ptr_iter.next_mut::<Ip>() }.unwrap();\n+        let udp_header = unsafe { data_ptr_iter.next_mut::<UDP>() }.unwrap();\n+        let udp_data = unsafe { data_ptr_iter.get_curr_arr_mut() };\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 47 to 47)\n-\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 51 to 51)\n-        \n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 57 to 57)\n-        ip_header.id  = 0; // packet identified, use 0 as default\n+        ip_header.id = 0; // packet identified, use 0 as default\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 65 to 66)\n-        udp_header.sum   = 0; // udp checksum   zero means no checksum is provided.\n-        udp_header.ulen  = ((self.data_len + UDP_LEN) as u16).to_be();\n+        udp_header.sum = 0; // udp checksum   zero means no checksum is provided.\n+        udp_header.ulen = ((self.data_len + UDP_LEN) as u16).to_be();\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 75 to 82)\n-            self.dest_ip, \n-            self.dest_mac, \n-            self.dest_port, \n-            self.source_ip, \n-            self.source_mac, \n-            self.source_port, \n-            data.len(), \n-            data\n+            self.dest_ip,\n+            self.dest_mac,\n+            self.dest_port,\n+            self.source_ip,\n+            self.source_mac,\n+            self.source_port,\n+            data.len(),\n+            data,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/packets/udp.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/packets/udp.rs (original lines from 86 to 86)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 1 to 1)\n-use crate::packets::{udp::UDPPacket, arp::ArpPacket, tcp::TCPPacket};\n+use crate::packets::{arp::ArpPacket, tcp::TCPPacket, udp::UDPPacket};\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 11 to 11)\n-    None\n+    None,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/results.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/results.rs (original lines from 18 to 18)\n+\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 5 to 5)\n-    end: usize\n+    end: usize,\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 11 to 13)\n-        Self { \n-            ptr: data.as_ptr() as usize, \n-            end: data.as_ptr() as usize + data.len()\n+        Self {\n+            ptr: data.as_ptr() as usize,\n+            end: data.as_ptr() as usize + data.len(),\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 40 to 40)\n-    pub unsafe fn get_curr_arr(&self) -> &'static [u8]{\n+    pub unsafe fn get_curr_arr(&self) -> &'static [u8] {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 45 to 45)\n-    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8]{\n+    pub unsafe fn get_curr_arr_mut(&self) -> &'static mut [u8] {\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 51 to 52)\n-pub fn check_sum(addr:*mut u8, len:u32, sum: u32) -> u16 {\n-    let mut sum:u32 = sum;\n+pub fn check_sum(addr: *mut u8, len: u32, sum: u32) -> u16 {\n+    let mut sum: u32 = sum;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 55 to 57)\n-    \n-     while nleft > 1 {\n-        sum += unsafe{ *w as u32 };\n+\n+    while nleft > 1 {\n+        sum += unsafe { *w as u32 };\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 65 to 65)\n-     }\n+    }\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 67 to 69)\n-     if nleft == 1 {\n-        sum += unsafe { *(w as *const u8) as u32};\n-     }\n+    if nleft == 1 {\n+        sum += unsafe { *(w as *const u8) as u32 };\n+    }\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 71 to 71)\n+    sum = (sum & 0xFFFF) + (sum >> 16);\n+    sum = sum + (sum >> 16);\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 72 to 73)\n-     sum = (sum & 0xFFFF) + (sum >> 16);\n-     sum = sum + (sum >> 16);\n+    let answer: u16 = !sum as u16;\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 75 to 77)\n-     let answer:u16 = !sum as u16;\n-\n-     answer\n+    answer\n"
    },
    {
      "cmd_idx": 1043,
      "file": "src/utils.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/lose-net-stack/src/utils.rs (original lines from 79 to 79)\n+\n"
    },
    {
      "cmd_idx": 1044,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 3 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 1045,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lose-net-stack, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/lose-net-stack\n// cmd=cargo clippy --target riscv64imac-unknown-none-elf --no-deps --message-format=json\n    Checking bitflags v1.3.2\n    Checking lose-net-stack v0.1.0 (/home/runner/check/batch_1/Byte-OS/lose-net-stack)\nerror: could not compile `lose-net-stack` (lib) due to 3 previous errors; 10 warnings emitted\n"
    },
    {
      "cmd_idx": 1046,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1046,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1046,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1046,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1047,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1047,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1047,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1047,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1048,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1048,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1048,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1049,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "/home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1050,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/macros.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/frame.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/frame.rs:6:15\n  |\n6 |     Lazy::new(|| LockedFrameAllocator::new());\n  |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `LockedFrameAllocator::new`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/pci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/pci.rs:14:94\n   |\n14 |               enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |  ______________________________________________________________________________________________^\n15 | |             return;\n   | |__________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n14 -             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n15 -             return;\n14 +             enumerate_pci((pci_addr.starting_address as usize | VIRT_ADDR_START) as *mut u8);\n   |\n\n"
    },
    {
      "cmd_idx": 1051,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n  --> src/main.rs:70:9\n   |\n70 |         loop {}\n   |         ^^^^^^^\n   |\n   = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n   = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1052,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1053,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:18Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1054,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:28Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:28Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1055,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1056,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1057,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1064,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target loongarch64-unknown-none\n   Compiling scopeguard v1.2.0\n   Compiling byteorder v1.5.0\n   Compiling lock_api v0.4.11\n   Compiling bitflags v2.6.0\n   Compiling bit_field v0.10.2\n   Compiling log v0.4.22\n   Compiling bitflags v1.3.2\n   Compiling zerocopy v0.7.35\n   Compiling loongArch64 v0.2.4\n[2024-10-11T08:39:26Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:26Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling spin v0.9.8\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling polyhal v0.1.3 (/home/runner/check/batch_1/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:5:11\n  |\n5 | #[cfg(not(board = \"2k1000\"))]\n  |           ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/debug_console/loongarch64.rs:7:7\n  |\n7 | #[cfg(board = \"2k1000\")]\n  |       ^^^^^^^^^^^^^^^^\n  |\n  = help: consider using a Cargo feature instead\n  = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n           [lints.rust]\n           unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n  = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n  = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n   Compiling virtio-drivers v0.7.5\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/irq/mod.rs:35:22\n   |\n35 | pub struct IRQVector(pub(crate) usize);\n   |            --------- ^^^^^^^^^^^^^^^^\n   |            |\n   |            field in this struct\n   |\n   = note: `IRQVector` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n35 | pub struct IRQVector(());\n   |                      ~~\n\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 9 warnings\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustcRkcrQz/symbols.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39.example.8dc5fc612147e823-cgu.0.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39.example.8dc5fc612147e823-cgu.1.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39.example.8dc5fc612147e823-cgu.2.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39.example.8dc5fc612147e823-cgu.3.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39.0j66n1yuqvma5gajh2eqaju2e.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libvirtio_drivers-c71b4244ead45a74.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libzerocopy-b65a73bda5dd105a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbyteorder-a6608e82b803455e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libpolyhal-0ae174ba426b0f7c.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libloongArch64-5e6a7ff73e9045d6.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-7d4c229935312c2e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbit_field-f205bae68304904b.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libcfg_if-e5b2c08080a8d0bd.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbitflags-a49aa3b7c7494a35.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libfdt-45db0bc4944b4493.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblog-531edc9e0960d321.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libbuddy_system_allocator-0f74cc2c33704f4a.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/liballoc-cf622d6ac0c1207e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libspin-e73be5f20d839958.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/liblock_api-cb5b9691a0c0d257.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/libscopeguard-e4c379832e03342e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/librustc_std_workspace_core-3b1e26e39e9a51e8.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcore-d6c82fdbb3df4fe1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/loongarch64-unknown-none/debug/deps/example-121b3f177e864c39\" \"--gc-sections\" \"-Tlinker/linker-loongarch64.ld\"\n  = note: rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvdi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvsi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-absvti2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addtf3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvdi3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvsi3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-addvti3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzdi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzsi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-clzti2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpdi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-cmpti2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzdi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzsi2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-ctzti2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divdc3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divsc3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-divtf3.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extenddftf2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: /home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/loongarch64-unknown-none/lib/libcompiler_builtins-1c0eeb3885babbe8.rlib(45c91108d938afe8-extendhfsf2.o) is incompatible with /tmp/rustcRkcrQz/symbols.o\n          rust-lld: error: too many errors emitted, stopping now (use --error-limit=0 to see all errors)\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1065,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64imac-unknown-none-elf\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.11\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.11.1\n   Compiling log v0.4.22\n   Compiling sbi-spec v0.0.4\n   Compiling byteorder v1.5.0\n[2024-10-11T08:39:31Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:31Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.2\n   Compiling bitflags v2.6.0\n   Compiling zerocopy v0.7.35\n   Compiling spin v0.9.8\n   Compiling sbi-rt v0.0.2\n   Compiling cfg-if v1.0.0\n   Compiling fdt v0.1.5\n   Compiling buddy_system_allocator v0.9.1\n   Compiling polyhal v0.1.3 (/home/runner/check/batch_1/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:23:15\n   |\n23 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:39:19\n   |\n39 |         #[cfg(not(c906))]\n   |                   ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:94:15\n   |\n94 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:96:15\n   |\n96 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:98:15\n   |\n98 |         #[cfg(c906)]\n   |               ^^^^\n   |\n   = help: consider using a Cargo feature instead\n   = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n            [lints.rust]\n            unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n   = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:100:15\n    |\n100 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/pagetable/riscv64.rs:102:15\n    |\n102 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unused macro definition: `PerCPUReservedOffset`\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\n   Compiling virtio-drivers v0.7.5\nwarning: function `parse_dtb_info` is never used\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: struct `PerCPUReserved` is never constructed\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\nwarning: `polyhal` (lib) generated 16 warnings\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"/tmp/rustc1hL9Fl/symbols.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42.example.54a2e95f759bcc61-cgu.0.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42.example.54a2e95f759bcc61-cgu.1.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42.example.54a2e95f759bcc61-cgu.2.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42.example.54a2e95f759bcc61-cgu.3.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42.8cs86yaczhouw8hb7461y288f.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-Bstatic\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libvirtio_drivers-fcf6b8727f2597cf.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libzerocopy-89aac2adc9889c54.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbyteorder-f161e0329d454c3f.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-b82d72bda98f2e93.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libsbi_rt-35b66abd80ea6e3f.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libsbi_spec-7b28f0ef5d1e6a3b.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libriscv-771469dbdf56ac8a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libcritical_section-c695224287528485.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libembedded_hal-11918fc9ddc2f56a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libcfg_if-dfe8e9d3ebb4e29e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbitflags-e84e155992e8f5f5.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libfdt-ff9e0fb5d8925713.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/liblog-f2956d8a6b25dda3.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libbuddy_system_allocator-41816819844669f8.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/liballoc-fa0aa15e8a57a9a2.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libspin-d535143e1fe0a006.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/liblock_api-61fbf0ef368d8f11.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libscopeguard-332589bf2fdf0e23.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/librustc_std_workspace_core-ee495ab958ee9151.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcore-11e6a2c34a93b553.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib/libcompiler_builtins-b9e192a8d71bed31.rlib\" \"-Bdynamic\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/riscv64imac-unknown-none-elf/lib\" \"-o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/example-166f30c3a7110a42\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-b82d72bda98f2e93.polyhal.55454159a88f41e1-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::h92565a4b5164178c) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-b82d72bda98f2e93.rlib\n          >>> referenced by mod.rs:0 (src/components/boot/mod.rs:0)\n          >>>               polyhal-b82d72bda98f2e93.polyhal.55454159a88f41e1-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::h92565a4b5164178c) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-b82d72bda98f2e93.rlib\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-b82d72bda98f2e93.polyhal.55454159a88f41e1-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::h92565a4b5164178c) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-b82d72bda98f2e93.rlib\n          >>> referenced by mod.rs:0 (src/components/boot/mod.rs:0)\n          >>>               polyhal-b82d72bda98f2e93.polyhal.55454159a88f41e1-cgu.3.rcgu.o:(polyhal::components::boot::clear_bss::h92565a4b5164178c) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/riscv64imac-unknown-none-elf/debug/deps/libpolyhal-b82d72bda98f2e93.rlib\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1066,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=example, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/polyhal/example\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling tock-registers v0.8.1\n   Compiling scopeguard v1.2.0\n   Compiling lock_api v0.4.11\n   Compiling byteorder v1.5.0\n   Compiling log v0.4.22\n   Compiling bitflags v2.6.0\n[2024-10-11T08:39:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling zerocopy v0.7.35\n   Compiling arm_gicv2 v0.1.0\n   Compiling spin v0.9.8\n   Compiling aarch64-cpu v9.4.0\n   Compiling arm_pl011 v0.1.0\n   Compiling fdt v0.1.5\n   Compiling cfg-if v1.0.0\n   Compiling buddy_system_allocator v0.9.1\n   Compiling virtio-drivers v0.7.5\n   Compiling polyhal v0.1.3 (/home/runner/check/batch_1/Byte-OS/polyhal)\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:219:15\n    |\n219 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: expected names are: `clippy`, `debug_assertions`, `doc`, `docsrs`, `doctest`, `feature`, `miri`, `overflow_checks`, `panic`, `proc_macro`, `relocation_model`, `rustfmt`, `sanitize`, `sanitizer_cfi_generalize_pointers`, `sanitizer_cfi_normalize_integers`, `target_abi`, `target_arch`, `target_endian`, `target_env`, `target_family`, `target_feature`, `target_has_atomic`, `target_has_atomic_equal_alignment`, `target_has_atomic_load_store`, `target_os`, `target_pointer_width`, `target_thread_local`, `target_vendor`, `test`, `ub_checks`, `unix`, `windows`\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n    = note: `#[warn(unexpected_cfgs)]` on by default\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:224:15\n    |\n224 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `board`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:240:15\n    |\n240 |         #[cfg(board = \"2k1000\")]\n    |               ^^^^^^^^^^^^^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(board, values(\"2k1000\"))'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(board, values(\\\"2k1000\\\"))\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: unexpected `cfg` condition name: `c906`\n   --> /home/runner/check/batch_1/Byte-OS/polyhal/src/addr.rs:244:15\n    |\n244 |         #[cfg(c906)]\n    |               ^^^^\n    |\n    = help: consider using a Cargo feature instead\n    = help: or consider adding in `Cargo.toml` the `check-cfg` lint config for the lint:\n             [lints.rust]\n             unexpected_cfgs = { level = \"warn\", check-cfg = ['cfg(c906)'] }\n    = help: or consider adding `println!(\"cargo::rustc-check-cfg=cfg(c906)\");` to the top of the `build.rs`\n    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration\n\nwarning: the feature `offset_of` has been stable since 1.77.0 and no longer requires an attribute to enable\n --> /home/runner/check/batch_1/Byte-OS/polyhal/src/lib.rs:8:12\n  |\n8 | #![feature(offset_of)]\n  |            ^^^^^^^^^\n  |\n  = note: `#[warn(stable_features)]` on by default\n\nwarning: field `0` is never read\n  --> /home/runner/check/batch_1/Byte-OS/polyhal/src/components/percpu/mod.rs:15:19\n   |\n15 | struct PerCPUDATA([u8; PAGE_SIZE]);\n   |        ---------- ^^^^^^^^^^^^^^^\n   |        |\n   |        field in this struct\n   |\n   = note: `#[warn(dead_code)]` on by default\nhelp: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field\n   |\n15 | struct PerCPUDATA(());\n   |                   ~~\n\nwarning: `polyhal` (lib) generated 6 warnings\n   Compiling example v0.1.0 (/home/runner/check/batch_1/Byte-OS/polyhal/example)\nwarning: unreachable statement\n   --> src/main.rs:123:5\n    |\n117 | /     loop {\n118 | |         if let Some(c) = DebugConsole::getchar() {\n119 | |             DebugConsole::putchar(c);\n120 | |         }\n121 | |     }\n    | |_____- any code following this expression is unreachable\n122 |\n123 |       log::info!(\"Run END. Shutdown successfully.\");\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: `#[warn(unreachable_code)]` on by default\n    = note: this warning originates in the macro `$crate::log` which comes from the expansion of the macro `log::info` (in Nightly builds, run with -Z macro-backtrace for more info)\n\nerror: linking with `rust-lld` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"rust-lld\" \"-flavor\" \"gnu\" \"--fix-cortex-a53-843419\" \"/tmp/rustcqAZZCf/symbols.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.0.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.1.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.example.fc76498f651afcb6-cgu.2.rcgu.o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776.akb5dy9rebmqq3j0xs823ur96.rcgu.o\" \"--as-needed\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-Bstatic\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libvirtio_drivers-7205d20d3c85167f.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libzerocopy-00f6727730b34584.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbyteorder-6251f93bd70992ab.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_gicv2-9c3e5d2b8b907842.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libarm_pl011-c5b8dedabc130c76.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libaarch64_cpu-ad3948c631827945.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libtock_registers-871317267119ad1e.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libcfg_if-51d5ccf19a0009d3.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbitflags-a5ce44a6c55cc69a.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libfdt-80c4b13ca541a733.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblog-fdc3a78364d41b4d.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libbuddy_system_allocator-1b5fa0b34d369ebb.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/liballoc-dfa46a1477c2b5e1.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libspin-892e798bcf4d11e9.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/liblock_api-b34245d8f1f66b77.rlib\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libscopeguard-890219094bd4fd6e.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/librustc_std_workspace_core-97b04805942f7790.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcore-9af6731f468db4d1.rlib\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib/libcompiler_builtins-ba9ccc0c4e3e7a25.rlib\" \"-Bdynamic\" \"--eh-frame-hdr\" \"-z\" \"noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/aarch64-unknown-none/lib\" \"-o\" \"/home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/example-d907036488dfe776\" \"--gc-sections\"\n  = note: rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced 1 more times\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced by mod.rs:31 (src/components/boot/mod.rs:31)\n          >>>               polyhal-bdfcbb516c1c83c9.polyhal.21a99f55058bbda5-cgu.2.rcgu.o:(polyhal::components::boot::clear_bss::h87753ff3f9dda8b0) in archive /home/runner/check/batch_1/Byte-OS/polyhal/example/target/aarch64-unknown-none/debug/deps/libpolyhal-bdfcbb516c1c83c9.rlib\n          >>> referenced 1 more times\n          \n\nwarning: `example` (bin \"example\") generated 1 warning\nerror: could not compile `example` (bin \"example\") due to 1 previous error; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/pagetable/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/riscv64.rs:205:10\n    |\n205 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused macro definition: `PerCPUReservedOffset`\n  --> src/components/percpu/riscv64.rs:18:18\n   |\n18 | pub(crate) macro PerCPUReservedOffset($field: ident) {\n   |                  ^^^^^^^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_macros)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n   |\n   = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/percpu/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: struct `PerCPUReserved` is never constructed\n --> src/components/percpu/riscv64.rs:5:19\n  |\n5 | pub(crate) struct PerCPUReserved {\n  |                   ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/kcontext/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/riscv64.rs:150:1\n    |\n150 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/kcontext/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/riscv64.rs:166:1\n    |\n166 | / pub unsafe extern \"C\" fn context_switch_pt(\n167 | |     from: *mut KContext,\n168 | |     to: *const KContext,\n169 | |     pt_token: PageTable,\n170 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/pagetable/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n  --> src/components/pagetable/riscv64.rs:60:9\n   |\n60 | /         return self.flags().contains(PTEFlags::V)\n61 | |             && !(self.flags().contains(PTEFlags::R)\n62 | |                 || self.flags().contains(PTEFlags::W)\n63 | |                 || self.flags().contains(PTEFlags::X));\n   | |______________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n   = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n   |\n60 ~         self.flags().contains(PTEFlags::V)\n61 +             && !(self.flags().contains(PTEFlags::R)\n62 +                 || self.flags().contains(PTEFlags::W)\n63 ~                 || self.flags().contains(PTEFlags::X))\n   |\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/components/trapframe/riscv64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TrapFrame`\n  --> src/components/trapframe/riscv64.rs:64:5\n   |\n64 | /     pub fn new() -> Self {\n65 | |         TrapFrame {\n66 | |             x: [0usize; 32],\n67 | |             sstatus: sstatus::read(),\n...  |\n70 | |         }\n71 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n61 + impl Default for TrapFrame {\n62 +     fn default() -> Self {\n63 +         Self::new()\n64 +     }\n65 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1067,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/aarch64.rs:206:10\n    |\n206 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/arch/aarch64/psci.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n   --> src/components/arch/aarch64/psci.rs:98:5\n    |\n98  | /     loop {\n99  | |         // crate::arch::halt();\n100 | |     }\n    | |_____^\n    |\n    = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n    = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/kcontext/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:127:1\n    |\n127 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/kcontext/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/aarch64.rs:143:1\n    |\n143 | / pub unsafe extern \"C\" fn context_switch_pt(\n144 | |     from: *mut KContext,\n145 | |     to: *const KContext,\n146 | |     pt_token: PageTable,\n147 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:17:32\n   |\n17 |         self.0 = (ppn << 10) | flags.bits() as usize;\n   |                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n   = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n  --> src/components/pagetable/aarch64.rs:42:30\n   |\n42 |         Self(ppn.to_addr() | flags.bits() as usize)\n   |                              ^^^^^^^^^^^^^^^^^^^^^ help: try: `flags.bits()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/aarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/aarch64.rs:67:1\n   |\n67 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::aarch64::PTEFlags>`\n   |\n67 ~ impl From<PTEFlags> for MappingFlags {\n68 ~     fn from(val: PTEFlags) -> Self {\n69 ~         if val.is_empty() {\n70 |             return MappingFlags::empty();\n ...\n73 | \n74 ~         if !val.contains(PTEFlags::AP_RO) {\n75 |             flags |= MappingFlags::W;\n76 |         }\n77 ~         if !val.contains(PTEFlags::UXN) || !val.contains(PTEFlags::PXN) {\n78 |             flags |= MappingFlags::X;\n79 |         }\n80 ~         if val.contains(PTEFlags::AP_EL0) {\n81 |             flags |= MappingFlags::U;\n82 |         }\n83 ~         if val.contains(PTEFlags::AF) {\n84 |             flags |= MappingFlags::A;\n85 |         }\n86 ~         if !val.contains(PTEFlags::NG) {\n   |\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1068,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Entry`, `HandlerFunc`\n --> src/components/arch/x86_64/idt.rs:2:31\n  |\n2 | use x86_64::structures::idt::{Entry, HandlerFunc, InterruptDescriptorTable};\n  |                               ^^^^^  ^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: operator precedence can trip the unwary\n   --> src/components/pagetable/x86_64.rs:179:10\n    |\n179 |         (self.0 >> 9 * n) & 0x1ff\n    |          ^^^^^^^^^^^^^^^ help: consider parenthesizing your expression: `self.0 >> (9 * n)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#precedence\n    = note: `#[warn(clippy::precedence)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/timer/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n --> src/components/timer/x86_64.rs:6:34\n  |\n6 | static mut CPU_FREQ_MHZ: usize = 4000_000_000;\n  |                                  ^^^^^^^^^^^^ help: consider: `4_000_000_000`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n  = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: variable does not need to be mutable\n  --> src/components/arch/x86_64/idt.rs:22:13\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |             ----^^^\n   |             |\n   |             help: remove this `mut`\n   |\n   = note: `#[warn(unused_mut)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constant `NUM_INT` is never used\n --> src/components/arch/x86_64/idt.rs:4:7\n  |\n4 | const NUM_INT: usize = 256;\n  |       ^^^^^^^\n  |\n  = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `parse_dtb_info` is never used\n  --> src/components/common.rs:77:15\n   |\n77 | pub(crate) fn parse_dtb_info() {\n   |               ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/trapframe/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/trapframe/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods `save` and `restore` are never used\n  --> src/components/trapframe/x86_64.rs:28:19\n   |\n26 | impl FxsaveArea {\n   | --------------- methods in this implementation\n27 |     #[inline]\n28 |     pub(crate) fn save(&mut self) {\n   |                   ^^^^\n...\n33 |     pub(crate) fn restore(&self) {\n   |                   ^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/gdt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> src/components/arch/x86_64/gdt.rs:102:23\n    |\n102 |         tss.call_once(|| TaskStateSegment::new());\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `TaskStateSegment::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/arch/x86_64/idt.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n  --> src/components/arch/x86_64/idt.rs:35:9\n   |\n22 |         let mut idt = Self(InterruptDescriptorTable::new());\n   |         ---------------------------------------------------- unnecessary `let` binding\n...\n35 |         idt\n   |         ^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n   = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n   |\n22 ~         \n23 | \n ...\n34 |         }\n35 ~         Self(InterruptDescriptorTable::new())\n   |\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: transmute from an integer to a pointer\n  --> src/components/boot/x86_64.rs:65:19\n   |\n65 |         let ptr = mem::transmute(addr | VIRT_ADDR_START as u64);\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(addr | VIRT_ADDR_START as u64) as *const u8`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_transmute\n   = note: `#[warn(clippy::useless_transmute)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n   --> src/components/boot/x86_64.rs:145:5\n    |\n145 | //     CpuId::new().get_feature_info().map(|features| {\n146 | ||         // Add OSXSave flag to cr4 register if supported\n147 | ||         if features.has_xsave() {\n148 | ||             unsafe {\n...   ||\n156 | ||         }\n157 | ||     });\n    | ||______^- help: try: `if let Some(features) = CpuId::new().get_feature_info() { ... }`\n    |  |______|\n    | \n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n    = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/boot/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `filter` for `Some` followed by `unwrap`\n   --> src/components/boot/x86_64.rs:186:10\n    |\n186 |           .filter(Option::is_some)\n    |  __________^\n187 | |         .map(Option::unwrap)\n    | |____________________________^ help: consider using `flatten` instead: `flatten()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_filter_map\n    = note: `#[warn(clippy::option_filter_map)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/instruction/x86_64/shutdown.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: empty `loop {}` wastes CPU cycles\n --> src/components/instruction/x86_64/shutdown.rs:6:5\n  |\n6 |     loop {}\n  |     ^^^^^^^\n  |\n  = help: you should either use `panic!()` or add a call pausing or sleeping the thread to the loop body\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#empty_loop\n  = note: `#[warn(clippy::empty_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/kcontext/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:149:1\n    |\n149 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/kcontext/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/x86_64.rs:170:1\n    |\n170 | / pub unsafe extern \"C\" fn context_switch_pt(\n171 | |     from: *mut KContext,\n172 | |     to: *const KContext,\n173 | |     pt_token: PageTable,\n174 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/components/pagetable/x86_64.rs:64:1\n   |\n64 | impl Into<MappingFlags> for PTEFlags {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<components::pagetable::x86_64::PTEFlags>`\n   |\n64 ~ impl From<PTEFlags> for MappingFlags {\n65 ~     fn from(val: PTEFlags) -> Self {\n66 |         let mut res = MappingFlags::empty();\n67 ~         if val.contains(PTEFlags::RW) {\n68 |             res |= MappingFlags::W\n69 |         };\n70 ~         if val.contains(PTEFlags::US) {\n71 |             res |= MappingFlags::U\n72 |         };\n73 ~         if val.contains(PTEFlags::A) {\n74 |             res |= MappingFlags::A;\n75 |         }\n76 ~         if val.contains(PTEFlags::D) {\n77 |             res |= MappingFlags::D;\n78 |         }\n79 ~         if !val.contains(PTEFlags::XD) {\n   |\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/x86_64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/components/pagetable/x86_64.rs:136:58\n    |\n136 |         pml4[0x1ff] = PTE((_boot_mapping_pdpt as usize - VIRT_ADDR_START as usize) | 0x3);\n    |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `VIRT_ADDR_START`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1069,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/boot/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `DebugConsole`\n --> src/components/boot/loongarch64.rs:6:48\n  |\n6 |         debug_console::{display_info, println, DebugConsole},\n  |                                                ^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/kcontext/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/loongarch64.rs:134:1\n    |\n134 | pub unsafe extern \"C\" fn context_switch(from: *mut KContext, to: *const KContext) {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/kcontext/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/components/kcontext/loongarch64.rs:150:1\n    |\n150 | / pub unsafe extern \"C\" fn context_switch_pt(\n151 | |     from: *mut KContext,\n152 | |     to: *const KContext,\n153 | |     pt_token: PageTable,\n154 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/multicore/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting function pointer `crate::components::boot::_start_secondary` to `u64`\n --> src/components/multicore/loongarch64.rs:5:19\n  |\n5 |     csr_mail_send(crate::components::boot::_start_secondary as _, hart_id, 0);\n  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate::components::boot::_start_secondary as usize`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#fn_to_numeric_cast\n  = note: `#[warn(clippy::fn_to_numeric_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PTE` contains a capitalized acronym\n  --> src/components/pagetable/mod.rs:18:19\n   |\n18 | pub(crate) struct PTE(pub usize);\n   |                   ^^^ help: consider making the acronym lowercase, except the initial letter: `Pte`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n  --> src/components/pagetable/mod.rs:52:9\n   |\n52 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: remove it\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n   = note: `#[warn(clippy::assertions_on_constants)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/pagetable/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: `assert!(true)` will be optimized out by the compiler\n   --> src/components/pagetable/mod.rs:105:9\n    |\n105 |         assert!(Self::PAGE_LEVEL >= 3, \"Just level >= 3 supported currently\");\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: remove it\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/components/timer/loongarch64.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n --> src/components/timer/loongarch64.rs:8:38\n  |\n8 | static FREQ: Lazy<usize> = Lazy::new(|| get_timer_freq());\n  |                                      ^^^^^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `get_timer_freq`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n  = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 1070,
      "file": "src/utils/mutex_no_irq.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/utils/mutex_no_irq.rs:59:5\n   |\n59 |     pub unsafe fn force_unlock(&self) {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1071,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1072,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:39:57Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:39:57Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1073,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:40:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:01Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1074,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:40:04Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:04Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1075,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1075,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1076,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1076,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1077,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1077,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1078,
      "file": "src/components/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/boot/mod.rs (original lines from 43 to 43)\n-/// \n+///\n"
    },
    {
      "cmd_idx": 1078,
      "file": "src/components/common.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/polyhal/src/components/common.rs (original lines from 73 to 74)\n-/// \n-/// Display information when booting \n+///\n+/// Display information when booting\n"
    },
    {
      "cmd_idx": 1093,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:40:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:41:09Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:189:13: 189:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:105:13: 105:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"/home/runner/.cargo/git/checkouts/axnet-13731b5ff12d66e4/48d68eb/src/smoltcp_impl/udp.rs:192:13: 192:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-10-11T08:41:09Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1095,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-bwbench, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/net/bwbench\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n    Checking bit_field v0.10.2\n    Checking log v0.4.22\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.5\n    Checking bitflags v1.3.2\n   Compiling winnow v0.6.16\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.2.6\n   Compiling quote v1.0.36\n   Compiling autocfg v1.3.0\n   Compiling syn v2.0.72\n   Compiling toml_edit v0.22.18\n    Checking cfg-if v1.0.0\n    Checking bitflags v2.6.0\n   Compiling lock_api v0.4.12\n    Checking raw-cpuid v10.7.0\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking scopeguard v1.2.0\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1100,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-display, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/display\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling autocfg v1.3.0\n   Compiling az v1.2.1\n    Checking byteorder v1.5.0\n    Checking micromath v2.1.0\n   Compiling num-traits v0.2.19\n    Checking embedded-graphics-core v0.4.0\n    Checking float-cmp v0.9.0\n    Checking embedded-graphics v0.8.1\n    Checking arceos-display v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry/apps/display)\nerror: could not compile `arceos-display` (bin \"arceos-display\")\n"
    },
    {
      "cmd_idx": 1106,
      "file": "apps/exception/src/main.rs",
      "kind": "Mirai",
      "raw": "warning: Inline assembly code cannot be analyzed by MIRAI.\n  --> apps/exception/src/main.rs:13:9\n   |\n13 |         asm!(\"int3\");\n   |         ^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1143,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:40:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1145,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos-tls, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/task/tls\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking bit_field v0.10.2\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.5\n   Compiling winnow v0.6.16\n   Compiling proc-macro2 v1.0.86\n    Checking bitflags v1.3.2\n   Compiling toml_datetime v0.6.8\n    Checking raw-cpuid v10.7.0\n   Compiling indexmap v2.2.6\n   Compiling x86 v0.52.0\n   Compiling autocfg v1.3.0\n   Compiling toml_edit v0.22.18\n   Compiling lock_api v0.4.12\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1154,
      "file": "tools/axlibc/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:44:15\n   |\n44 |           .args(&[\n   |  _______________^\n45 | |             \"-c\",\n46 | |             asm_file.to_str().unwrap(),\n47 | |             \"-o\",\n...  |\n51 | |             \"-mfpu=neon\",\n52 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\nhelp: change this to\n   |\n44 ~         .args([\n45 +             \"-c\",\n46 +             asm_file.to_str().unwrap(),\n47 +             \"-o\",\n48 +             asm_out_file.to_str().unwrap(),\n49 +             \"-target\",\n50 +             \"aarch64-unknown-none\",\n51 +             \"-mfpu=neon\",\n52 ~         ])\n   |\n\n"
    },
    {
      "cmd_idx": 1154,
      "file": "tools/axlibc/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> tools/axlibc/build.rs:60:15\n   |\n60 |           .args(&[\n   |  _______________^\n61 | |             \"crus\",\n62 | |             lib_out_file.to_str().unwrap(),\n63 | |             asm_out_file.to_str().unwrap(),\n64 | |         ])\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n60 ~         .args([\n61 +             \"crus\",\n62 +             lib_out_file.to_str().unwrap(),\n63 +             asm_out_file.to_str().unwrap(),\n64 ~         ])\n   |\n\n"
    },
    {
      "cmd_idx": 1156,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:43:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:43:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:43:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:43:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:43:30Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:43:30Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1158,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/axlibc\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n    Checking bit_field v0.10.2\n   Compiling winnow v0.6.16\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.2.6\n   Compiling quote v1.0.36\n    Checking bitflags v1.3.2\n   Compiling syn v2.0.72\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.18\n   Compiling autocfg v1.3.0\n   Compiling x86 v0.52.0\n   Compiling lock_api v0.4.12\n    Checking log v0.4.22\n   Compiling rustversion v1.0.17\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1159,
      "file": "src/device.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1163,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1164,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/d2_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/mermaid_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1167,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Starry-OS/Starry/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
    },
    {
      "cmd_idx": 1168,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1168,
      "file": "unkonwn-but-maybe-important",
      "kind": "Clippy(Error)",
      "raw": "error: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "src/panic_wait.rs",
      "kind": "Mirai",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "src/cpu.rs",
      "kind": "Mirai",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1169,
      "file": "unkonwn-but-maybe-important",
      "kind": "Mirai",
      "raw": "error: language item required, but not found: `eh_personality`\n  |\n  = note: this can occur when a binary crate with `#![no_std]` is compiled for a target where `eh_personality` is defined in the standard library\n  = help: you may be able to compile for a target that doesn't need `eh_personality`, specify a target with `--target` or in `.cargo/config`\n\n"
    },
    {
      "cmd_idx": 1172,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"
    },
    {
      "cmd_idx": 1173,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 7 previous errors\n"
    },
    {
      "cmd_idx": 1174,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/Starry-OS/Starry/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nerror: unwinding panics are not supported without std\n  |\n  = help: using nightly cargo, use -Zbuild-std with panic=\"abort\" to avoid unwinding\n  = note: since the core library is usually precompiled with panic=\"unwind\", rebuilding your crate with panic=\"abort\" may not be enough to fix the problem\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1177,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:40:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n[2024-10-11T08:44:24Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:44:24Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }"
    },
    {
      "cmd_idx": 1179,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=monolithic_userboot, checker=Mirai\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n   Compiling proc-macro2 v1.0.86\n    Checking log v0.4.22\n    Checking bit_field v0.10.2\n    Checking bitflags v2.6.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling autocfg v1.3.0\n   Compiling hashbrown v0.14.5\n   Compiling toml_datetime v0.6.8\n   Compiling lock_api v0.4.12\n    Checking bitflags v1.3.2\n   Compiling quote v1.0.36\n   Compiling indexmap v2.2.6\n   Compiling winnow v0.6.16\n   Compiling syn v2.0.72\n    Checking scopeguard v1.2.0\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n    Checking raw-cpuid v10.7.0\n   Compiling toml_edit v0.22.18\n   Compiling syn v1.0.109\n   Compiling libc v0.2.155\n   Compiling x86 v0.52.0\n   Compiling rustversion v1.0.17\n    Checking memory_addr v0.1.0 (https://github.com/Starry-OS/memory_addr.git#a5be547a)\n    Checking spin v0.9.8\nerror: failed to run custom build command for `rustversion v1.0.17`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/Starry-OS/Starry/target/debug/build/rustversion-5901f74b94ed47a6/build-script-build` (exit status: 1)\n  --- stdout\n  cargo:rerun-if-changed=build/build.rs\n\n  --- stderr\n  Error: unexpected output from `rustc --version`: \"mirai 1.1.9\\n\"\n\n  Please file an issue in https://github.com/dtolnay/rustversion\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1180,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=monolithic_userboot, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/Starry-OS/Starry/apps/monolithic_userboot\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.12\n[2024-10-11T08:40:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:40:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling serde v1.0.204\n   Compiling autocfg v1.3.0\n   Compiling hashbrown v0.14.5\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.16\n   Compiling lock_api v0.4.12\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.2.6\n   Compiling quote v1.0.36\n   Compiling syn v2.0.72\n   Compiling axerrno v0.1.0 (https://github.com/Starry-OS/axerrno.git#3e2372cd)\n   Compiling x86 v0.52.0\n   Compiling libc v0.2.155\n   Compiling toml_edit v0.22.18\n   Compiling rustversion v1.0.17\n   Compiling syn v1.0.109\n   Compiling spin v0.9.8\n   Compiling taskctx v0.1.0 (https://github.com/Starry-OS/taskctx.git#d7d646ca)\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.13\n   Compiling kernel_guard v0.1.0 (https://github.com/Starry-OS/kernel_guard.git#72e00672)\n   Compiling x86_64 v0.15.1\n   Compiling axconfig v0.1.0 (https://github.com/Starry-OS/axconfig.git#ecfc4170)\n   Compiling paste v1.0.15\n   Compiling page_table_entry v0.1.0 (https://github.com/Starry-OS/page_table_entry.git#8a871b43)\n   Compiling spinlock v0.1.0 (https://github.com/Starry-OS/spinlock.git#0149e52d)\n   Compiling lazy_static v1.5.0\n   Compiling axfs_vfs v0.1.0 (https://github.com/Starry-OS/axfs_vfs.git#cd00e108)\n   Compiling percpu v0.1.0 (https://github.com/Starry-OS/percpu.git#85e6d8a7)\n   Compiling axhal v0.1.0 (https://github.com/Starry-OS/axhal.git#769caa8b)\n   Compiling percpu_macros v0.1.0 (https://github.com/Starry-OS/percpu_macros.git#b785b814)\n   Compiling crate_interface v0.1.1 (https://github.com/Starry-OS/crate_interface.git#d27dd960)\n   Compiling x86_64 v0.14.12\n   Compiling of v0.1.0 (https://github.com/Starry-OS/of.git#f54b1eeb)\n   Compiling axlog v0.1.0 (https://github.com/Starry-OS/axlog.git#5b28a4c6)\n   Compiling axfs_ramfs v0.1.0 (https://github.com/Starry-OS/axfs_ramfs.git#9d217ede)\n   Compiling page_table v0.1.0 (https://github.com/Starry-OS/page_table.git#f183d542)\n   Compiling zerocopy-derive v0.7.35\n   Compiling svgbobdoc v0.3.0\n   Compiling enumn v0.1.14\n   Compiling rlsf v0.2.1\n   Compiling scheduler v0.1.0 (https://github.com/Starry-OS/scheduler.git#036a0299)\n   Compiling driver_block v0.1.0 (https://github.com/Starry-OS/driver_block.git#47e771d7)\n   Compiling driver_net v0.1.0 (https://github.com/Starry-OS/driver_net.git#5d16bf2f)\n   Compiling axdriver v0.1.0 (https://github.com/Starry-OS/axdriver.git#fdf9d5ef)\n   Compiling allocator v0.1.0 (https://github.com/Starry-OS/allocator.git#7c9f5b83)\n   Compiling axalloc v0.1.0 (https://github.com/Starry-OS/axalloc.git#da0de65d)\n   Compiling x2apic v0.4.3\n   Compiling timer_list v0.1.0 (https://github.com/Starry-OS/timer_list.git#1dc25aad)\n   Compiling version_check v0.9.5\n   Compiling nb v1.1.0\n   Compiling zerocopy v0.7.35\n   Compiling nb v0.1.3\n   Compiling axfs_devfs v0.1.0 (https://github.com/Starry-OS/axfs_devfs.git#4ca42206)\n   Compiling axsignal v0.1.0 (https://github.com/Starry-OS/axsignal.git#2bd62ee3)\n   Compiling ahash v0.7.8\n   Compiling getrandom v0.2.15\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"lazy::LazyUsize::unsync_init\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:36:23: 36:43 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/getrandom-0.2.15/src/lazy.rs:39:13: 39:39 (#0)\",\n            \"dep_kind\": \"Both\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] crate getrandom contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axtask v0.1.0 (https://github.com/Starry-OS/axtask.git#4ae6b15a)\n   Compiling axio v0.1.0 (https://github.com/Starry-OS/axio.git#010ddddb)\n   Compiling capability v0.1.0 (https://github.com/Starry-OS/capability.git#2c0f89a9)\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling virtio-drivers v0.7.5\n   Compiling riscv v0.10.1\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:216:64: 216:80 (#0) after dropped at /home/runner/.cargo/git/checkouts/axtask-404320116fa6e0d9/4ae6b15/src/schedule.rs:136:21: 136:30 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:44:18Z WARN  lockbud::callbacks] crate axtask contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axsync v0.1.0 (https://github.com/Starry-OS/axsync.git#70651a7c)\n   Compiling zero v0.1.3\n   Compiling once_cell v1.19.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling xmas-elf v0.9.1\n   Compiling critical-section v1.1.2\n   Compiling heapless v0.8.0\n   Compiling elf_parser v0.1.0 (https://github.com/Starry-OS/elf_parser.git#061cec5c)\n   Compiling hashbrown v0.11.2\n   Compiling smoltcp v0.11.0 (https://github.com/rcore-os/smoltcp.git?rev=b7134a3#b7134a31)\n   Compiling num_enum_derive v0.5.11\n   Compiling arch_boot v0.1.0 (https://github.com/Starry-OS/arch_boot.git#af6f0238)\n   Compiling driver_pci v0.1.0 (https://github.com/Starry-OS/driver_pci.git#ea1078c9)\n   Compiling driver_virtio v0.1.0 (https://github.com/Starry-OS/driver_virtio.git#a223bf1e)\n   Compiling num_enum v0.5.11\n   Compiling axfs v0.1.0 (https://github.com/Starry-OS/axfs.git#74ba6295)\n   Compiling axfutex v0.1.0 (https://github.com/Starry-OS/axfutex.git#5eee19d0)\n   Compiling axmem v0.1.0 (https://github.com/Starry-OS/axmem.git#2e66a8ad)\n   Compiling axprocess v0.1.0 (https://github.com/Starry-OS/axprocess.git#6ab9c7a7)\n   Compiling axnet v0.1.0 (https://github.com/Starry-OS/axnet.git#48d68eb8)\n   Compiling axruntime v0.1.0 (https://github.com/Starry-OS/axruntime.git#3ff4e76f)\n   Compiling axfeat v0.1.0 (https://github.com/Starry-OS/axfeat.git#a0d5a481)\n   Compiling linux_syscall_api v0.1.0 (https://github.com/Starry-OS/linux_syscall_api.git#bc828f33)\n[2024-10-11T08:44:24Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:212:18: 212:90 (#0) after dropped at /home/runner/.cargo/git/checkouts/linux_syscall_api-6fd063eab50f7cab/bc828f3/src/syscall_fs/imp/ctl.rs:215:5: 215:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-10-11T08:44:24Z WARN  lockbud::callbacks] crate linux_syscall_api contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 1 }\n   Compiling axtrap v0.1.0 (https://github.com/Starry-OS/axtrap.git#f2529e64)\n   Compiling axstarry v0.1.0 (https://github.com/Starry-OS/axstarry.git#a60752d1)\n   Compiling monolithic_userboot v0.1.0 (/home/runner/check/batch_1/Starry-OS/Starry/apps/monolithic_userboot)\nerror: linking with `cc` failed: exit status: 1\n  |\n  = note: LC_ALL=\"C\" PATH=\"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin:/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/self-contained:/snap/bin:/home/runner/.local/bin:/opt/pipx_bin:/home/runner/.cargo/bin:/home/runner/.config/composer/vendor/bin:/usr/local/.ghcup/bin:/home/runner/.dotnet/tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\" VSLANG=\"1033\" \"cc\" \"-m64\" \"/tmp/rustcsHgxSL/symbols.o\" \"/home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\" \"-Wl,--as-needed\" \"-L\" \"/home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps\" \"-L\" \"/home/runner/check/batch_1/Starry-OS/Starry/target/debug/deps\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-Wl,-Bstatic\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/libcompiler_builtins-e8b7e96e438f08f6.rlib\" \"-Wl,-Bdynamic\" \"-lgcc_s\" \"-lutil\" \"-lrt\" \"-lpthread\" \"-lm\" \"-ldl\" \"-lc\" \"-B/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/bin/gcc-ld\" \"-fuse-ld=lld\" \"-Wl,--eh-frame-hdr\" \"-Wl,-z,noexecstack\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib\" \"-L\" \"/home/runner/.rustup/toolchains/nightly-2024-05-21-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-unknown-linux-gnu/lib/self-contained\" \"-o\" \"/home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458\" \"-Wl,--gc-sections\" \"-pie\" \"-Wl,-z,relro,-z,now\" \"-nodefaultlibs\"\n  = note: rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by cpu.rs:3 (src/cpu.rs:3)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::cpu::CPU_ID_WRAPPER::read_current_raw::h13de9f7f52bb28b9)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against symbol '__PERCPU_SELF_PTR'; recompile with -fPIC\n          >>> defined in /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by processor.rs:19 (src/processor.rs:19)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axtask::processor::PROCESSOR_WRAPPER::current_ptr::h142daf2a768c6382)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:145 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:145)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::read_current_raw::h8f18f0e1d3f27e21)\n          \n          rust-lld: error: relocation R_X86_64_32S cannot be used against local symbol; recompile with -fPIC\n          >>> defined in /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o\n          >>> referenced by current.rs:182 (/home/runner/.cargo/git/checkouts/taskctx-38ebba1102c121c2/d7d646c/src/current.rs:182)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(taskctx::current::CURRENT_TASK_PTR_WRAPPER::write_current_raw::h8b786b5cc5f571e3)\n          \n          rust-lld: error: undefined symbol: _stext\n          >>> referenced by mem.rs:82 (src/mem.rs:82)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:81 (src/mem.rs:81)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> did you mean: _etext\n          >>> defined in: <internal>\n          \n          rust-lld: error: undefined symbol: _srodata\n          >>> referenced by mem.rs:88 (src/mem.rs:88)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _erodata\n          >>> referenced by mem.rs:89 (src/mem.rs:89)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:87 (src/mem.rs:87)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sdata\n          >>> referenced by mem.rs:94 (src/mem.rs:94)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:93 (src/mem.rs:93)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack\n          >>> referenced by mem.rs:100 (src/mem.rs:100)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: boot_stack_top\n          >>> referenced by mem.rs:101 (src/mem.rs:101)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:99 (src/mem.rs:99)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _sbss\n          >>> referenced by mem.rs:106 (src/mem.rs:106)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: _ebss\n          >>> referenced by mem.rs:107 (src/mem.rs:107)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          >>> referenced by mem.rs:105 (src/mem.rs:105)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::mem::kernel_image_regions::h789b2eb7d480567f)\n          \n          rust-lld: error: undefined symbol: __PERCPU_KERNEL_RSP_OFFSET\n          >>> referenced by context.rs:158 (src/arch/x86_64/context.rs:158)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(first_into_user)\n          >>> referenced by context.rs:205 (src/arch/x86_64/context.rs:205)\n          >>>               /home/runner/check/batch_1/Starry-OS/Starry/target/x86_64-unknown-linux-gnu/debug/deps/monolithic_userboot-7cf34b7a87caa458.monolithic_userboot.e663153b9fa2352d-cgu.0.rcgu.o:(axhal::arch::x86_64::context::task_context_switch::h7033c5f59ed08aa7)\n          collect2: error: ld returned 1 exit status\n          \n\nerror: could not compile `monolithic_userboot` (bin \"monolithic_userboot\") due to 1 previous error\n"
    },
    {
      "cmd_idx": 1201,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1201,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1201,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1201,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1201,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1202,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1202,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1202,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1202,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1202,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1205,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1206,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1207,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1208,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1209,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking memory_addr v0.3.1\n   Compiling autocfg v1.1.0\n    Checking page_table_entry v0.4.0\n   Compiling num-traits v0.2.16\n    Checking arm_pl011 v0.1.0\n    Checking dw_apb_uart v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking lazyinit v0.2.1\n    Checking int_ratio v0.1.0\n    Checking handler_table v0.1.1\n    Checking static_assertions v1.1.0\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1210,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n    Checking cfg-if v1.0.0\n    Checking log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking memory_addr v0.3.1\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking aarch64-cpu v9.4.0\n    Checking bitflags v2.6.0\n    Checking dw_apb_uart v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking arm_gicv2 v0.1.0\n    Checking arm_pl011 v0.1.0\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking lazyinit v0.2.1\n    Checking handler_table v0.1.1\n    Checking int_ratio v0.1.0\n    Checking static_assertions v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axio v0.1.0\n    Checking chrono v0.4.38\n    Checking page_table_entry v0.4.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1211,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling syn v2.0.70\n   Compiling log v0.4.21\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling aarch64-cpu v9.4.0\n   Compiling toml_edit v0.22.20\n   Compiling memory_addr v0.3.1\n   Compiling bitflags v2.6.0\n   Compiling autocfg v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling page_table_entry v0.4.0\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling handler_table v0.1.1\n   Compiling int_ratio v0.1.0\n   Compiling lazyinit v0.2.1\n   Compiling static_assertions v1.1.0\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1212,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.21\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling bitflags v2.6.0\n   Compiling kernel_guard v0.1.1\n   Compiling aarch64-cpu v9.4.0\n   Compiling kspin v0.1.0\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling memory_addr v0.3.1\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling dw_apb_uart v0.1.0\n   Compiling arm_pl011 v0.1.0\n   Compiling arm_gicv2 v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling handler_table v0.1.1\n   Compiling static_assertions v1.1.0\n   Compiling lazyinit v0.2.1\n   Compiling int_ratio v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axio v0.1.0\n   Compiling chrono v0.4.38\n   Compiling page_table_entry v0.4.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1217,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1217,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1217,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1217,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1217,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1218,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1218,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1218,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1218,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1218,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1221,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1222,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1223,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:35:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:35:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:53Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1224,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:35:50Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:50Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:35:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:53Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1225,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling glob v0.3.1\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling percpu v0.1.3\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling num-traits v0.2.16\n   Compiling minimal-lexical v0.2.1\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling either v1.9.0\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling libloading v0.7.4\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling lock_api v0.4.10\n   Compiling bindgen v0.69.4\n   Compiling regex v1.9.3\n   Compiling cexpr v0.6.0\n   Compiling crate_interface v0.1.3\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling shlex v1.1.0\n   Compiling lazycell v1.3.0\n    Checking linkme v0.3.27\n    Checking scopeguard v1.2.0\n   Compiling rustc-hash v1.1.0\n   Compiling log v0.4.21\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1226,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling bitflags v2.6.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axerrno v0.1.0\n   Compiling lazy_static v1.5.0\n    Checking scopeguard v1.2.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1227,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling glob v0.3.1\n   Compiling toml_edit v0.22.20\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling num-traits v0.2.16\n   Compiling either v1.9.0\n   Compiling regex-syntax v0.7.4\n   Compiling cfg-if v1.0.0\n   Compiling minimal-lexical v0.2.1\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling libloading v0.7.4\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling bindgen v0.69.4\n   Compiling regex v1.9.3\n   Compiling cexpr v0.6.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling itertools v0.10.5\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1228,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=arceos_posix_api, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/arceos_posix_api\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling which v4.4.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling rustc-hash v1.1.0\n   Compiling shlex v1.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling axerrno v0.1.0\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1233,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1234,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1235,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1236,
      "file": "modules/axalloc/src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `GlobalAllocator`\n  --> modules/axalloc/src/lib.rs:57:5\n   |\n57 | /     pub const fn new() -> Self {\n58 | |         Self {\n59 | |             balloc: SpinNoIrq::new(DefaultByteAllocator::new()),\n60 | |             palloc: SpinNoIrq::new(BitmapPageAllocator::new()),\n61 | |         }\n62 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n55 + impl Default for GlobalAllocator {\n56 +     fn default() -> Self {\n57 +         Self::new()\n58 +     }\n59 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1237,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1238,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1239,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1240,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1257,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1257,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1257,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1257,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1257,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1258,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1258,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1258,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1258,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1258,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1261,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1262,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1263,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1264,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1265,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n    Checking byteorder v1.4.3\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy-derive v0.7.35\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1266,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking byteorder v1.4.3\n    Checking axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1267,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling zerocopy-derive v0.7.35\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling zerocopy v0.7.35\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1268,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdisplay, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdisplay\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling byteorder v1.4.3\n   Compiling axdriver_base v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axdriver_display v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling zerocopy v0.7.35\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1273,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1273,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1273,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1273,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1273,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1274,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1274,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1274,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1274,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1274,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1277,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1278,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1279,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1280,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1281,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.10\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n    Checking page_table_multiarch v0.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n    Checking rlsf v0.2.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling linkme-impl v0.3.27\n    Checking kernel_guard v0.1.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1282,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n    Checking rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking page_table_multiarch v0.4.0\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1283,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v1.0.109\n   Compiling syn v2.0.70\n   Compiling toml_edit v0.22.20\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.10\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling page_table_multiarch v0.4.0\n   Compiling svgbobdoc v0.3.0\n   Compiling rlsf v0.2.1\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1284,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdma, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdma\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling kspin v0.1.0\n   Compiling linkme v0.3.27\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling page_table_multiarch v0.4.0\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1289,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1289,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1289,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1289,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1289,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1290,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1290,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1290,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1290,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1290,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1293,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1294,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1295,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1296,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1297,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling zerocopy-derive v0.7.35\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\n    Checking zerocopy v0.7.35\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1298,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n    Checking zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1299,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling zerocopy-derive v0.7.35\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\n   Compiling zerocopy v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1300,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axdriver, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling zerocopy v0.7.35\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1305,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1305,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1305,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1305,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1305,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1306,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1306,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1306,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1306,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1306,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1309,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1310,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1311,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1312,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1313,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1314,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1315,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1316,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfeat, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/api/axfeat\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1321,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1321,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1321,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1321,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1321,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1322,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1322,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1322,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1322,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1322,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1323,
      "file": "modules/axfs/src/api/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1323,
      "file": "modules/axfs/src/fops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1324,
      "file": "modules/axfs/src/api/file.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/api/file.rs:27:5\n   |\n27 | /     pub const fn new() -> Self {\n28 | |         OpenOptions(fops::OpenOptions::new())\n29 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl Default for OpenOptions {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1324,
      "file": "modules/axfs/src/fops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `OpenOptions`\n  --> modules/axfs/src/fops.rs:54:5\n   |\n54 | /     pub const fn new() -> Self {\n55 | |         Self {\n56 | |             // generic\n57 | |             read: false,\n...  |\n66 | |         }\n67 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n52 + impl Default for OpenOptions {\n53 +     fn default() -> Self {\n54 +         Self::new()\n55 +     }\n56 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1325,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1326,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1327,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1328,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1329,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axerrno v0.1.0\n   Compiling lock_api v0.4.10\n    Checking spin v0.9.8\n    Checking axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking axfs_ramfs v0.1.1\n    Checking axfs_devfs v0.1.1\n    Checking axio v0.1.0\n    Checking cap_access v0.1.0\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling zerocopy-derive v0.7.35\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1330,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n    Checking axfs_vfs v0.1.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n    Checking axio v0.1.0\n    Checking spin v0.9.8\n    Checking fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1331,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n   Compiling axerrno v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling scopeguard v1.2.0\n   Compiling spin v0.9.8\n   Compiling axfs_vfs v0.1.1\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_block v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling axfs_devfs v0.1.1\n   Compiling axfs_ramfs v0.1.1\n   Compiling axio v0.1.0\n   Compiling fatfs v0.4.0 (https://github.com/rafalh/rust-fatfs?rev=85f06e0#85f06e08)\n   Compiling cap_access v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kernel_guard v0.1.1\n   Compiling zerocopy-derive v0.7.35\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1332,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axfs, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axfs\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling lock_api v0.4.10\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling scopeguard v1.2.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling zerocopy v0.7.35\n   Compiling axfs_vfs v0.1.1\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1337,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1337,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1337,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1337,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1337,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1338,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1338,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1338,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1338,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1338,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1340,
      "file": "modules/axhal/src/arch/x86_64/context.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TaskContext`\n   --> modules/axhal/src/arch/x86_64/context.rs:148:5\n    |\n148 | /     pub const fn new() -> Self {\n149 | |         Self {\n150 | |             kstack_top: va!(0),\n151 | |             rsp: 0,\n...   |\n155 | |         }\n156 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n146 + impl Default for TaskContext {\n147 +     fn default() -> Self {\n148 +         Self::new()\n149 +     }\n150 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1341,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1342,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1343,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1344,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1345,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1346,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1347,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1348,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axhal, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axhal\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1353,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1353,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1353,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1353,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1353,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1354,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1354,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1354,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1354,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1354,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1357,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1358,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1359,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1360,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1361,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling libc v0.2.147\n   Compiling memchr v2.5.0\n   Compiling glob v0.3.1\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n   Compiling cfg-if v1.0.0\n   Compiling either v1.9.0\n   Compiling percpu v0.1.3\n   Compiling regex-syntax v0.7.4\n   Compiling minimal-lexical v0.2.1\n   Compiling nom v7.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling regex-automata v0.3.6\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling libloading v0.7.4\n   Compiling bindgen v0.69.4\n   Compiling cexpr v0.6.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling regex v1.9.3\n    Checking linkme v0.3.27\n   Compiling which v4.4.0\n   Compiling itertools v0.10.5\n   Compiling num-traits v0.2.16\n   Compiling lazycell v1.3.0\n   Compiling log v0.4.21\n   Compiling shlex v1.1.0\n   Compiling bitflags v2.6.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazy_static v1.5.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1362,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1363,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling autocfg v1.1.0\n   Compiling syn v2.0.70\n   Compiling memchr v2.5.0\n   Compiling libc v0.2.147\n   Compiling toml_edit v0.22.20\n   Compiling glob v0.3.1\n   Compiling clang-sys v1.6.1\n   Compiling prettyplease v0.2.12\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling regex-syntax v0.7.4\n   Compiling either v1.9.0\n   Compiling minimal-lexical v0.2.1\n   Compiling nom v7.1.3\n   Compiling regex-automata v0.3.6\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling libloading v0.7.4\n   Compiling bindgen v0.69.4\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling cexpr v0.6.0\n   Compiling regex v1.9.3\n   Compiling crate_interface v0.1.3\n   Compiling kernel_guard v0.1.1\n   Compiling percpu_macros v0.1.2\n   Compiling kspin v0.1.0\n   Compiling linkme-impl v0.3.27\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling which v4.4.0\n   Compiling linkme v0.3.27\n   Compiling itertools v0.10.5\n   Compiling num-traits v0.2.16\n   Compiling bitflags v2.6.0\n   Compiling lazycell v1.3.0\n   Compiling rustc-hash v1.1.0\n   Compiling lazy_static v1.5.0\n   Compiling log v0.4.21\n   Compiling shlex v1.1.0\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1364,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axlibc, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axlibc\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:25Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bindgen v0.69.4\n   Compiling num-traits v0.2.16\n   Compiling lock_api v0.4.10\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling axerrno v0.1.0\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:402:25: 402:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.3.6/src/util/pool.rs:404:17: 404:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:39:29Z WARN  lockbud::callbacks] crate bindgen contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n"
    },
    {
      "cmd_idx": 1373,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1374,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1375,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1376,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1381,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1381,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1381,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1381,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1381,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1382,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1382,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1382,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1382,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1382,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1385,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1386,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1387,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1388,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1389,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling syn v1.0.109\n   Compiling toml_edit v0.22.20\n   Compiling unicode-width v0.1.10\n   Compiling base64 v0.13.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling svgbobdoc v0.3.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking rlsf v0.2.1\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1390,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n    Checking rlsf v0.2.1\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n    Checking axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1391,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v1.0.109\n   Compiling syn v2.0.70\n   Compiling toml_edit v0.22.20\n   Compiling base64 v0.13.1\n   Compiling unicode-width v0.1.10\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling axerrno v0.1.0\n   Compiling percpu v0.1.3\n   Compiling svgbobdoc v0.3.0\n   Compiling rlsf v0.2.1\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1392,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axmm, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axmm\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axerrno v0.1.0\n   Compiling rlsf v0.2.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling allocator v0.1.0 (https://github.com/arceos-org/allocator.git?tag=v0.1.0#16496d88)\n   Compiling axalloc v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axalloc)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1393,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1394,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1395,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1396,
      "file": "src/smoltcp_impl/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/modules/axnet/src/smoltcp_impl/mod.rs (original lines from 191 to 192)\n-    type RxToken<'a> = AxNetRxToken<'a> where Self: 'a;\n-    type TxToken<'a> = AxNetTxToken<'a> where Self: 'a;\n+    type RxToken<'a>\n+        = AxNetRxToken<'a>\n+    where\n+        Self: 'a;\n+    type TxToken<'a>\n+        = AxNetTxToken<'a>\n+    where\n+        Self: 'a;\n"
    },
    {
      "cmd_idx": 1397,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1397,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1397,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1397,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1397,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1398,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1398,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1398,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1398,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1398,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1399,
      "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1400,
      "file": "modules/axnet/src/smoltcp_impl/tcp.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `TcpSocket`\n  --> modules/axnet/src/smoltcp_impl/tcp.rs:50:5\n   |\n50 | /     pub const fn new() -> Self {\n51 | |         Self {\n52 | |             state: AtomicU8::new(STATE_CLOSED),\n53 | |             handle: UnsafeCell::new(None),\n...  |\n57 | |         }\n58 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n48 + impl Default for TcpSocket {\n49 +     fn default() -> Self {\n50 +         Self::new()\n51 +     }\n52 + }\n   |\n\n"
    },
    {
      "cmd_idx": 1401,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1402,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1403,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1404,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-10-12T05:40:43Z WARN  lockbud::callbacks] [\n      {\n        \"ConflictLock\": {\n          \"bug_kind\": \"ConflictLock\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": [\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:138:13: 138:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:77:13: 77:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:141:13: 141:64 (#0)\"\n                  ]\n                ]\n              ]\n            },\n            {\n              \"first_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"first_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:138:13: 138:31 (#0)\",\n              \"second_lock_type\": \"SpinWrite(core::option::Option<smoltcp::wire::IpEndpoint>)\",\n              \"second_lock_span\": \"modules/axnet/src/smoltcp_impl/udp.rs:77:13: 77:32 (#0)\",\n              \"callchains\": [\n                [\n                  [\n                    \"modules/axnet/src/smoltcp_impl/udp.rs:141:13: 141:64 (#0)\"\n                  ]\n                ]\n              ]\n            }\n          ],\n          \"explanation\": \"Locks mutually wait for each other to form a cycle\"\n        }\n      }\n    ]\n[2024-10-12T05:40:43Z WARN  lockbud::callbacks] crate axnet contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 1 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1405,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling semver v1.0.18\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling percpu v0.1.3\n   Compiling lock_api v0.4.10\n   Compiling rustc_version v0.4.0\n   Compiling heapless v0.7.16\n   Compiling axerrno v0.1.0\n    Checking spin v0.9.8\n    Checking hash32 v0.2.1\n    Checking stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n    Checking bitflags v1.3.2\n    Checking managed v0.8.0\n    Checking axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy-derive v0.7.35\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1406,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling lock_api v0.4.10\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n    Checking hash32 v0.2.1\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n    Checking spin v0.9.8\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1407,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling equivalent v1.0.1\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling semver v1.0.18\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling lock_api v0.4.10\n   Compiling rustc_version v0.4.0\n   Compiling heapless v0.7.16\n   Compiling axerrno v0.1.0\n   Compiling spin v0.9.8\n   Compiling hash32 v0.2.1\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\n   Compiling stable_deref_trait v1.2.0\n   Compiling axdriver v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axdriver)\n   Compiling axdriver_net v0.1.0 (https://github.com/arceos-org/axdriver_crates.git?tag=v0.1.0#78686a7e)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling axio v0.1.0\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\n   Compiling zerocopy-derive v0.7.35\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1408,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axnet, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axnet\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling lock_api v0.4.10\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling zerocopy v0.7.35\n   Compiling axerrno v0.1.0\n   Compiling heapless v0.7.16\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling hash32 v0.2.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling smoltcp v0.10.0 (https://github.com/rcore-os/smoltcp.git?rev=2ade274#2ade2747)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n   Compiling spin v0.9.8\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1413,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1413,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1413,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1413,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1413,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1414,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1414,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1414,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1414,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1414,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1417,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1418,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1419,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1420,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1421,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n    Checking chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling percpu_macros v0.1.2\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1422,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling num-traits v0.2.16\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n    Checking kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1423,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling chrono v0.4.38\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1424,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axruntime, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axruntime\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling num-traits v0.2.16\n   Compiling percpu v0.1.3\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1429,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1429,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1429,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1429,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1429,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1430,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1430,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1430,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1430,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1430,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1433,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1434,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1435,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1436,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1437,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling hashbrown v0.14.0\n   Compiling serde v1.0.204\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling toml_edit v0.22.20\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking chrono v0.4.38\n    Checking axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1438,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking axio v0.1.0\nerror: could not compile `axhal` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1439,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling percpu v0.1.3\n   Compiling autocfg v1.1.0\n   Compiling num-traits v0.2.16\n   Compiling toml_edit v0.22.20\n   Compiling axerrno v0.1.0\n   Compiling chrono v0.4.38\n   Compiling axio v0.1.0\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1440,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axstd, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/ulib/axstd\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling num-traits v0.2.16\n   Compiling axerrno v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axio v0.1.0\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1445,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1445,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1445,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1445,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1445,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1446,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1446,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1446,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1446,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1446,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1449,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1450,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1451,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1452,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1453,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1454,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1455,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1456,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axsync, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axsync\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling kspin v0.1.0\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1461,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1461,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1461,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1461,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1461,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1462,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\n"
    },
    {
      "cmd_idx": 1462,
      "file": "modules/axhal/src/platform/aarch64_common/boot.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\n"
    },
    {
      "cmd_idx": 1462,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1462,
      "file": "modules/axhal/src/platform/aarch64_common/psci.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1462,
      "file": "modules/axhal/src/platform/aarch64_common/pl011.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\n"
    },
    {
      "cmd_idx": 1465,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1466,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1467,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:05Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:05Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1468,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-12T05:35:07Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:07Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1469,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling hashbrown v0.14.0\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling toml_datetime v0.6.8\n   Compiling winnow v0.6.18\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling syn v2.0.70\n   Compiling percpu v0.1.3\n   Compiling toml_edit v0.22.20\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n    Checking kernel_guard v0.1.1\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n    Checking linkme v0.3.27\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1470,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking kernel_guard v0.1.1\n   Compiling percpu v0.1.3\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n    Checking linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n    Checking kspin v0.1.0\n    Checking axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror: could not compile `axhal` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1471,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.11\n   Compiling equivalent v1.0.1\n   Compiling serde v1.0.204\n   Compiling hashbrown v0.14.0\n   Compiling winnow v0.6.18\n   Compiling toml_datetime v0.6.8\n   Compiling indexmap v2.0.0\n   Compiling quote v1.0.36\n   Compiling percpu v0.1.3\n   Compiling syn v2.0.70\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:34:56Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling toml_edit v0.22.20\n   Compiling crate_interface v0.1.3\n   Compiling linkme-impl v0.3.27\n   Compiling percpu_macros v0.1.2\n   Compiling kernel_guard v0.1.1\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\n   Compiling linkme v0.3.27\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1472,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=axtask, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/modules/axtask\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling kernel_guard v0.1.1\n   Compiling axconfig v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axconfig)\n   Compiling percpu v0.1.3\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-12T05:35:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling linkme v0.3.27\n   Compiling axhal v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axhal)\n   Compiling kspin v0.1.0\n   Compiling axlog v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/modules/axlog)\nerror[E0425]: cannot find function `init_boot_page_table` in module `crate::platform::mem`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:100:27\n    |\n100 |     crate::platform::mem::init_boot_page_table(addr_of_mut!(BOOT_PT_L0), addr_of_mut!(BOOT_PT_L1));\n    |                           ^^^^^^^^^^^^^^^^^^^^ not found in `crate::platform::mem`\n\nerror[E0425]: cannot find value `rust_entry` in module `crate::platform`\n   --> modules/axhal/src/platform/aarch64_common/boot.rs:139:38\n    |\n139 |         entry = sym crate::platform::rust_entry,\n    |                                      ^^^^^^^^^^ not found in `crate::platform`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:82:31\n   |\n82 |     let ret = match axconfig::PSCI_METHOD {\n   |                               ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `PSCI_METHOD` in crate `axconfig`\n  --> modules/axhal/src/platform/aarch64_common/psci.rs:85:58\n   |\n85 |         _ => panic!(\"Unknown PSCI method: {}\", axconfig::PSCI_METHOD),\n   |                                                          ^^^^^^^^^^^ not found in `axconfig`\n\nerror[E0425]: cannot find value `UART_PADDR` in crate `axconfig`\n --> modules/axhal/src/platform/aarch64_common/pl011.rs:9:43\n  |\n9 | const UART_BASE: PhysAddr = pa!(axconfig::UART_PADDR);\n  |                                           ^^^^^^^^^^ not found in `axconfig`\n\nFor more information about this error, try `rustc --explain E0425`.\nerror: could not compile `axhal` (lib) due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1474,
      "file": "src/device.rs",
      "kind": "Clippy(Error)",
      "raw": "error: the loop variable `i` is used to index `mac_addr`\n  --> src/device.rs:80:22\n   |\n80 |             for i in 0..6 {\n   |                      ^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nnote: the lint level is defined here\n  --> src/main.rs:3:9\n   |\n3  | #![deny(warnings)]\n   |         ^^^^^^^^\n   = note: `#[deny(clippy::needless_range_loop)]` implied by `#[deny(warnings)]`\nhelp: consider using an iterator and enumerate()\n   |\n80 |             for (i, <item>) in mac_addr.iter_mut().enumerate() {\n   |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 1477,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=bwbench-client, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling autocfg v1.4.0\n   Compiling libc v0.2.159\n    Checking iana-time-zone v0.1.61\n   Compiling num-traits v0.2.19\n    Checking chrono v0.4.38\n    Checking bwbench-client v0.1.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/bwbench_client)\nerror: could not compile `bwbench-client` (bin \"bwbench-client\") due to 2 previous errors\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 6 to 6)\n-        false => \"--no-default-features\"\n+        false => \"--no-default-features\",\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_builder.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_builder.rs (original lines from 11 to 11)\n-        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str()\n+        _ => \"-F \".to_string() + cfg.features.join(\" \").as_str(),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 1 to 2)\n-use std::{fs, path::Path};\n-use clap::{Arg, ArgAction, Command};\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 4 to 4)\n+use clap::{Arg, ArgAction, Command};\n+use std::{fs, path::Path};\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 10 to 10)\n-\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 18 to 18)\n-            Arg::new(\"no-default\").short('d').long(\"no-default\").action(ArgAction::SetFalse)\n+            Arg::new(\"no-default\")\n+                .short('d')\n+                .long(\"no-default\")\n+                .action(ArgAction::SetFalse),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 21 to 21)\n-            Arg::new(\"features\").short('f').long(\"name\").action(ArgAction::Append)\n+            Arg::new(\"features\")\n+                .short('f')\n+                .long(\"name\")\n+                .action(ArgAction::Append),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 24 to 24)\n-            Arg::new(\"format\").short('o').long(\"format\").default_value(\"mermaid\")\n+            Arg::new(\"format\")\n+                .short('o')\n+                .long(\"format\")\n+                .default_value(\"mermaid\"),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 26 to 26)\n+        .arg(Arg::new(\"target\").short('t').long(\"target\").required(true))\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 27 to 27)\n-            Arg::new(\"target\").short('t').long(\"target\").required(true)\n+            Arg::new(\"save-path\")\n+                .short('s')\n+                .long(\"save-path\")\n+                .default_value(\"out.txt\"),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 29 to 31)\n-        .arg(\n-            Arg::new(\"save-path\").short('s').long(\"save-path\").default_value(\"out.txt\")\n-        )\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 35 to 35)\n-    let features = matches.get_many::<String>(\"features\").unwrap_or_default()\n+    let features = matches\n+        .get_many::<String>(\"features\")\n+        .unwrap_or_default()\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 40 to 40)\n-        _ => GraphFormat::Mermaid\n+        _ => GraphFormat::Mermaid,\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 59 to 59)\n-fn gen_config(is_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n+fn gen_config(\n+    is_default: bool,\n+    features: Vec<String>,\n+    format: GraphFormat,\n+    loc: String,\n+    output_loc: String,\n+) -> Config {\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 65 to 65)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 70 to 70)\n-    crates.into_iter().map(|p| p.unwrap().file_name()).any(|n| n.to_str().unwrap() == name)\n+    crates\n+        .into_iter()\n+        .map(|p| p.unwrap().file_name())\n+        .any(|n| n.to_str().unwrap() == name)\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/cmd_parser.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/cmd_parser.rs (original lines from 82 to 82)\n-    check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n+    check_crate_name(&name)\n+        || check_module_name(&name)\n+        || check_app_name(name)\n+        || check_lib_name(name)\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/d2_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/d2_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 1 to 1)\n-mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 3 to 3)\n-mod mermaid_generator;\n+mod cmd_parser;\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 5 to 5)\n+mod mermaid_generator;\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 6 to 6)\n-use std::process::Command;\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 9 to 9)\n+use std::process::Command;\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 11 to 11)\n-pub use cmd_parser::{parse_cmd, build_loc};\n+pub use cmd_parser::{build_loc, parse_cmd};\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 17 to 18)\n-   Mermaid,\n-   D2,\n+    Mermaid,\n+    D2,\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 25 to 25)\n-    pub features: Vec::<String>,\n+    pub features: Vec<String>,\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 27 to 27)\n-    output_loc: String\n+    output_loc: String,\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 31 to 32)\n-    pub fn build(no_default: bool, features: Vec::<String>, format: GraphFormat, loc: String, output_loc: String) -> Config {\n-        Config { no_default, format, features, loc, output_loc }\n+    pub fn build(\n+        no_default: bool,\n+        features: Vec<String>,\n+        format: GraphFormat,\n+        loc: String,\n+        output_loc: String,\n+    ) -> Config {\n+        Config {\n+            no_default,\n+            format,\n+            features,\n+            loc,\n+            output_loc,\n+        }\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 41 to 43)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 46 to 48)\n-                .args(cmds)\n-                .output()\n-                .expect(\"failed to execute process\")\n+            .args(cmds)\n+            .output()\n+            .expect(\"failed to execute process\")\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 56 to 56)\n-    let mut rst = vec!();\n+    let mut rst = vec![];\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 83 to 83)\n-        _ => generate_mermaid(config)\n+        _ => generate_mermaid(config),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/lib.rs (original lines from 97 to 98)\n-        Ok(()) => {},\n-        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error)\n+        Ok(()) => {}\n+        Err(error) => println!(\"Error during writing file {}, {}\", config.output_loc, error),\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/mermaid_generator.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/mermaid_generator.rs (original lines from 3 to 3)\n-use crate::{parse_deps, cmd_parser::is_arceos_crate};\n+use crate::{cmd_parser::is_arceos_crate, parse_deps};\n"
    },
    {
      "cmd_idx": 1478,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/arceos-org/arceos/tools/deptool/src/main.rs (original lines from 1 to 1)\n-use deptool::{run, parse_cmd};\n+use deptool::{parse_cmd, run};\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:22\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                      ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/cmd_parser.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/cmd_parser.rs:82:50\n   |\n82 |     check_crate_name(&name) || check_module_name(&name) || check_app_name(name) || check_lib_name(name)\n   |                                                  ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/mermaid_generator.rs:6:34\n  |\n6 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:16:29\n   |\n16 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/mermaid_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/mermaid_generator.rs:32:32\n   |\n32 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n --> src/d2_generator.rs:8:34\n  |\n8 |     let deps_parsed = parse_deps(&deps);\n  |                                  ^^^^^ help: change this to: `deps`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:18:29\n   |\n18 |         if !is_arceos_crate(&name) {\n   |                             ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/d2_generator.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/d2_generator.rs:34:32\n   |\n34 |             parsed_crates.push(&name);\n   |                                ^^^^^ help: change this to: `name`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/lib.rs:37:39\n   |\n37 |     let cmd_ct = build_cargo_tree_cmd(&cfg);\n   |                                       ^^^^ help: change this to: `cfg`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 1479,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: writing `&String` instead of `&str` involves a new object where a slice will do\n  --> src/lib.rs:55:21\n   |\n55 | fn parse_deps(deps: &String) -> Vec<(i32, String)> {\n   |                     ^^^^^^^ help: change this to: `&str`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_arg\n   = note: `#[warn(clippy::ptr_arg)]` on by default\n\n"
    },
    {
      "cmd_idx": 1486,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1486,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1486,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1486,
      "file": "src/cpu.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1487,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1487,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1487,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1487,
      "file": "src/cpu.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1488,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1488,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1488,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1488,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1488,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "src/panic_wait.rs",
      "kind": "Clippy(Error)",
      "raw": "error: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "src/cpu.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\n"
    },
    {
      "cmd_idx": 1489,
      "file": "src/main.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\n"
    },
    {
      "cmd_idx": 1494,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1495,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target aarch64-unknown-none-softfloat --no-deps --message-format=json\n    Checking tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n    Checking aarch64-cpu v9.0.0\nerror: could not compile `mingo` (bin \"kernel\") due to 4 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1496,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1497,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Clippy\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo clippy --target x86_64-unknown-none --no-deps --message-format=json\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: could not compile `mingo` (bin \"kernel\") due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1498,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n   Compiling tock-registers v0.8.1\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1499,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=aarch64-unknown-none-softfloat\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target aarch64-unknown-none-softfloat\n   Compiling tock-registers v0.8.1\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\n   Compiling aarch64-cpu v9.0.0\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nwarning: unused import: `nop`\n  --> src/cpu.rs:16:20\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |                    ^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nSome errors have detailed explanations: E0425, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `mingo` (bin \"kernel\") generated 1 warning\nerror: could not compile `mingo` (bin \"kernel\") due to 3 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 1500,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1501,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=mingo, checker=Lockbud\n// toolchain=nightly-2024-05-02, target=x86_64-unknown-none\n// pkg_dir=/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-none\n   Compiling mingo v0.6.0 (/home/runner/check/batch_1/arceos-org/arceos/tools/raspi4/chainloader)\nerror: Add the target_arch to above's check if the following code is safe to use\n  --> src/panic_wait.rs:30:5\n   |\n30 |     compile_error!(\"Add the target_arch to above's check if the following code is safe to use\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `arch_cpu`\n  --> src/cpu.rs:16:9\n   |\n16 | pub use arch_cpu::{nop, wait_forever};\n   |         ^^^^^^^^ use of undeclared crate or module `arch_cpu`\n\nerror[E0433]: failed to resolve: could not find `driver` in `bsp`\n   --> src/main.rs:133:26\n    |\n133 |     if let Err(x) = bsp::driver::init() {\n    |                          ^^^^^^ could not find `driver` in `bsp`\n\nerror[E0433]: failed to resolve: could not find `memory` in `bsp`\n   --> src/main.rs:180:37\n    |\n180 |     let kernel_addr: *mut u8 = bsp::memory::board_default_load_addr() as *mut u8;\n    |                                     ^^^^^^ could not find `memory` in `bsp`\n\nerror[E0425]: cannot find function `board_name` in module `bsp`\n   --> src/main.rs:157:29\n    |\n157 |     println!(\"{:^37}\", bsp::board_name());\n    |                             ^^^^^^^^^^ not found in `bsp`\n\nSome errors have detailed explanations: E0425, E0432, E0433.\nFor more information about an error, try `rustc --explain E0425`.\nerror: could not compile `mingo` (bin \"kernel\") due to 5 previous errors\n"
    },
    {
      "cmd_idx": 1504,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:53:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:53:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1505,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:53:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:53:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1506,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1506,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1507,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 9 to 9)\n-mod utils;\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 12 to 12)\n+mod utils;\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/lib.rs (original lines from 23 to 25)\n-    fn it_works() {\n-\n-    }\n+    fn it_works() {}\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 3 to 3)\n-use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 5 to 5)\n+use volatile::Volatile;\n"
    },
    {
      "cmd_idx": 1507,
      "file": "src/pci.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/src/pci.rs (original lines from 22 to 22)\n-        let deve_id = unsafe{ (*pci_base).read() };\n+        let deve_id = unsafe { (*pci_base).read() };\n"
    },
    {
      "cmd_idx": 1509,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:53:54Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:53:54Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/mod.rs (original lines from 17 to 17)\n-\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/e1000.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/e1000.rs (original lines from 126 to 126)\n+\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1510,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/e1000-driver/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1511,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:16:19\n   |\n16 |             .args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"submodule\", \"update\", \"--init\", \"--recursive\"]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 1511,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: spawned process is never `wait()`ed on\n  --> build.rs:22:9\n   |\n22 | /         Command::new(\"git\")\n23 | |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n24 | |             .current_dir(c_path.clone())\n25 | |             .spawn()\n26 | |             .expect(\"failed to execute process: git apply patch\");\n   | |                                                                 ^- help: try: `.wait()`\n   | |_________________________________________________________________|\n   |\n   |\n   = note: not doing so might leave behind zombie processes\n   = note: see https://doc.rust-lang.org/stable/std/process/struct.Child.html#warning\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zombie_processes\n   = note: `#[warn(clippy::zombie_processes)]` on by default\n\n"
    },
    {
      "cmd_idx": 1511,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:23:19\n   |\n23 |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"apply\", lwext4_patch.to_str().unwrap()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1511,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:40:19\n   |\n40 |               .args(&[\n   |  ___________________^\n41 | |                 \"musl-generic\",\n42 | |                 \"-C\",\n43 | |                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 | |             ])\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n40 ~             .args([\n41 +                 \"musl-generic\",\n42 +                 \"-C\",\n43 +                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 ~             ])\n   |\n\n"
    },
    {
      "cmd_idx": 1511,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:45:18\n   |\n45 |             .arg(&format!(\"ARCH={}\", arch))\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!(\"ARCH={}\", arch)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1512,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:16:19\n   |\n16 |             .args(&[\"submodule\", \"update\", \"--init\", \"--recursive\"])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"submodule\", \"update\", \"--init\", \"--recursive\"]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n   = note: `#[warn(clippy::needless_borrows_for_generic_args)]` on by default\n\n"
    },
    {
      "cmd_idx": 1512,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: spawned process is never `wait()`ed on\n  --> build.rs:22:9\n   |\n22 | /         Command::new(\"git\")\n23 | |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n24 | |             .current_dir(c_path.clone())\n25 | |             .spawn()\n26 | |             .expect(\"failed to execute process: git apply patch\");\n   | |                                                                 ^- help: try: `.wait()`\n   | |_________________________________________________________________|\n   |\n   |\n   = note: not doing so might leave behind zombie processes\n   = note: see https://doc.rust-lang.org/stable/std/process/struct.Child.html#warning\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zombie_processes\n   = note: `#[warn(clippy::zombie_processes)]` on by default\n\n"
    },
    {
      "cmd_idx": 1512,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:23:19\n   |\n23 |             .args(&[\"apply\", lwext4_patch.to_str().unwrap()])\n   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `[\"apply\", lwext4_patch.to_str().unwrap()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1512,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:40:19\n   |\n40 |               .args(&[\n   |  ___________________^\n41 | |                 \"musl-generic\",\n42 | |                 \"-C\",\n43 | |                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 | |             ])\n   | |_____________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\nhelp: change this to\n   |\n40 ~             .args([\n41 +                 \"musl-generic\",\n42 +                 \"-C\",\n43 +                 c_path.to_str().expect(\"invalid path of lwext4\"),\n44 ~             ])\n   |\n\n"
    },
    {
      "cmd_idx": 1512,
      "file": "build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the borrowed expression implements the required traits\n  --> build.rs:45:18\n   |\n45 |             .arg(&format!(\"ARCH={}\", arch))\n   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^ help: change this to: `format!(\"ARCH={}\", arch)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrows_for_generic_args\n\n"
    },
    {
      "cmd_idx": 1514,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:54:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1515,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:54:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1516,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1516,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/src/lib.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1517,
      "file": "examples/src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1517,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/src/lib.rs (original lines from 5 to 5)\n-\n"
    },
    {
      "cmd_idx": 1518,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking either v1.10.0\n    Checking memchr v2.7.2\n    Checking cty v0.2.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-22c51495e4231bf5/build-script-build` (exit status: 101)\n  --- stdout\n  Retrieve lwext4 source code\n  To patch lwext4 src\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
    },
    {
      "cmd_idx": 1519,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo clippy --target riscv64gc-unknown-none-elf --no-deps --message-format=json\n    Checking memchr v2.7.2\n    Checking cty v0.2.2\n    Checking either v1.10.0\n    Checking bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking log v0.4.21\n    Checking itertools v0.9.0\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-22c51495e4231bf5/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1520,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Mirai\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2023-12-30 mirai --target x86_64-unknown-linux-gnu --message-format=json\n    Checking cty v0.2.2\n    Checking memchr v2.7.2\n    Checking either v1.10.0\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n    Checking bitflags v1.3.2\n    Checking log v0.4.21\n    Checking itertools v0.9.0\n    Checking cstr_core v0.2.6\n    Checking printf-compat v0.1.1\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1521,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling cty v0.2.2\n   Compiling memchr v2.7.2\n   Compiling either v1.10.0\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling bitflags v1.3.2\n   Compiling log v0.4.21\n   Compiling itertools v0.9.0\n[2024-10-11T08:54:14Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:14Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cstr_core v0.2.6\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      x86_64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x55c0f5dffe65 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55c0f5dffe65 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55c0f5dffe65 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55c0f5dffe65 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55c0f5e2277b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55c0f5e2277b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55c0f5dfd73f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55c0f5dffc3e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55c0f5dffc3e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55c0f5e00fa9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55c0f5e00ced - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55c0f5e01463 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55c0f5e0130b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55c0f5e00329 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55c0f5e01077 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55c0f5e21913 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55c0f5e219bc - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x55c0f5ddfdc9 - build_script_build::main::hb79145acecc10057\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x55c0f5dd7fab - core::ops::function::FnOnce::call_once::h84e42131003e39e5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x55c0f5ddb8ee - std::sys_common::backtrace::__rust_begin_short_backtrace::h19d6e1177e7662f4\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x55c0f5ddc011 - std::rt::lang_start::{{closure}}::hc791113ae1b869f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x55c0f5dfa5fd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x55c0f5dfa5fd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x55c0f5dfa5fd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x55c0f5dfa5fd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x55c0f5dfa5fd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x55c0f5dfa5fd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x55c0f5dfa5fd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x55c0f5dfa5fd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x55c0f5dfa5fd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x55c0f5ddbfea - std::rt::lang_start::h456336f111e3970b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x55c0f5de064e - main\n    32:     0x7f716b629d90 - <unknown>\n    33:     0x7f716b629e40 - __libc_start_main\n    34:     0x55c0f5dd65a5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1522,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\n   Compiling cty v0.2.2\n   Compiling memchr v2.7.2\n   Compiling either v1.10.0\n   Compiling bitflags v1.3.2\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling log v0.4.21\n[2024-10-11T08:54:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1408:11: 1408:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.21/src/lib.rs:1411:13: 1411:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling itertools v0.9.0\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/target/debug/build/lwext4_rust-909890d5bbd2200e/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x55ec241eae65 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55ec241eae65 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55ec241eae65 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55ec241eae65 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55ec2420d77b - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55ec2420d77b - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55ec241e873f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55ec241eac3e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55ec241eac3e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55ec241ebfa9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55ec241ebced - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55ec241ec463 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55ec241ec30b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55ec241eb329 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55ec241ec077 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55ec2420c913 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55ec2420c9bc - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x55ec241cadc9 - build_script_build::main::hb79145acecc10057\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x55ec241c2fab - core::ops::function::FnOnce::call_once::h84e42131003e39e5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x55ec241c68ee - std::sys_common::backtrace::__rust_begin_short_backtrace::h19d6e1177e7662f4\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x55ec241c7011 - std::rt::lang_start::{{closure}}::hc791113ae1b869f5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x55ec241e55fd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x55ec241e55fd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x55ec241e55fd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x55ec241e55fd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x55ec241e55fd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x55ec241e55fd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x55ec241e55fd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x55ec241e55fd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x55ec241e55fd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x55ec241c6fea - std::rt::lang_start::h456336f111e3970b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x55ec241cb64e - main\n    32:     0x7fa20c429d90 - <unknown>\n    33:     0x7fa20c429e40 - __libc_start_main\n    34:     0x55ec241c15a5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1524,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-10-11T08:54:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 4 to 7)\n-fn panic(info: &PanicInfo) -> !{\n-\tprintln!(\"{}\", info);\n-\tcrate::boot::sbi::shutdown();\n-\tunreachable!()\n+fn panic(info: &PanicInfo) -> ! {\n+    println!(\"{}\", info);\n+    crate::boot::sbi::shutdown();\n+    unreachable!()\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 11 to 12)\n-pub extern \"C\" fn abort() -> !{\n-\tpanic!(\"abort!\");\n+pub extern \"C\" fn abort() -> ! {\n+    panic!(\"abort!\");\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/lang_items.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/lang_items.rs (original lines from 14 to 14)\n-\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 3 to 4)\n-pub fn console_putchar(ch: usize){\n-\tsbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n+pub fn console_putchar(ch: usize) {\n+    sbi_call(SBI_CONSOLE_PUTCHAR, ch, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 8 to 8)\n-\treturn sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n+    return sbi_call(SBI_CONSOLE_GETCHAR, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 11 to 23)\n-pub fn console_putchar_u8(ch: u8){\n-\tlet ret: isize;\n-\t//let arg0: char = ch as char;\n-\tlet arg0: u8 = ch;\n-\tlet arg1: usize = 0;\n-\tlet arg2: usize = 0;\n-\tlet which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n-\tunsafe{\n-\t\tasm!(\"ecall\",\n-\t\t     lateout(\"x10\") ret,\n-\t\t     in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-             );\n-\t}\n+pub fn console_putchar_u8(ch: u8) {\n+    let ret: isize;\n+    //let arg0: char = ch as char;\n+    let arg0: u8 = ch;\n+    let arg1: usize = 0;\n+    let arg2: usize = 0;\n+    let which: usize = 1; //SBI_ECALL_CONSOLE_PUTCHAR\n+    unsafe {\n+        asm!(\"ecall\",\n+        lateout(\"x10\") ret,\n+        in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 26 to 28)\n-fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize{\n-\tlet ret: isize;\n-\tunsafe{\n+fn sbi_call(which: usize, arg0: usize, arg1: usize, arg2: usize) -> isize {\n+    let ret: isize;\n+    unsafe {\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 30 to 34)\n-             lateout(\"x10\") ret,\n-             in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n-            );\n-\t}\n-\tret\n+         lateout(\"x10\") ret,\n+         in(\"x10\") arg0, in(\"x11\") arg1, in(\"x12\") arg2, in(\"x17\") which\n+        );\n+    }\n+    ret\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 37 to 39)\n-pub fn set_timer(stime_value: u64){\n-\t#[cfg(target_pointer_width = \"32\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n+pub fn set_timer(stime_value: u64) {\n+    #[cfg(target_pointer_width = \"32\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, (stime_value >> 32), 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 41 to 42)\n-\t#[cfg(target_pointer_width = \"64\")]\n-\tsbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n+    #[cfg(target_pointer_width = \"64\")]\n+    sbi_call(SBI_SET_TIMER, stime_value as usize, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 44 to 45)\n-pub fn clear_ipi(){\n-\tsbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n+pub fn clear_ipi() {\n+    sbi_call(SBI_CLEAR_IPI, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 48 to 49)\n-pub fn send_ipi(sipi_value: usize){\n-\tsbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n+pub fn send_ipi(sipi_value: usize) {\n+    sbi_call(SBI_SEND_IPI, sipi_value, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 52 to 53)\n-pub fn set_s_insn(entry: usize){\n-\tsbi_call(SBI_SET_SINSN, entry, 0, 0);\n+pub fn set_s_insn(entry: usize) {\n+    sbi_call(SBI_SET_SINSN, entry, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/boot/sbi.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/boot/sbi.rs (original lines from 56 to 57)\n-pub fn shutdown(){\n-\tsbi_call(SBI_SHUTDOWN, 0, 0, 0);\n+pub fn shutdown() {\n+    sbi_call(SBI_SHUTDOWN, 0, 0, 0);\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/ext4fs.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/ext4fs.rs (original lines from 96 to 96)\n-\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 2 to 2)\n-use pci::{PortOps, CSpaceAccessMethod};\n+use pci::{CSpaceAccessMethod, PortOps};\n"
    },
    {
      "cmd_idx": 1525,
      "file": "src/pci_impl.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/elliott10/lwext4_rust/examples/src/pci_impl.rs (original lines from 9 to 9)\n-pub const PCI_COMMAND_INTX_DISABLE:u16 = 0x400;\n+pub const PCI_COMMAND_INTX_DISABLE: u16 = 0x400;\n"
    },
    {
      "cmd_idx": 1526,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=lwext4_rust_examples, checker=Lockbud\n// toolchain=nightly-2024-01-31, target=riscv64gc-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/elliott10/lwext4_rust/examples\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv64gc-unknown-none-elf\nwarning: `/home/runner/check/batch_1/elliott10/lwext4_rust/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\nwarning: `/home/runner/check/batch_1/elliott10/lwext4_rust/examples/.cargo/config` is deprecated in favor of `config.toml`\nnote: if you need to support cargo 1.38 or earlier, you can symlink `config` to `config.toml`\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling autocfg v1.4.0\n   Compiling either v1.13.0\n   Compiling bitflags v1.3.2\n   Compiling scopeguard v1.2.0\n   Compiling log v0.4.22\n   Compiling cty v0.2.2\n   Compiling memchr v2.7.4\n[2024-10-11T08:54:16Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-10-11T08:54:16Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling itertools v0.9.0\n   Compiling lock_api v0.4.12\n   Compiling cstr_core v0.2.6\n   Compiling quote v1.0.37\n   Compiling riscv v0.8.0\n   Compiling syn v2.0.79\n   Compiling lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling spinning_top v0.2.5\n   Compiling printf-compat v0.1.1\n   Compiling bitflags v2.6.0\n   Compiling bare-metal v1.0.0\n   Compiling spin v0.9.8\nerror: failed to run custom build command for `lwext4_rust v0.2.0 (/home/runner/check/batch_1/elliott10/lwext4_rust)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/elliott10/lwext4_rust/examples/target/debug/build/lwext4_rust-c7b17cf11163458d/build-script-build` (exit status: 101)\n  --- stdout\n  make: Entering directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n  rm -R -f build_musl-generic\n  mkdir build_musl-generic\n  cd build_musl-generic && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DVERSION_MAJOR=1 -DVERSION_MINOR=0 -DVERSION_PATCH=0 -DVERSION=1.0.0-58bcf89 -DLWEXT4_BUILD_SHARED_LIB=OFF -DCMAKE_INSTALL_PREFIX=./install   -DCMAKE_TOOLCHAIN_FILE=../toolchain/musl-generic.cmake ..\n  -- The C compiler identification is unknown\n  -- Configuring incomplete, errors occurred!\n  make: Leaving directory '/home/runner/check/batch_1/elliott10/lwext4_rust/c/lwext4'\n\n  --- stderr\n  CMake Warning (dev) at CMakeLists.txt:1 (project):\n    cmake_minimum_required() should be called prior to this top-level project()\n    call.  Please see the cmake-commands(7) manual for usage documentation of\n    both commands.\n  This warning is for project developers.  Use -Wno-dev to suppress it.\n\n  CMake Error at CMakeLists.txt:1 (project):\n    The CMAKE_C_COMPILER:\n\n      riscv64-linux-musl-cc\n\n    is not a full path and was not found in the PATH.\n\n    Tell CMake where to find the compiler by setting either the environment\n    variable \"CC\" or the CMake cache entry CMAKE_C_COMPILER to the full path to\n    the compiler, or to the compiler name if it is in the PATH.\n\n\n  make: *** [Makefile:37: musl-generic] Error 1\n  thread 'main' panicked at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9:\n  assertion failed: status.success()\n  stack backtrace:\n     0:     0x5640a2e0fe95 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5640a2e0fe95 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5640a2e0fe95 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5640a2e0fe95 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5640a2e327ab - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5640a2e327ab - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5640a2e0d76f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5640a2e0fc6e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5640a2e0fc6e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5640a2e10fd9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5640a2e10d1d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5640a2e11493 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5640a2e1133b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5640a2e10359 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5640a2e110a7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5640a2e31943 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5640a2e319ec - core::panicking::panic::h6eb78686f8ac2d4f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:146:5\n    17:     0x5640a2defdf9 - build_script_build::main::hcb4eff35aeae8522\n                                 at /home/runner/check/batch_1/elliott10/lwext4_rust/build.rs:48:9\n    18:     0x5640a2de7f6b - core::ops::function::FnOnce::call_once::h51c68e994c853273\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    19:     0x5640a2deb91e - std::sys_common::backtrace::__rust_begin_short_backtrace::h8a9d9b28fe7b1f4d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    20:     0x5640a2dec041 - std::rt::lang_start::{{closure}}::h5566b19375be2fcd\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    21:     0x5640a2e0a62d - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    22:     0x5640a2e0a62d - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    23:     0x5640a2e0a62d - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    24:     0x5640a2e0a62d - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    25:     0x5640a2e0a62d - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    26:     0x5640a2e0a62d - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    27:     0x5640a2e0a62d - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    28:     0x5640a2e0a62d - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    29:     0x5640a2e0a62d - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    30:     0x5640a2dec01a - std::rt::lang_start::hf69640528cfe7f6c\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    31:     0x5640a2df067e - main\n    32:     0x7fbfda629d90 - <unknown>\n    33:     0x7fbfda629e40 - __libc_start_main\n    34:     0x5640a2de65d5 - _start\n    35:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/error.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/sync.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/driver/irq.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\n"
    },
    {
      "cmd_idx": 1527,
      "file": "src/driver/irq.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\n"
    },
    {
      "cmd_idx": 1531,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=Clippy\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling strsim v0.11.1\n   Compiling ident_case v1.0.1\n   Compiling fnv v1.0.7\n    Checking bitflags v2.6.0\n    Checking cfg-if v1.0.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n    Checking derive_builder v0.20.2\n    Checking osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
    },
    {
      "cmd_idx": 1532,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=osl, checker=Lockbud\n// toolchain=nightly-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/guoweikang/osl\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling proc-macro2 v1.0.87\n   Compiling unicode-ident v1.0.13\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling strsim v0.11.1\n   Compiling cfg-if v1.0.0\n   Compiling bitflags v2.6.0\n   Compiling quote v1.0.37\n   Compiling syn v2.0.79\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling derive_builder_core v0.20.2\n   Compiling derive_builder_macro v0.20.2\n   Compiling derive_builder v0.20.2\n   Compiling osl v0.1.0 (/home/runner/check/batch_1/guoweikang/osl)\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:58:46\n   |\n58 | pub type Result<T> = core::result::Result<T, Error>;\n   |                                              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Error` in this scope\n  --> src/error.rs:62:14\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |              ^^^^^ not found in this scope\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0433]: failed to resolve: use of undeclared type `Error`\n  --> src/error.rs:62:21\n   |\n62 |     Err::<T, Error>(Error::from(errno))\n   |                     ^^^^^ use of undeclared type `Error`\n   |\nhelp: consider importing one of these items\n   |\n35 + use core::error::Error;\n   |\n35 + use core::fmt::Error;\n   |\n\nerror[E0412]: cannot find type `Arc` in this scope\n  --> src/sync.rs:33:24\n   |\n33 |     fn new() -> Result<Arc<Self>>;\n   |                        ^^^ not found in this scope\n\nerror[E0412]: cannot find type `Return` in this scope\n  --> src/driver/irq.rs:40:42\n   |\n40 | pub fn to_irq_return(val: ReturnEnum) -> Return {\n   |                                          ^^^^^^ not found in this scope\n\nerror[E0433]: failed to resolve: use of undeclared type `Return`\n  --> src/driver/irq.rs:41:5\n   |\n41 |     Return::from(val)\n   |     ^^^^^^ use of undeclared type `Return`\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information about an error, try `rustc --explain E0412`.\nerror: could not compile `osl` (lib) due to 6 previous errors\n"
    }
  ]
}