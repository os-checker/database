{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.83.0-nightly (adaff5368 2024-09-12)",
          "commit_hash": "adaff5368b0c7b328a0320a218751d65ab1bba97",
          "commit_date": "2024-09-12",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.83.0-nightly",
          "llvm_version": "19.1.0"
        },
        "installed": [
          {
            "channel": "nightly-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "riscv32imac-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "thumbv6m-none-eabi",
              "thumbv7em-none-eabi",
              "thumbv7em-none-eabihf",
              "thumbv7m-none-eabi",
              "thumbv8m.main-none-eabi",
              "thumbv8m.main-none-eabihf",
              "wasm32-unknown-unknown",
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "riscv32imac-unknown-none-elf",
              "riscv64imac-unknown-none-elf",
              "thumbv6m-none-eabi",
              "thumbv7em-none-eabi",
              "thumbv7em-none-eabihf",
              "thumbv7m-none-eabi",
              "thumbv8m.main-none-eabi",
              "thumbv8m.main-none-eabihf",
              "wasm32-unknown-unknown",
              "x86_64-unknown-linux-gnu",
              "clippy"
            ],
            "toml_path": "/home/runner/check",
            "install_clippy": true,
            "peculiar_targets": null
          },
          {
            "channel": "nightly-2022-08-08",
            "profile": "minimal",
            "targets": [
              "riscv64imac-unknown-none-elf"
            ],
            "components": [
              "rust-src",
              "llvm-tools-preview",
              "rustfmt",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/Byte-OS/lose-net-stack/example/rust-toolchain.toml",
            "install_clippy": false,
            "peculiar_targets": null
          },
          {
            "channel": "1.78",
            "profile": null,
            "targets": [
              "riscv32imac-unknown-none-elf",
              "thumbv6m-none-eabi",
              "thumbv7em-none-eabi",
              "thumbv7em-none-eabihf",
              "thumbv7m-none-eabi",
              "thumbv8m.main-none-eabihf",
              "wasm32-unknown-unknown"
            ],
            "components": [
              "rust-src",
              "rustfmt",
              "llvm-tools",
              "clippy"
            ],
            "toml_path": "/home/runner/check/batch_1/AsyncModules/embassy-priority/rust-toolchain.toml",
            "install_clippy": true,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1726263662777,
        "finish": 1726264916269,
        "duration_ms": 1253492,
        "git_time": "2024-09-14 05:36:46 +0800",
        "git_sha": "fb434f6a08746e1ac0e59bf87d416a5a165c2c6e"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "AsyncModules",
        "repo": "embassy-priority",
        "rust_toolchain_idxs": [
          2
        ]
      },
      {
        "user": "Byte-OS",
        "repo": "lose-net-stack",
        "rust_toolchain_idxs": [
          1
        ]
      }
    ],
    "packages": [
      {
        "name": "embassy-boot",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-boot-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-boot-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-boot-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-embedded-hal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-executor",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-executor-macros",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-futures",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-hal-internal",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-adin1110",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-driver-channel",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-enc28j60",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-esp-hosted",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-ppp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-tuntap",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-net-wiznet",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-nrf",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-rp",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-stm32",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-stm32-wpan",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-sync",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-time",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-time-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-time-queue-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-usb",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-usb-dfu",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-usb-driver",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-usb-logger",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      },
      {
        "name": "embassy-usb-synopsys-otg",
        "repo": {
          "repo_idx": 0,
          "user": "AsyncModules",
          "repo": "embassy-priority"
        },
        "rust_toolchain_idx": 2
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1921,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 260,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1903,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 3879,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1942,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1902,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1959,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1877,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 15,
      "duration_ms": 1899,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3225,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2244,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2241,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2306,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2263,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2234,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2180,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2253,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2290,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 260,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 166,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 165,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 169,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 166,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 165,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1003,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9454,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 9534,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 13053,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 9661,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 9329,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9424,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9521,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9488,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9567,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9534,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9454,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9488,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 13053,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9424,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9567,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9329,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9521,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9661,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1003,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-rp -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 180,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 189,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 187,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1189,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 28780,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 11831,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 11751,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 12016,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 11994,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 11458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 11757,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 11701,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 11308,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1189,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 11458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 2,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 11308,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-boot-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1278,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1231,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 308,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1280,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1311,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1246,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1240,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 83158,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3482,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1701,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1638,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1621,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1642,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1680,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1652,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1656,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1576,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1621,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 83158,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1576,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3482,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1656,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1311,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1652,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 308,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1680,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1278,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1642,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1280,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1231,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1638,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1246,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1701,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 3,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1240,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 118,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 119,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-embedded-hal -- --emit=json",
      "count": 0,
      "duration_ms": 115,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1689,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1644,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 2741,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1617,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1681,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1611,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1636,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 17,
      "duration_ms": 1625,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2508,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1924,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1958,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1928,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1934,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1912,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1894,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1911,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1893,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 4,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 265,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 270,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 136,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 260,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 269,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 261,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 261,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 7138,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6862,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 237,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 216,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 223,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 238,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 240,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 236,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 234,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 225,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 269,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 261,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 260,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 136,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 265,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 255,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 7138,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 261,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 5,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 270,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-executor-macros -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 5875,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 112,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 113,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 107,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 110,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 110,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 107,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6382,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 70,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 70,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 70,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 68,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 69,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 68,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 60,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 6,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 71,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 104,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-futures -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 131,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 228,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 496,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 223,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 223,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 223,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 220,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 4,
      "duration_ms": 229,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 219,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 170,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 171,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 169,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 167,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 171,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 182,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 157,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 173,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 7,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 131,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-hal-internal -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 620,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 201,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 609,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1179,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 606,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 607,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 588,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 584,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 602,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1080,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 691,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 701,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 693,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 692,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 707,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 669,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 645,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 709,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 8,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 201,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1171,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1123,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1107,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1134,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1096,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1097,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 1123,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 12,
      "duration_ms": 2482,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2481,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1448,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1432,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1474,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1475,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1465,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1457,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1432,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2482,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1457,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2481,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1096,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1465,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1475,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1171,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1474,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1134,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1107,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1123,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1448,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1097,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 9,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1123,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 111,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 113,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 114,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-adin1110 -- --emit=json",
      "count": 0,
      "duration_ms": 116,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1733,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1706,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1714,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1743,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1737,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1736,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 1748,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 7,
      "duration_ms": 3134,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2534,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2040,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2017,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1974,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2049,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2077,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2052,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2080,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1996,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1737,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1748,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1714,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1733,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1743,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 3134,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1736,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 10,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1706,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver -- --emit=json",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 148,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 336,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 145,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 147,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 148,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 141,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 151,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 155,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 111,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 11,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-driver-channel -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1315,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1293,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1763,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1289,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1272,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1258,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1235,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1256,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1887,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1591,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1550,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1572,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1549,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1595,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1530,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1497,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1569,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 12,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-enc28j60 -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1428,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 166,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1426,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 2215,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1434,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1446,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1420,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1417,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 76,
      "duration_ms": 1428,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2070,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1578,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1568,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1594,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1601,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1619,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1522,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1538,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1618,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 13,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 166,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 112,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-esp-hosted -- --emit=json",
      "count": 0,
      "duration_ms": 105,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1971,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2007,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 6396,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2029,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2025,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1994,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1975,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1959,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6001,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2306,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2322,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2319,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2369,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2389,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2265,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2263,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2342,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 14,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-ppp -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1409,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1438,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 4713,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1498,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1492,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1474,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1564,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1532,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 4608,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1850,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1822,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1817,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1814,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1877,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1822,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1925,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1750,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 15,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-tuntap -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 286,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 278,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 186,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 356,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 2389,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 278,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 633,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 287,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1255,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 295,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 296,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 296,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 298,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 292,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 778,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 717,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3326,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 265,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 778,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 265,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 356,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 295,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 717,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 298,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 186,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 296,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 633,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 296,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1255,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 286,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 278,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 287,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 292,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 16,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 278,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-net-wiznet -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1550,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1579,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 2288,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1543,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1557,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1518,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1504,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 6,
      "duration_ms": 1549,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2204,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1787,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1784,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1830,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1822,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1776,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1798,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1759,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1752,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 17,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 155,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 224,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 220,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 218,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 219,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 219,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 222,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 220,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 220,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-nrf -- --emit=json",
      "count": 0,
      "duration_ms": 216,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 159,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 163,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 161,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 162,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 164,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1933,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 9174,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 9263,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 12721,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 9238,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 8902,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 9015,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 9209,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 9322,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 9225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9263,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9174,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9322,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 12721,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9015,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9225,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 8902,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9209,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9238,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 18,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1933,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 191,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 188,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 190,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-rp -- --emit=json",
      "count": 0,
      "duration_ms": 185,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 186,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 176,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 190,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 184,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 190,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 185,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 183,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 181,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1302,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 34728,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 10554,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 10481,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 10400,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 10360,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 10055,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 9218,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 10112,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 10200,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1302,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10055,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 9218,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 19,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 10200,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 510,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 465,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 465,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 465,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 467,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 476,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 472,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 476,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32 -- --emit=json",
      "count": 0,
      "duration_ms": 468,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1198,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 291,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1325,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1145,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1174,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1137,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 5881,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 5819,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1544,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1482,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1487,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1524,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1616,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1489,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1684,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1487,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 5881,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1684,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 5819,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1489,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1145,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1476,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 291,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1616,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1198,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1524,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1153,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1325,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1482,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1174,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1544,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 20,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1137,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 123,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 122,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 121,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-stm32-wpan -- --emit=json",
      "count": 0,
      "duration_ms": 120,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1390,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1484,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 385,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1593,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1367,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1374,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1399,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 1491,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 6487,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 6317,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1782,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1744,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1732,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1798,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1804,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1773,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1763,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2015,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1732,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 6487,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2015,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 6317,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1763,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1374,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1773,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 385,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1804,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1390,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1798,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1367,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1593,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1484,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1744,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1399,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1782,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 21,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1491,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 138,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 133,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-sync -- --emit=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1450,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1438,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 2045,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1431,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1450,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1423,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1399,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 1403,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1742,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1478,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1469,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1479,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1472,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1473,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1438,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1451,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1505,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 22,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time -- --emit=json",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1147,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 174,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1150,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 2196,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1130,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1156,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1125,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1158,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 1142,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 1853,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1431,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1393,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1397,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1381,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1417,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1340,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1339,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1398,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 23,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 174,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 108,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 139,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 138,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 130,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 141,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 138,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 137,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 140,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 894,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 819,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 95,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 106,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 106,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 138,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 140,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 141,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 130,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 139,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 135,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 894,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 137,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 24,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 138,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-time-queue-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 137,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 276,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 131,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 130,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 199,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 94,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 93,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 82,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 95,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 25,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 126,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 132,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 126,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 124,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 125,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 129,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 128,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb -- --emit=json",
      "count": 0,
      "duration_ms": 127,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2474,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 166,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2457,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 7992,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2449,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2443,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2447,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2447,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 5,
      "duration_ms": 2368,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 8289,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 2920,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3072,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3046,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3070,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3067,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 3075,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 2989,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 26,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 166,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 101,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 103,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-dfu -- --emit=json",
      "count": 0,
      "duration_ms": 102,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1876,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1885,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 170,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1851,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1873,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1900,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1858,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 1896,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 4405,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 3429,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 2458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 2406,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 2409,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 2520,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 2462,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 2505,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 2501,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 2474,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2409,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 4405,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2474,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3429,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2501,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1900,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2505,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 170,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2462,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1876,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2520,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1873,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1851,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1885,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2406,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1858,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 2458,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 27,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1896,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-driver -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 157,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 154,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 295,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 156,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 153,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 151,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 0,
      "duration_ms": 155,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 154,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 110,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 107,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 108,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 107,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 109,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 28,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 124,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 96,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 97,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 98,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 100,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-logger -- --emit=json",
      "count": 0,
      "duration_ms": 99,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2204,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 165,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2254,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 7272,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2176,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2189,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2202,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2177,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 2,
      "duration_ms": 2186,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 1,
      "duration_ms": 8220,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 1,
      "duration_ms": 3028,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 1,
      "duration_ms": 3131,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 1,
      "duration_ms": 3128,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 1,
      "duration_ms": 3120,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 1,
      "duration_ms": 3094,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 1,
      "duration_ms": 2954,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 3024,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 1,
      "duration_ms": 3087,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 29,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 165,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 144,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 143,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 149,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 141,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 142,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 146,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "fmt",
      "cmd": "cargo +nightly-x86_64-unknown-linux-gnu fmt -p embassy-usb-synopsys-otg -- --emit=json",
      "count": 0,
      "duration_ms": 146,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1885,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1872,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json",
      "count": 3,
      "duration_ms": 153,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1869,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1825,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1892,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1839,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 1854,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json",
      "count": 142,
      "duration_ms": 2374,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf",
      "count": 0,
      "duration_ms": 2114,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi",
      "count": 0,
      "duration_ms": 1797,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 1794,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown",
      "count": 0,
      "duration_ms": 1749,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf",
      "count": 0,
      "duration_ms": 1824,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi",
      "count": 0,
      "duration_ms": 1790,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf",
      "count": 0,
      "duration_ms": 1803,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi",
      "count": 0,
      "duration_ms": 1818,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi",
      "count": 0,
      "duration_ms": 1778,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1892,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1854,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1869,
      "arch": "thumbv6m",
      "target_triple": "thumbv6m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 153,
      "arch": "thumbv8m.main",
      "target_triple": "thumbv8m.main-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1885,
      "arch": "thumbv7em",
      "target_triple": "thumbv7em-none-eabihf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1825,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 2374,
      "arch": "riscv32imac",
      "target_triple": "riscv32imac-unknown-none-elf",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1839,
      "arch": "wasm32",
      "target_triple": "wasm32-unknown-unknown",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    },
    {
      "package_idx": 30,
      "tool": "cargo",
      "cmd": "VRITUAL=clippy cargo",
      "count": 1,
      "duration_ms": 1872,
      "arch": "thumbv7m",
      "target_triple": "thumbv7m-none-eabi",
      "rust_toolchain_idx": 2,
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 9,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 10,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 11,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 13,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 14,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 15,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 16,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:327:29\n    |\n327 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:332:45\n    |\n332 |                 self.dfu.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                             ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:333:47\n    |\n333 |                 self.active.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                               ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:349:29\n    |\n349 |             let page_size = Self::PAGE_SIZE as u32;\n    |                             ^^^^^^^^^^^^^^^^^^^^^^ help: try: `Self::PAGE_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:351:28\n    |\n351 |             self.dfu.erase(to_offset as u32, to_offset + page_size)?;\n    |                            ^^^^^^^^^^^^^^^^ help: try: `to_offset`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:354:48\n    |\n354 |                 self.active.read(from_offset + offset_in_page as u32, aligned_buf)?;\n    |                                                ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/boot_loader.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/boot_loader.rs:355:44\n    |\n355 |                 self.dfu.write(to_offset + offset_in_page as u32, aligned_buf)?;\n    |                                            ^^^^^^^^^^^^^^^^^^^^^ help: try: `offset_in_page`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:301:28\n    |\n301 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:326:28\n    |\n326 |         self.state.read(0, &mut self.aligned).await?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/asynch.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/asynch.rs:331:59\n    |\n331 |                 self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned).await?;\n    |                                                           ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:336:28\n    |\n336 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:363:28\n    |\n363 |         self.state.read(0, &mut self.aligned)?;\n    |                            ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:367:55\n    |\n367 |             self.state.read(STATE::WRITE_SIZE as u32, &mut self.aligned)?;\n    |                                                       ^^^^^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:374:60\n    |\n374 |                 self.state.write(STATE::WRITE_SIZE as u32, &self.aligned)?;\n    |                                                            ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 17,
      "file": "src/firmware_updater/blocking.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/firmware_updater/blocking.rs:382:33\n    |\n382 |             self.state.write(0, &self.aligned)?;\n    |                                 ^^^^^^^^^^^^^ help: change this to: `self.aligned`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling typenum v1.17.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling generic-array v0.14.7\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 55,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 56,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 57,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 58,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling semver-parser v0.7.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling proc-macro2 v1.0.86\n   Compiling version_check v0.9.5\n   Compiling semver v0.9.0\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling generic-array v0.14.7\n   Compiling rustc_version v0.2.3\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling unicode-ident v1.0.13\n   Compiling litrs v0.4.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling document-features v0.2.10\n   Compiling syn v1.0.109\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling autocfg v1.3.0\n   Compiling embedded-io v0.6.1\n   Compiling quote v1.0.37\n   Compiling vcell v0.1.3\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling fixed v1.28.0\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 59,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 60,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 61,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling rand_core v0.6.4\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 62,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-storage v0.3.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 63,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling typenum v1.17.0\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m v0.7.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-storage v0.3.1\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling num-traits v0.2.19\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bitfield v0.13.2\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling signature v2.2.0\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip.rs\" or \"/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf/src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 64,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-nrf, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-nrf\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded bare-metal v0.2.5\n  Downloaded bitflags v2.6.0\n  Downloaded volatile-register v0.2.2\n  Downloaded vcell v0.1.3\n  Downloaded semver v0.9.0\n  Downloaded cortex-m-rt-macros v0.7.0\n  Downloaded semver-parser v0.7.0\n  Downloaded rustc_version v0.2.3\n  Downloaded half v2.4.1\n  Downloaded bytemuck v1.18.0\n  Downloaded syn v1.0.109\n  Downloaded fixed v1.28.0\n  Downloaded cortex-m v0.7.7\n  Downloaded num-traits v0.2.19\n  Downloaded cortex-m-rt v0.7.3\n  Downloaded az v1.2.1\n  Downloaded bitfield v0.13.2\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 83,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 84,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 85,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 86,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 87,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 88,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 89,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 90,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 91,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 92,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded arrayvec v0.7.6\n  Downloaded crunchy v0.2.2\n  Downloaded is-terminal v0.4.13\n  Downloaded debug-helper v0.3.13\n  Downloaded new_debug_unreachable v1.0.6\n  Downloaded num_enum v0.5.11\n  Downloaded pio-proc v0.2.2\n  Downloaded pio-parser v0.2.2\n  Downloaded phf_shared v0.10.0\n  Downloaded precomputed-hash v0.1.1\n  Downloaded dirs-sys-next v0.1.2\n  Downloaded dirs-next v2.0.0\n  Downloaded lalrpop-util v0.19.12\n  Downloaded scopeguard v1.2.0\n  Downloaded tiny-keccak v2.0.2\n  Downloaded unicode-xid v0.2.5\n  Downloaded term v0.7.0\n  Downloaded rp2040-boot2 v0.3.0\n  Downloaded rp-pac v6.0.0\n  Downloaded lalrpop v0.19.12\n  Downloaded itertools v0.10.5\n  Downloaded pio v0.2.1\n  Downloaded parking_lot v0.12.3\n  Downloaded siphasher v0.3.11\n  Downloaded proc-macro-error-attr v1.0.4\n  Downloaded proc-macro-error v1.0.4\n  Downloaded paste v1.0.15\n  Downloaded parking_lot_core v0.9.10\n  Downloaded crc-any v2.5.0\n  Downloaded codespan-reporting v0.11.1\n  Downloaded string_cache v0.8.7\n  Downloaded lock_api v0.4.12\n  Downloaded diff v0.1.13\n  Downloaded num_enum_derive v0.5.11\n  Downloaded embedded-hal-nb v1.0.0\n  Downloaded atomic-polyfill v1.0.3\n  Downloaded ena v0.14.3\n  Downloaded bit-vec v0.6.3\n  Downloaded bit-set v0.5.3\n  Downloaded ascii-canvas v3.0.0\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 93,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling typenum v1.17.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v1.0.0\n   Compiling futures-util v0.3.30\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling cortex-m-rt v0.7.3\n   Compiling volatile-register v0.2.2\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling atomic-polyfill v1.0.3\n   Compiling rp-pac v6.0.0\n   Compiling fixed v1.28.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling arrayvec v0.7.6\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling pio v0.2.1\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 94,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling typenum v1.17.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:40Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.19.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling cfg-if v1.0.0\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:41Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:53Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:43:47Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling rp-pac v6.0.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling atomic-polyfill v1.0.3\n   Compiling fixed v1.28.0\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:44:01Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling arrayvec v0.7.6\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling pio v0.2.1\n   Compiling digest v0.10.7\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-boot-rp v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-rp)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> /home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp/src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/void-1.0.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 106,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 122,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x56224e003225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x56224e02153b - core::fmt::write::h0c46818975380aad\n     2:     0x56224e00109f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x56224e002ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x56224e004369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x56224e0040ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x56224e004823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x56224e0046cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x56224e0036e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x56224e004437 - rust_begin_unwind\n    10:     0x56224e020763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x56224dfe7e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x56224dfe5a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x56224dfe6986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x56224dfe69d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x56224dffe51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x56224dfe69b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x56224dfe7f05 - main\n    18:     0x7f7ddfc29d90 - <unknown>\n    19:     0x7f7ddfc29e40 - __libc_start_main\n    20:     0x56224dfe42c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 123,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n Downloading crates ...\n  Downloaded sdio-host v0.5.0\n  Downloaded embedded-can v0.4.1\n  Downloaded stm32-fmc v0.3.2\n  Downloaded bit_field v0.10.2\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling rustc_version v0.2.3\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling bare-metal v0.2.5\n    Checking futures-core v0.3.30\n   Compiling version_check v0.9.5\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling generic-array v0.14.7\n   Compiling quote v1.0.37\n    Checking futures-util v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling litrs v0.4.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-hal v1.0.0\n   Compiling document-features v0.2.10\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling autocfg v1.3.0\n   Compiling bitfield v0.13.2\n   Compiling syn v1.0.109\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 124,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x562c2afed225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x562c2b00b53b - core::fmt::write::h0c46818975380aad\n     2:     0x562c2afeb09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x562c2afecffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x562c2afee369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x562c2afee0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x562c2afee823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x562c2afee6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x562c2afed6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x562c2afee437 - rust_begin_unwind\n    10:     0x562c2b00a763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x562c2afd1e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x562c2afcfa63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x562c2afd0986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x562c2afd09d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x562c2afe851d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x562c2afd09b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x562c2afd1f05 - main\n    18:     0x7f18bea29d90 - <unknown>\n    19:     0x7f18bea29e40 - __libc_start_main\n    20:     0x562c2afce2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 125,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling nb v0.1.3\n   Compiling proc-macro2 v1.0.86\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling semver v0.9.0\n   Compiling byteorder v1.5.0\n   Compiling unicode-ident v1.0.13\n   Compiling pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling rustc_version v0.2.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling version_check v0.9.5\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling generic-array v0.14.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling document-features v0.2.10\n   Compiling cortex-m-rt v0.7.3\n   Compiling autocfg v1.3.0\n   Compiling bitfield v0.13.2\n   Compiling syn v1.0.109\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55fb3f742225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55fb3f76053b - core::fmt::write::h0c46818975380aad\n     2:     0x55fb3f74009f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55fb3f741ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55fb3f743369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55fb3f7430ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55fb3f743823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55fb3f7436cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55fb3f7426e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55fb3f743437 - rust_begin_unwind\n    10:     0x55fb3f75f763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55fb3f726e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55fb3f724a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55fb3f725986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55fb3f7259d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55fb3f73d51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55fb3f7259b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55fb3f726f05 - main\n    18:     0x7f6031229d90 - <unknown>\n    19:     0x7f6031229e40 - __libc_start_main\n    20:     0x55fb3f7232c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 126,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d8a8500225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55d8a851e53b - core::fmt::write::h0c46818975380aad\n     2:     0x55d8a84fe09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55d8a84ffffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55d8a8501369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55d8a85010ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55d8a8501823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55d8a85016cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55d8a85006e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55d8a8501437 - rust_begin_unwind\n    10:     0x55d8a851d763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55d8a84e4e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55d8a84e2a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55d8a84e3986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55d8a84e39d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55d8a84fb51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55d8a84e39b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55d8a84e4f05 - main\n    18:     0x7f4212029d90 - <unknown>\n    19:     0x7f4212029e40 - __libc_start_main\n    20:     0x55d8a84e12c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 127,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling num-traits v0.2.19\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 128,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55e873c59225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55e873c7753b - core::fmt::write::h0c46818975380aad\n     2:     0x55e873c5709f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55e873c58ffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55e873c5a369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55e873c5a0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55e873c5a823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55e873c5a6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55e873c596e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55e873c5a437 - rust_begin_unwind\n    10:     0x55e873c76763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55e873c3de3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55e873c3ba63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55e873c3c986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55e873c3c9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55e873c5451d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55e873c3c9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55e873c3df05 - main\n    18:     0x7fa948a29d90 - <unknown>\n    19:     0x7fa948a29e40 - __libc_start_main\n    20:     0x55e873c3a2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 129,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\nerror: could not compile `void` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `nb` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 130,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5584f6b2c225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x5584f6b4a53b - core::fmt::write::h0c46818975380aad\n     2:     0x5584f6b2a09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x5584f6b2bffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x5584f6b2d369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x5584f6b2d0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x5584f6b2d823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x5584f6b2d6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x5584f6b2c6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x5584f6b2d437 - rust_begin_unwind\n    10:     0x5584f6b49763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x5584f6b10e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x5584f6b0ea63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x5584f6b0f986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x5584f6b0f9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x5584f6b2751d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x5584f6b0f9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x5584f6b10f05 - main\n    18:     0x7f8441829d90 - <unknown>\n    19:     0x7f8441829e40 - __libc_start_main\n    20:     0x5584f6b0d2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 131,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 132,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5562224bb225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x5562224d953b - core::fmt::write::h0c46818975380aad\n     2:     0x5562224b909f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x5562224baffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x5562224bc369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x5562224bc0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x5562224bc823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x5562224bc6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x5562224bb6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x5562224bc437 - rust_begin_unwind\n    10:     0x5562224d8763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55622249fe3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55622249da63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55622249e986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55622249e9d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x5562224b651d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55622249e9b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55622249ff05 - main\n    18:     0x7fbbb0629d90 - <unknown>\n    19:     0x7fbbb0629e40 - __libc_start_main\n    20:     0x55622249c2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 133,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 134,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n    Checking volatile-register v0.2.2\n   Compiling syn v1.0.109\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 135,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 136,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55bd03a4e225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x55bd03a6c53b - core::fmt::write::h0c46818975380aad\n     2:     0x55bd03a4c09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x55bd03a4dffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x55bd03a4f369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x55bd03a4f0ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x55bd03a4f823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x55bd03a4f6cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x55bd03a4e6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x55bd03a4f437 - rust_begin_unwind\n    10:     0x55bd03a6b763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x55bd03a32e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x55bd03a30a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x55bd03a31986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x55bd03a319d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x55bd03a4951d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x55bd03a319b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x55bd03a32f05 - main\n    18:     0x7f7589a29d90 - <unknown>\n    19:     0x7f7589a29e40 - __libc_start_main\n    20:     0x55bd03a2f2c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 137,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking nb v0.1.3\n    Checking futures-core v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 138,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling embedded-hal v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\nnote: To improve backtraces for build dependencies, set the CARGO_PROFILE_DEV_BUILD_OVERRIDE_DEBUG=true environment variable to enable debug information generation.\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c5060c26102caf31/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5577a5bbf225 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n     1:     0x5577a5bdd53b - core::fmt::write::h0c46818975380aad\n     2:     0x5577a5bbd09f - std::io::Write::write_fmt::h5ea3db9efd501baa\n     3:     0x5577a5bbeffe - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n     4:     0x5577a5bc0369 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n     5:     0x5577a5bc00ad - std::panicking::default_hook::h8ed95b009f156527\n     6:     0x5577a5bc0823 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n     7:     0x5577a5bc06cb - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n     8:     0x5577a5bbf6e9 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n     9:     0x5577a5bc0437 - rust_begin_unwind\n    10:     0x5577a5bdc763 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n    11:     0x5577a5ba3e3e - build_script_build::main::hf548add4bf28e130\n    12:     0x5577a5ba1a63 - core::ops::function::FnOnce::call_once::h30a4eb2c5192a840\n    13:     0x5577a5ba2986 - std::sys_common::backtrace::__rust_begin_short_backtrace::hbb4310c1e393dbd2\n    14:     0x5577a5ba29d9 - std::rt::lang_start::{{closure}}::ha08f930eb4770f6f\n    15:     0x5577a5bba51d - std::rt::lang_start_internal::h3d73f751252cfec5\n    16:     0x5577a5ba29b7 - std::rt::lang_start::hef0551ed1e2642e5\n    17:     0x5577a5ba3f05 - main\n    18:     0x7f4523429d90 - <unknown>\n    19:     0x7f4523429e40 - __libc_start_main\n    20:     0x5577a5ba02c5 - _start\n    21:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 139,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-boot-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling generic-array v0.14.7\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n   Compiling cortex-m-rt v0.7.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot-stm32/target/debug/build/stm32-metapac-c8810315e31289ad/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 149,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 150,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 150,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 150,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 151,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 152,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 153,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 154,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 155,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 156,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: it looks like you're manually copying between slices\n  --> src/adapter/blocking_async.rs:93:9\n   |\n93 | /         for i in 0..core::cmp::min(read.len(), write.len()) {\n94 | |             read[i] = write[i].clone();\n95 | |         }\n   | |_________^ help: try replacing the loop by: `read[..core::cmp::min(read.len(), write.len())].copy_from_slice(&write[..core::cmp::min(read.len(), write.len())]);`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_memcpy\n   = note: `#[warn(clippy::manual_memcpy)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/adapter/blocking_async.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `u8` which implements the `Copy` trait\n  --> src/adapter/blocking_async.rs:94:23\n   |\n94 |             read[i] = write[i].clone();\n   |                       ^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `write[i]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n   = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:102:9\n    |\n102 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n    = note: `#[warn(clippy::let_unit_value)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/asynch/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/asynch/spi.rs:187:9\n    |\n187 |         let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/shared_bus/blocking/i2c.rs:69:20\n   |\n69 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n   |                    ^^                                                      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n   |\n69 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n69 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:78:6\n   |\n78 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Write for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:85:14\n   |\n85 |     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n   |              ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n85 -     fn write<'w>(&mut self, addr: u8, bytes: &'w [u8]) -> Result<(), Self::Error> {\n85 +     fn write(&mut self, addr: u8, bytes: &[u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> src/shared_bus/blocking/i2c.rs:91:6\n   |\n91 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::Read for I2cDevice<'_, M, BUS>\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'w\n  --> src/shared_bus/blocking/i2c.rs:98:13\n   |\n98 |     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n   |             ^^                               ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n   |\n98 -     fn read<'w>(&mut self, addr: u8, bytes: &'w mut [u8]) -> Result<(), Self::Error> {\n98 +     fn read(&mut self, addr: u8, bytes: &mut [u8]) -> Result<(), Self::Error> {\n   |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/shared_bus/blocking/i2c.rs:104:6\n    |\n104 | impl<'a, M, BUS, E> embedded_hal_02::blocking::i2c::WriteRead for I2cDevice<'_, M, BUS>\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/i2c.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/shared_bus/blocking/i2c.rs:180:20\n    |\n180 |     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n    |                    ^^                                                      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\nhelp: elide the lifetimes\n    |\n180 -     fn transaction<'a>(&mut self, address: u8, operations: &mut [Operation<'a>]) -> Result<(), Self::Error> {\n180 +     fn transaction(&mut self, address: u8, operations: &mut [Operation<'_>]) -> Result<(), Self::Error> {\n    |\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n  --> src/shared_bus/blocking/spi.rs:85:13\n   |\n85 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 157,
      "file": "src/shared_bus/blocking/spi.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this let-binding has unit value\n   --> src/shared_bus/blocking/spi.rs:161:13\n    |\n161 |             let op_res = op_res.map_err(SpiDeviceError::Spi)?;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: omit the `let` binding: `op_res.map_err(SpiDeviceError::Spi)?;`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_unit_value\n\n"
    },
    {
      "cmd_idx": 167,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-embedded-hal, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n    Checking nb v1.1.0\nerror: could not compile `nb` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 177,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 177,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 178,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 178,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 179,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/critical-section-1.1.3/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 180,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 180,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 181,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 181,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 182,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 182,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 183,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 183,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 184,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 184,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 185,
      "file": "src/raw/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/raw/mod.rs:194:9\n    |\n194 |         task.raw.state.spawn().then(|| Self { task })\n    |         ^^^^^^^^^^^^^^^^^^^^^^^----------------------\n    |                                |\n    |                                help: use `then_some(..)` instead: `then_some(Self { task })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 185,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: mutable borrow from immutable input(s)\n  --> src/lib.rs:81:60\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\nnote: immutable borrow here\n  --> src/lib.rs:81:21\n   |\n81 |         fn alloc<T>(&'static self, cs: CriticalSection) -> &'static mut MaybeUninit<T> {\n   |                     ^^^^^^^^^^^^^\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#mut_from_ref\n   = note: `#[deny(clippy::mut_from_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 195,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 196,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 197,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 198,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `critical-section` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 199,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 200,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 201,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded fnv v1.0.7\n  Downloaded strsim v0.11.1\n  Downloaded ident_case v1.0.1\n  Downloaded darling_macro v0.20.10\n  Downloaded darling_core v0.20.10\n  Downloaded darling v0.20.10\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling strsim v0.11.1\n   Compiling fnv v1.0.7\n   Compiling ident_case v1.0.1\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n   Compiling litrs v0.4.1\n    Checking critical-section v1.1.3\n   Compiling document-features v0.2.10\n   Compiling quote v1.0.37\n   Compiling syn v2.0.77\n   Compiling darling_core v0.20.10\n   Compiling darling_macro v0.20.10\n   Compiling darling v0.20.10\n   Compiling embassy-executor-macros v0.4.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor-macros)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 202,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\n    Checking critical-section v1.1.3\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 203,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-executor, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking critical-section v1.1.3\n   Compiling embassy-executor v0.5.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-executor)\nerror: could not compile `embassy-executor` (lib) due to 2 previous errors; 1 warning emitted\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 213,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 214,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 215,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 216,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 217,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 218,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 219,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 220,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:108:8\n    |\n108 |     if !f.sig.generics.where_clause.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n    = note: `#[warn(clippy::nonminimal_bool)]` on by default\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:111:8\n    |\n111 |     if !f.sig.abi.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n   --> src/macros/main.rs:114:8\n    |\n114 |     if !f.sig.variadic.is_none() {\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:31:8\n   |\n31 |     if !f.sig.generics.where_clause.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.generics.where_clause.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:34:8\n   |\n34 |     if !f.sig.abi.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.abi.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 221,
      "file": "src/macros/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this boolean expression can be simplified\n  --> src/macros/task.rs:37:8\n   |\n37 |     if !f.sig.variadic.is_none() {\n   |        ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `f.sig.variadic.is_some()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#nonminimal_bool\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 240,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 241,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 242,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 243,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 243,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 243,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 243,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 244,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 244,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 244,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 244,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 245,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 245,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 245,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 245,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 246,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 247,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/join.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is used to index `array`\n   --> src/join.rs:286:22\n    |\n286 |             for i in 0..N {\n    |                      ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator and enumerate()\n    |\n286 |             for (i, <item>) in array.iter_mut().enumerate().take(N) {\n    |                 ~~~~~~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 248,
      "file": "src/select.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/select.rs:250:21\n    |\n250 | pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n    |                     ^^                       ^^                           ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n250 - pub fn select_slice<'a, Fut: Future>(slice: &'a mut [Fut]) -> SelectSlice<'a, Fut> {\n250 + pub fn select_slice<Fut: Future>(slice: &mut [Fut]) -> SelectSlice<'_, Fut> {\n    |\n\n"
    },
    {
      "cmd_idx": 258,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-futures, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\nerror: could not compile `embassy-futures` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 268,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 269,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/num-traits-0.2.19/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 270,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 271,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 271,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 271,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 272,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 272,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 272,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 273,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 273,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 273,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 274,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 275,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/atomic_ring_buffer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you don't need to add `&` to all patterns\n   --> src/atomic_ring_buffer.rs:314:22\n    |\n314 |           self.pop(|f| match f {\n    |  ______________________^\n315 | |             &[] => 0,\n316 | |             &[x, ..] => {\n317 | |                 res = Some(x);\n318 | |                 1\n319 | |             }\n320 | |         });\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_ref_pats\n    = note: `#[warn(clippy::match_ref_pats)]` on by default\nhelp: instead of prefixing all patterns with `&`, you can dereference the expression\n    |\n314 ~         self.pop(|f| match *f {\n315 ~             [] => 0,\n316 ~             [x, ..] => {\n    |\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:158:6\n    |\n158 | impl<'b, T: DerefMut> Peripheral for T\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 276,
      "file": "src/peripheral.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/peripheral.rs:170:6\n    |\n170 | impl<'b, T: Peripheral> Peripheral for PeripheralRef<'_, T> {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 286,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-hal-internal, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling num-traits v0.2.19\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\nerror: could not compile `num-traits` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 296,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 297,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 298,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 299,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 300,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 301,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 302,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 303,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0432]: unresolved import `crate::iface`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n   |\n14 | use crate::iface::Context;\n   |            ^^^^^ could not find `iface` in the crate root\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `PhantomData`\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 304,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0004]: non-exhaustive patterns: type `&mut ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 314,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 315,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded embedded-nal-async v0.7.1\n  Downloaded managed v0.8.0\n  Downloaded no-std-net v0.6.0\n  Downloaded embedded-nal v0.8.0\n  Downloaded smoltcp v0.11.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking stable_deref_trait v1.2.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling litrs v0.4.1\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n   Compiling document-features v0.2.10\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\n"
    },
    {
      "cmd_idx": 316,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 317,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling pin-utils v0.1.0\n   Compiling cfg-if v1.0.0\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling void v1.0.2\n   Compiling smoltcp v0.11.0\n   Compiling document-features v0.2.10\n   Compiling embedded-hal v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling no-std-net v0.6.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 318,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 319,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking no-std-net v0.6.0\n    Checking embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal-async v0.7.1\n    Checking embedded-hal v0.2.7\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 320,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling futures-core v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling critical-section v1.1.3\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 321,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `nb` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 322,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-nal v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 323,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking futures-util v0.3.30\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 324,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling void v1.0.2\n   Compiling embedded-nal-async v0.7.1\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling bitflags v1.3.2\n   Compiling managed v0.8.0\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 325,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 326,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking cfg-if v1.0.0\n    Checking futures-core v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking futures-util v0.3.30\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking nb v0.1.3\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking critical-section v1.1.3\n   Compiling smoltcp v0.11.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 327,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking no-std-net v0.6.0\n    Checking critical-section v1.1.3\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 328,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling no-std-net v0.6.0\n   Compiling embedded-nal v0.8.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 329,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n    Checking no-std-net v0.6.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking embedded-hal v0.2.7\n   Compiling smoltcp v0.11.0\n    Checking embedded-nal v0.8.0\n   Compiling embedded-nal-async v0.7.1\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 330,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling no-std-net v0.6.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-nal v0.8.0\n   Compiling smoltcp v0.11.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-nal-async v0.7.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling managed v0.8.0\n   Compiling bitflags v1.3.2\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:99:1\n   |\n99 | compile_error!(\"You must enable at least one of the following features: proto-ipv4, proto-ipv6, proto-sixlowpan\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:112:1\n    |\n112 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: socket-raw, socket-udp, socket-tcp, socket-icmp, socket-dhcpv4, socket-dns...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:122:1\n    |\n122 | compile_error!(\"If you enable the socket feature, you must enable at least one of the following features: medium-ip, medium-ethernet, medium-ieee802154...\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved import `crate::iface`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:14:12\n    |\n14  | use crate::iface::Context;\n    |            ^^^^^ could not find `iface` in the crate root\n    |\nnote: found an item that was configured out\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/lib.rs:163:9\n    |\n163 | pub mod iface;\n    |         ^^^^^\n\nerror[E0392]: lifetime parameter `'a` is never used\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/socket/mod.rs:59:17\n   |\n59 | pub enum Socket<'a> {\n   |                 ^^ unused lifetime parameter\n   |\n   = help: consider removing `'a`, referring to it in a field, or using a marker such as `core::marker::PhantomData`\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:113:15\n    |\n113 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n113 ~         match self {\n114 +             _ => todo!(),\n115 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:123:15\n    |\n123 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n123 ~         match self {\n124 +             _ => todo!(),\n125 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:133:15\n    |\n133 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n133 ~         match self {\n134 +             _ => todo!(),\n135 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:143:15\n    |\n143 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n143 ~         match self {\n144 +             _ => todo!(),\n145 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:153:15\n    |\n153 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n153 ~         match self {\n154 +             _ => todo!(),\n155 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&wire::ip::Address` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:163:15\n    |\n163 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Address` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:88:10\n    |\n88  | pub enum Address {\n    |          ^^^^^^^\n    = note: the matched value is of type `&wire::ip::Address`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n163 ~         match self {\n164 +             _ => todo!(),\n165 +         }\n    |\n\nerror[E0004]: non-exhaustive patterns: type `&mut wire::ip::Repr` is non-empty\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:654:15\n    |\n654 |         match self {\n    |               ^^^^\n    |\nnote: `wire::ip::Repr` defined here\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/smoltcp-0.11.0/src/wire/ip.rs:546:10\n    |\n546 | pub enum Repr {\n    |          ^^^^\n    = note: the matched value is of type `&mut wire::ip::Repr`\n    = note: references are always considered inhabited\nhelp: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern as shown\n    |\n654 ~         match self {\n655 +             _ => todo!(),\n656 +         }\n    |\n\nSome errors have detailed explanations: E0004, E0392, E0432.\nFor more information about an error, try `rustc --explain E0004`.\nerror: could not compile `smoltcp` (lib) due to 12 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 331,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking cfg-if v1.0.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking critical-section v1.1.3\n    Checking void v1.0.2\n    Checking no-std-net v0.6.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-nal v0.8.0\n    Checking embedded-hal v0.2.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-nal-async v0.7.1\n   Compiling smoltcp v0.11.0\n    Checking managed v0.8.0\n    Checking bitflags v1.3.2\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `smoltcp` (lib) due to 13 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 341,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 342,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-utils-0.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 343,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 344,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 345,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 346,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 347,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 348,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `IDVER` contains a capitalized acronym\n  --> src/regs.rs:13:5\n   |\n13 |     IDVER = 0x00,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Idver`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHYID` contains a capitalized acronym\n  --> src/regs.rs:14:5\n   |\n14 |     PHYID = 0x01,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phyid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `CAPABILITY` contains a capitalized acronym\n  --> src/regs.rs:15:5\n   |\n15 |     CAPABILITY = 0x02,\n   |     ^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Capability`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/regs.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RESET` contains a capitalized acronym\n  --> src/regs.rs:16:5\n   |\n16 |     RESET = 0x03,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Reset`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n   --> src/lib.rs:105:5\n    |\n105 | /     pub const fn new() -> Self {\n106 | |         Self {\n107 | |             ch_state: ch::State::new(),\n108 | |         }\n109 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n102 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n103 +     fn default() -> Self {\n104 +         Self::new()\n105 +     }\n106 + }\n    |\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this loop never actually loops\n   --> src/lib.rs:454:9\n    |\n454 | /         loop {\n455 | |             let (state_chan, mut rx_chan, mut tx_chan) = self.ch.split();\n456 | |\n457 | |             loop {\n...   |\n592 | |             }\n593 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n    = note: `#[deny(clippy::never_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 349,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this match arm has an identical body to another arm\n   --> src/lib.rs:480:41\n    |\n480 |   ...                   AdinError::PACKET_TOO_SMALL => {\n    |                         ^--------------------------\n    |                         |\n    |  _______________________help: try merging the arm patterns: `AdinError::PACKET_TOO_SMALL | AdinError::PACKET_TOO_BIG`\n    | |\n481 | | ...                       error!(\"RX Packet too small, DROP\");\n482 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n483 | | ...                   }\n    | |_______________________^\n    |\n    = help: or try changing either arm body\nnote: other arm here\n   --> src/lib.rs:476:41\n    |\n476 | / ...                   AdinError::PACKET_TOO_BIG => {\n477 | | ...                       error!(\"RX Packet too big, DROP\");\n478 | | ...                       self.mac.write_reg(sr::FIFO_CLR, 1).await.unwrap();\n479 | | ...                   }\n    | |_______________________^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_same_arms\nnote: the lint level is defined here\n   --> src/lib.rs:2:9\n    |\n2   | #![deny(clippy::pedantic)]\n    |         ^^^^^^^^^^^^^^^^\n    = note: `#[deny(clippy::match_same_arms)]` implied by `#[deny(clippy::pedantic)]`\n\n"
    },
    {
      "cmd_idx": 359,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 360,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 361,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking nb v1.1.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling embedded-hal-bus v0.1.0\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 362,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\nerror: could not compile `pin-utils` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `futures-core` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 363,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking nb v1.1.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 364,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v1.1.0\n    Checking futures-util v0.3.30\n    Checking embedded-hal v1.0.0\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 365,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded embedded-hal-bus v0.1.0\n  Downloaded bitfield v0.14.0\n   Compiling heapless v0.8.0\n    Checking byteorder v1.5.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n    Checking critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n    Checking futures-util v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-io v0.6.1\n    Checking nb v1.1.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n    Checking cfg-if v1.0.0\n    Checking nb v0.1.3\n   Compiling embedded-hal-bus v0.1.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n   Compiling document-features v0.2.10\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 366,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking nb v1.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n   Compiling embedded-hal-bus v0.1.0\n    Checking embedded-hal v0.2.7\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 367,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-adin1110, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-io v0.6.1\n    Checking nb v1.1.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling embedded-hal-bus v0.1.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking bitfield v0.14.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-net-adin1110 v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-adin1110)\nerror: could not compile `embassy-net-adin1110` (lib) due to 3 previous errors; 5 warnings emitted\n"
    },
    {
      "cmd_idx": 377,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 378,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 379,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 380,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 381,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 382,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 383,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 384,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 385,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:203:1\n    |\n203 | / impl Default for Checksum {\n204 | |     fn default() -> Checksum {\n205 | |         Checksum::Both\n206 | |     }\n207 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it...\n    |\n192 + #[derive(Default)]\n193 | pub enum Checksum {\n    |\nhelp: ...and mark the default variant\n    |\n194 ~     #[default]\n195 ~     Both,\n    |\n\n"
    },
    {
      "cmd_idx": 395,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\nerror: could not compile `embassy-net-driver` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 405,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 405,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 406,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 406,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 406,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-task-0.3.30/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 407,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 407,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 408,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 408,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 409,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 409,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 410,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 410,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 411,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 411,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 412,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 412,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 413,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             rx: [Self::NEW_PACKET; N_RX],\n35 | |             tx: [Self::NEW_PACKET; N_TX],\n36 | |             inner: MaybeUninit::uninit(),\n37 | |         }\n38 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 413,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `PacketBuf<MTU>`\n   --> src/lib.rs:313:5\n    |\n313 | /     pub const fn new() -> Self {\n314 | |         Self { len: 0, buf: [0; MTU] }\n315 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n311 + impl<const MTU: usize> Default for PacketBuf<MTU> {\n312 +     fn default() -> Self {\n313 +         Self::new()\n314 +     }\n315 + }\n    |\n\n"
    },
    {
      "cmd_idx": 423,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-driver-channel, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `futures-task` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 433,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 434,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-task-0.3.30/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 435,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 436,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 437,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 438,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 439,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 440,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTL` contains a capitalized acronym\n --> src/bank0.rs:4:5\n  |\n4 |     ERDPTL = 0x00,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n  = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERDPTH` contains a capitalized acronym\n --> src/bank0.rs:5:5\n  |\n5 |     ERDPTH = 0x01,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erdpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTL` contains a capitalized acronym\n --> src/bank0.rs:6:5\n  |\n6 |     EWRPTL = 0x02,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrptl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EWRPTH` contains a capitalized acronym\n --> src/bank0.rs:7:5\n  |\n7 |     EWRPTH = 0x03,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ewrpth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTL` contains a capitalized acronym\n --> src/bank0.rs:8:5\n  |\n8 |     ETXSTL = 0x04,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxstl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXSTH` contains a capitalized acronym\n --> src/bank0.rs:9:5\n  |\n9 |     ETXSTH = 0x05,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxsth`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDL` contains a capitalized acronym\n  --> src/bank0.rs:10:5\n   |\n10 |     ETXNDL = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXNDH` contains a capitalized acronym\n  --> src/bank0.rs:11:5\n   |\n11 |     ETXNDH = 0x07,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTL` contains a capitalized acronym\n  --> src/bank0.rs:12:5\n   |\n12 |     ERXSTL = 0x08,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXSTH` contains a capitalized acronym\n  --> src/bank0.rs:13:5\n   |\n13 |     ERXSTH = 0x09,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDL` contains a capitalized acronym\n  --> src/bank0.rs:14:5\n   |\n14 |     ERXNDL = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXNDH` contains a capitalized acronym\n  --> src/bank0.rs:15:5\n   |\n15 |     ERXNDH = 0x0b,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxndh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTL` contains a capitalized acronym\n  --> src/bank0.rs:16:5\n   |\n16 |     ERXRDPTL = 0x0c,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXRDPTH` contains a capitalized acronym\n  --> src/bank0.rs:17:5\n   |\n17 |     ERXRDPTH = 0x0d,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxrdpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTL` contains a capitalized acronym\n  --> src/bank0.rs:18:5\n   |\n18 |     ERXWRPTL = 0x0e,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrptl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXWRPTH` contains a capitalized acronym\n  --> src/bank0.rs:19:5\n   |\n19 |     ERXWRPTH = 0x0f,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxwrpth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTL` contains a capitalized acronym\n  --> src/bank0.rs:20:5\n   |\n20 |     EDMASTL = 0x10,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmastl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMASTH` contains a capitalized acronym\n  --> src/bank0.rs:21:5\n   |\n21 |     EDMASTH = 0x11,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmasth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDL` contains a capitalized acronym\n  --> src/bank0.rs:22:5\n   |\n22 |     EDMANDL = 0x12,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMANDH` contains a capitalized acronym\n  --> src/bank0.rs:23:5\n   |\n23 |     EDMANDH = 0x13,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmandh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTL` contains a capitalized acronym\n  --> src/bank0.rs:24:5\n   |\n24 |     EDMADSTL = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadstl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMADSTH` contains a capitalized acronym\n  --> src/bank0.rs:25:5\n   |\n25 |     EDMADSTH = 0x15,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmadsth`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSL` contains a capitalized acronym\n  --> src/bank0.rs:26:5\n   |\n26 |     EDMACSL = 0x16,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDMACSH` contains a capitalized acronym\n  --> src/bank0.rs:27:5\n   |\n27 |     EDMACSH = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edmacsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank0.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank0.rs:65:1\n   |\n65 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n   = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<bank0::Register>`\n   |\n65 ~ impl From<Register> for super::Register {\n66 ~     fn from(val: Register) -> Self {\n67 ~         super::Register::Bank0(val)\n   |\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSL` contains a capitalized acronym\n  --> src/bank1.rs:20:5\n   |\n20 |     EPMCSL = 0x10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMCSH` contains a capitalized acronym\n  --> src/bank1.rs:21:5\n   |\n21 |     EPMCSH = 0x11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOL` contains a capitalized acronym\n  --> src/bank1.rs:22:5\n   |\n22 |     EPMOL = 0x14,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmol`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPMOH` contains a capitalized acronym\n  --> src/bank1.rs:23:5\n   |\n23 |     EPMOH = 0x15,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epmoh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:24:5\n   |\n24 |     ERXFCON = 0x18,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPKTCNT` contains a capitalized acronym\n  --> src/bank1.rs:25:5\n   |\n25 |     EPKTCNT = 0x19,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epktcnt`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank1.rs:61:1\n   |\n61 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank1::Register>`\n   |\n61 ~ impl From<Register> for super::Register {\n62 ~     fn from(val: Register) -> Self {\n63 ~         super::Register::Bank1(val)\n   |\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERXFCON` contains a capitalized acronym\n  --> src/bank1.rs:67:11\n   |\n67 | register!(ERXFCON, 0b1010_0001, u8, {\n   |           ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erxfcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MABBIPG` contains a capitalized acronym\n --> src/bank2.rs:7:5\n  |\n7 |     MABBIPG = 0x04,\n  |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mabbipg`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGL` contains a capitalized acronym\n --> src/bank2.rs:8:5\n  |\n8 |     MAIPGL = 0x06,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgl`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAIPGH` contains a capitalized acronym\n --> src/bank2.rs:9:5\n  |\n9 |     MAIPGH = 0x07,\n  |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Maipgh`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLL` contains a capitalized acronym\n  --> src/bank2.rs:12:5\n   |\n12 |     MAMXFLL = 0x0a,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxfll`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MAMXFLH` contains a capitalized acronym\n  --> src/bank2.rs:13:5\n   |\n13 |     MAMXFLH = 0x0b,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mamxflh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:14:5\n   |\n14 |     MICMD = 0x12,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIREGADR` contains a capitalized acronym\n  --> src/bank2.rs:15:5\n   |\n15 |     MIREGADR = 0x14,\n   |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miregadr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRL` contains a capitalized acronym\n  --> src/bank2.rs:16:5\n   |\n16 |     MIWRL = 0x16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIWRH` contains a capitalized acronym\n  --> src/bank2.rs:17:5\n   |\n17 |     MIWRH = 0x17,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Miwrh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDL` contains a capitalized acronym\n  --> src/bank2.rs:18:5\n   |\n18 |     MIRDL = 0x18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MIRDH` contains a capitalized acronym\n  --> src/bank2.rs:19:5\n   |\n19 |     MIRDH = 0x19,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mirdh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank2.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank2::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank2(val)\n   |\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank2.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MICMD` contains a capitalized acronym\n  --> src/bank2.rs:81:11\n   |\n81 | register!(MICMD, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Micmd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTSD` contains a capitalized acronym\n  --> src/bank3.rs:10:5\n   |\n10 |     EBSTSD = 0x06,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstsd`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCON` contains a capitalized acronym\n  --> src/bank3.rs:11:5\n   |\n11 |     EBSTCON = 0x07,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSL` contains a capitalized acronym\n  --> src/bank3.rs:12:5\n   |\n12 |     EBSTCSL = 0x08,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBSTCSH` contains a capitalized acronym\n  --> src/bank3.rs:13:5\n   |\n13 |     EBSTCSH = 0x09,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebstcsh`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MISTAT` contains a capitalized acronym\n  --> src/bank3.rs:14:5\n   |\n14 |     MISTAT = 0x0a,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Mistat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EREVID` contains a capitalized acronym\n  --> src/bank3.rs:15:5\n   |\n15 |     EREVID = 0x12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erevid`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECOCON` contains a capitalized acronym\n  --> src/bank3.rs:16:5\n   |\n16 |     ECOCON = 0x15,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ecocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFLOCON` contains a capitalized acronym\n  --> src/bank3.rs:17:5\n   |\n17 |     EFLOCON = 0x17,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eflocon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSL` contains a capitalized acronym\n  --> src/bank3.rs:18:5\n   |\n18 |     EPAUSL = 0x18,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epausl`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPAUSH` contains a capitalized acronym\n  --> src/bank3.rs:19:5\n   |\n19 |     EPAUSH = 0x19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epaush`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/bank3.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/bank3.rs:49:1\n   |\n49 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<bank3::Register>`\n   |\n49 ~ impl From<Register> for super::Register {\n50 ~     fn from(val: Register) -> Self {\n51 ~         super::Register::Bank3(val)\n   |\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n --> src/common.rs:6:5\n  |\n6 |     EIE = 0x1b,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n --> src/common.rs:7:5\n  |\n7 |     EIR = 0x1c,\n  |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n --> src/common.rs:8:5\n  |\n8 |     ESTAT = 0x1d,\n  |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n  |\n  = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n  --> src/common.rs:27:1\n   |\n27 | impl Into<super::Register> for Register {\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<common::Register>`\n   |\n27 ~ impl From<Register> for super::Register {\n28 ~     fn from(val: Register) -> Self {\n29 ~         super::Register::Common(val)\n   |\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIE` contains a capitalized acronym\n  --> src/common.rs:33:11\n   |\n33 | register!(EIE, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIR` contains a capitalized acronym\n  --> src/common.rs:50:11\n   |\n50 | register!(EIR, 0, u8, {\n   |           ^^^ help: consider making the acronym lowercase, except the initial letter: `Eir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/common.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESTAT` contains a capitalized acronym\n  --> src/common.rs:65:11\n   |\n65 | register!(ESTAT, 0, u8, {\n   |           ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Estat`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIE` contains a capitalized acronym\n  --> src/phy.rs:10:5\n   |\n10 |     PHIE = 0x12,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phie`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHIR` contains a capitalized acronym\n  --> src/phy.rs:11:5\n   |\n11 |     PHIR = 0x13,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Phir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/phy.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `PHLCON` contains a capitalized acronym\n  --> src/phy.rs:12:5\n   |\n12 |     PHLCON = 0x14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Phlcon`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `write_buffer_memory` doesn't need a mutable reference\n   --> src/lib.rs:160:46\n    |\n160 |         self.write_buffer_memory(Some(TXST), &mut [0]);\n    |                                              ^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `!RangeInclusive::contains` implementation\n   --> src/lib.rs:222:12\n    |\n222 |         if len_with_crc < CRC_SZ || len_with_crc > 1600 || next_packet > RXND {\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `!(CRC_SZ..=1600).contains(&len_with_crc)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RCR` contains a capitalized acronym\n   --> src/lib.rs:556:5\n    |\n556 |     RCR = 0b000_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RBM` contains a capitalized acronym\n   --> src/lib.rs:558:5\n    |\n558 |     RBM = 0b001_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WCR` contains a capitalized acronym\n   --> src/lib.rs:560:5\n    |\n560 |     WCR = 0b010_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wcr`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `WBM` contains a capitalized acronym\n   --> src/lib.rs:562:5\n    |\n562 |     WBM = 0b011_11010,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Wbm`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFS` contains a capitalized acronym\n   --> src/lib.rs:564:5\n    |\n564 |     BFS = 0b100_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfs`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `BFC` contains a capitalized acronym\n   --> src/lib.rs:566:5\n    |\n566 |     BFC = 0b101_00000,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Bfc`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 441,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SRC` contains a capitalized acronym\n   --> src/lib.rs:568:5\n    |\n568 |     SRC = 0b111_11111,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Src`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 451,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-enc28j60, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-enc28j60\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking byteorder v1.5.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling heapless v0.8.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking futures-task v0.3.30\nerror: could not compile `nb` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `futures-task` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 461,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 462,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 463,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 464,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 465,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 466,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 467,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1032 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1552 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1560 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 468,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/proto.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: large size difference between variants\n   --> src/proto.rs:393:1\n    |\n393 | / pub(crate) enum CtrlMsgPayload {\n394 | |     /// * Requests *\n395 | |     #[noproto(tag = \"101\")]\n396 | |     ReqGetMacAddress(CtrlMsgReqGetMacAddress),\n...   |\n428 | |     ReqOtaWrite(CtrlMsgReqOtaWrite),\n    | |     ------------------------------- the second-largest variant contains at least 1028 bytes\n...   |\n447 | |     RespScanApList(CtrlMsgRespScanResult),\n    | |     ------------------------------------- the largest variant contains at least 1356 bytes\n...   |\n488 | |     EventStationDisconnectFromEspSoftAp(CtrlMsgEventStationDisconnectFromEspSoftAp),\n489 | | }\n    | |_^ the entire enum is at least 1360 bytes\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#large_enum_variant\n    = note: `#[warn(clippy::large_enum_variant)]` on by default\nhelp: consider boxing the large fields to reduce the total size of the enum\n    |\n447 |     RespScanApList(Box<CtrlMsgRespScanResult>),\n    |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/control.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual backwards iteration\n   --> src/control.rs:227:20\n    |\n227 |     while s.chars().rev().next() == Some(0 as char) {\n    |                    ^^^^^^^^^^^^^ help: use: `.next_back()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_next_back\n    = note: `#[warn(clippy::manual_next_back)]` on by default\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n  --> src/lib.rs:34:29\n   |\n34 |             pub fn to_bytes(&self) -> [u8; Self::SIZE] {\n   |                             ^^^^^\n...\n86 | impl_bytes!(PayloadHeader);\n   | -------------------------- in this macro invocation\n   |\n   = help: consider choosing a less ambiguous name\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n   = note: `#[warn(clippy::wrong_self_convention)]` on by default\n   = note: this warning originates in the macro `impl_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State`\n   --> src/lib.rs:110:5\n    |\n110 | /     pub fn new() -> Self {\n111 | |         Self {\n112 | |             shared: Shared::new(),\n113 | |             ch: ch::State::new(),\n114 | |         }\n115 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n108 + impl Default for State {\n109 +     fn default() -> Self {\n110 +         Self::new()\n111 +     }\n112 + }\n    |\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 469,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:125:18\n    |\n125 | pub async fn new<'a, SPI, IN, OUT>(\n    |                  ^^\n126 |     state: &'a mut State,\n    |             ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 479,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-esp-hosted, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-esp-hosted\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 489,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 490,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 491,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 492,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 493,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 494,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 495,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 496,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:30:5\n   |\n30 | /     pub const fn new() -> Self {\n31 | |         Self {\n32 | |             ch_state: ch::State::new(),\n33 | |         }\n34 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n28 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n29 +     fn default() -> Self {\n30 +         Self::new()\n31 +     }\n32 + }\n   |\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> src/lib.rs:94:40\n   |\n94 |                         Ok(rx_data) if rx_data.len() == 0 => return Err(RunError::Eof),\n   |                                        ^^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `rx_data.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n   = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 497,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n   --> src/lib.rs:155:12\n    |\n155 | pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n    |            ^^                                                ^^                                   ^^          ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n    = note: `#[warn(clippy::needless_lifetimes)]` on by default\nhelp: elide the lifetimes\n    |\n155 - pub fn new<'a, const N_RX: usize, const N_TX: usize>(state: &'a mut State<N_RX, N_TX>) -> (Device<'a>, Runner<'a>) {\n155 + pub fn new<const N_RX: usize, const N_TX: usize>(state: &mut State<N_RX, N_TX>) -> (Device<'_>, Runner<'_>) {\n    |\n\n"
    },
    {
      "cmd_idx": 507,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-ppp, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-ppp\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `futures-core` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 517,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 518,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 519,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/crossbeam-utils-0.8.20/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 519,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libc-0.2.158/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 520,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 522,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 523,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\n"
    },
    {
      "cmd_idx": 524,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 525,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/io-lifetimes-1.0.11/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n\n"
    },
    {
      "cmd_idx": 531,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:52:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:52:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 533,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:52:22Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:52:22Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:52:24Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::push_or_else\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:179:25: 179:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:195:25: 195:70 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"concurrent_queue::bounded::Bounded::<T>::pop\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:232:25: 232:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/concurrent-queue-2.5.0/src/bounded.rs:258:25: 259:87 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:52:24Z WARN  lockbud::callbacks] crate async_io contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 535,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling cfg-if v1.0.0\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling instant v0.1.13\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n   Compiling fastrand v1.9.0\n   Compiling async-io v1.13.0\n   Compiling parking v2.2.1\n   Compiling pin-project-lite v0.2.14\n   Compiling waker-fn v1.2.0\n   Compiling log v0.4.22\n   Compiling memchr v2.7.4\n   Compiling futures-io v0.3.30\n[2024-09-13T21:52:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:52:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling event-listener v2.5.3\n   Compiling errno v0.3.9\n   Compiling bitflags v1.3.2\nerror[E0583]: file not found for module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:26:1\n   |\n26 | mod sys;\n   | ^^^^^^^^\n   |\n   = help: to create the module `sys`, create file \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys.rs\" or \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/sys/mod.rs\"\n   = note: if there is a `mod sys` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:47:14\n   |\n47 |         sys::with_description(*self, |desc| {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `with_description` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:58:14\n   |\n58 |         sys::with_description(*self, |desc| match desc {\n   |              ^^^^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find value `STRERROR_NAME` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:64:22\n   |\n64 |                 sys::STRERROR_NAME,\n   |                      ^^^^^^^^^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `errno` in module `sys`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:95:10\n   |\n95 |     sys::errno()\n   |          ^^^^^ not found in `sys`\n\nerror[E0425]: cannot find function `set_errno` in module `sys`\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/errno-0.3.9/src/lib.rs:100:10\n    |\n100 |     sys::set_errno(err)\n    |          ^^^^^^^^^ not found in `sys`\n\nSome errors have detailed explanations: E0425, E0583.\nFor more information about an error, try `rustc --explain E0425`.\n   Compiling futures-core v0.3.30\nerror: could not compile `errno` (lib) due to 6 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 536,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling libc v0.2.158\n   Compiling polling v2.8.0\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling slab v0.4.9\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv6m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 537,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling slab v0.4.9\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling async-io v1.13.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 538,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 539,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling autocfg v1.3.0\n   Compiling libc v0.2.158\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `riscv32imac-unknown-none-elf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 540,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7em-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 541,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\nerror: could not compile `crossbeam-utils` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `libc` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 542,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv7m-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 543,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n Downloading crates ...\n  Downloaded instant v0.1.13\n    Checking cfg-if v1.0.0\n   Compiling libc v0.2.158\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n    Checking instant v0.1.13\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\n    Checking fastrand v1.9.0\n    Checking waker-fn v1.2.0\n    Checking futures-core v0.3.30\n    Checking memchr v2.7.4\n    Checking futures-io v0.3.30\n    Checking bitflags v1.3.2\n    Checking pin-project-lite v0.2.14\n    Checking parking v2.2.1\n    Checking event-listener v2.5.3\n    Checking log v0.4.22\n    Checking errno v0.3.9\n    Checking async-lock v2.8.0\nerror: could not compile `errno` (lib) due to 7 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 544,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabihf` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 545,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded errno v0.3.9\n  Downloaded async-io v1.13.0\n  Downloaded waker-fn v1.2.0\n  Downloaded concurrent-queue v2.5.0\n  Downloaded parking v2.2.1\n  Downloaded fastrand v1.9.0\n  Downloaded event-listener v2.5.3\n  Downloaded async-lock v2.8.0\n  Downloaded socket2 v0.4.10\n  Downloaded polling v2.8.0\n  Downloaded io-lifetimes v1.0.11\n  Downloaded futures-lite v1.13.0\n  Downloaded rustix v0.37.27\n  Downloaded linux-raw-sys v0.3.8\n   Compiling autocfg v1.3.0\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 546,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 547,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 548,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 549,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling libc v0.2.158\n   Compiling io-lifetimes v1.0.11\n   Compiling crossbeam-utils v0.8.20\n   Compiling rustix v0.37.27\n   Compiling polling v2.8.0\n   Compiling slab v0.4.9\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not support the standard library\n  = note: `std` is required by `io_lifetimes` because it does not declare `#![no_std]`\n  = help: consider building the standard library from source with `cargo build -Zbuild-std`\n\nFor more information about this error, try `rustc --explain E0463`.\nerror: could not compile `io-lifetimes` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 550,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-tuntap, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-tuntap\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling libc v0.2.158\n   Compiling crossbeam-utils v0.8.20\n   Compiling io-lifetimes v1.0.11\n   Compiling rustix v0.37.27\n   Compiling slab v0.4.9\n   Compiling polling v2.8.0\nerror: could not compile `io-lifetimes` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 560,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-utils-0.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 561,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 562,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 563,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 564,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 565,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 566,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 567,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/chip/w5500.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> src/chip/w5500.rs:69:30\n   |\n69 |             Operation::Write(&data_phase),\n   |                              ^^^^^^^^^^^ help: change this to: `data_phase`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n   = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/chip/w5100s.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n  --> src/chip/w5100s.rs:19:40\n   |\n19 |     const SOCKET_MODE: Self::Address = SOCKET_BASE + 0x00;\n   |                                        ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `SOCKET_BASE`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n   = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<N_RX, N_TX>`\n  --> src/lib.rs:32:5\n   |\n32 | /     pub const fn new() -> Self {\n33 | |         Self {\n34 | |             ch_state: ch::State::new(),\n35 | |         }\n36 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n30 + impl<const N_RX: usize, const N_TX: usize> Default for State<N_RX, N_TX> {\n31 +     fn default() -> Self {\n32 +         Self::new()\n33 +     }\n34 + }\n   |\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: in a `match` scrutinee, avoid complex blocks or closures with blocks; instead, move the block or closure higher and bind it with a `let`\n  --> src/lib.rs:57:23\n   |\n57 |                   async {\n   |  _______________________^\n58 | |                     self.int.wait_for_low().await.ok();\n59 | |                     rx_chan.rx_buf().await\n60 | |                 },\n   | |_________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#blocks_in_conditions\n   = note: `#[warn(clippy::blocks_in_conditions)]` on by default\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 568,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the following explicit lifetimes could be elided: 'a\n  --> src/lib.rs:92:18\n   |\n92 | pub async fn new<'a, const N_RX: usize, const N_TX: usize, C: Chip, SPI: SpiDevice, INT: Wait, RST: OutputPin>(\n   |                  ^^\n93 |     mac_addr: [u8; 6],\n94 |     state: &'a mut State<N_RX, N_TX>,\n   |             ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_lifetimes\n   = note: `#[warn(clippy::needless_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 578,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-net-wiznet, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-wiznet\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\nerror: could not compile `pin-utils` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 606,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling fixed v1.28.0\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 607,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 608,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 609,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling proc-macro2 v1.0.86\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling semver v0.9.0\n   Compiling unicode-ident v1.0.13\n   Compiling rustc_version v0.2.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-task v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling pin-utils v0.1.0\n   Compiling syn v1.0.109\n   Compiling autocfg v1.3.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-core v0.3.30\n   Compiling litrs v0.4.1\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling num-traits v0.2.19\n   Compiling futures-util v0.3.30\n   Compiling quote v1.0.37\n   Compiling document-features v0.2.10\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling embedded-storage v0.3.1\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling bitfield v0.13.2\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embedded-storage-async v0.4.1\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 610,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 611,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling cortex-m v0.7.7\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 612,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling cortex-m v0.7.7\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bare-metal v0.2.5\n   Compiling futures-util v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling fixed v1.28.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\n"
    },
    {
      "cmd_idx": 613,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling byteorder v1.5.0\n   Compiling void v1.0.2\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling futures-util v0.3.30\n   Compiling cortex-m v0.7.7\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling typenum v1.17.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling az v1.2.1\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling fixed v1.28.0\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling rand_core v0.6.4\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 614,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling cortex-m v0.7.7\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling az v1.2.1\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n   Compiling bitfield v0.13.2\n   Compiling embedded-storage v0.3.1\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling cortex-m-rt v0.7.3\n   Compiling fixed v1.28.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling bytemuck v1.18.0\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling bitflags v2.6.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\n   Compiling embassy-nrf v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf)\nerror[E0583]: file not found for module `_version`\n  --> src/ppi/mod.rs:27:1\n   |\n27 | mod _version;\n   | ^^^^^^^^^^^^^\n   |\n   = help: to create the module `_version`, create file \"src/ppi/_version.rs\" or \"src/ppi/_version/mod.rs\"\n   = note: if there is a `mod _version` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror[E0583]: file not found for module `chip`\n   --> src/lib.rs:117:1\n    |\n117 | mod chip;\n    | ^^^^^^^^^\n    |\n    = help: to create the module `chip`, create file \"src/chip.rs\" or \"src/chip/mod.rs\"\n    = note: if there is a `mod chip` elsewhere in the crate already, import it with `use crate::...` instead\n\nerror: No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840\n  --> src/lib.rs:28:1\n   |\n28 | compile_error!(\"No chip feature activated. You must activate exactly one of the following features: nrf52810, nrf52811, nrf52832, nrf52833, nrf52840...\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spim.rs:19:19\n   |\n19 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/spis.rs:15:19\n   |\n15 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twim.rs:17:19\n   |\n17 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::spim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::spim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/twis.rs:16:19\n   |\n16 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved imports `crate::chip::EASY_DMA_SIZE`, `crate::chip::FORCE_COPY_BUFFER_SIZE`\n  --> src/uarte.rs:28:19\n   |\n28 | use crate::chip::{EASY_DMA_SIZE, FORCE_COPY_BUFFER_SIZE};\n   |                   ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^ no `FORCE_COPY_BUFFER_SIZE` in `chip`\n   |                   |\n   |                   no `EASY_DMA_SIZE` in `chip`\n   |\n   = note: unresolved item `crate::twim::eh02::EASY_DMA_SIZE` exists but is inaccessible\n   = note: unresolved item `crate::twim::eh02::FORCE_COPY_BUFFER_SIZE` exists but is inaccessible\n\nerror[E0432]: unresolved import `chip::pac`\n   --> src/lib.rs:174:16\n    |\n174 | pub(crate) use chip::pac;\n    |                ^^^^^^^^^ no `pac` in `chip`\n\nerror[E0432]: unresolved imports `chip::peripherals`, `chip::Peripherals`, `chip::EASY_DMA_SIZE`\n   --> src/lib.rs:175:16\n    |\n175 | pub use chip::{peripherals, Peripherals, EASY_DMA_SIZE};\n    |                ^^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^^ no `EASY_DMA_SIZE` in `chip`\n    |                |            |\n    |                |            no `Peripherals` in `chip`\n    |                no `peripherals` in `chip`\n    |\n    = help: consider importing this struct instead:\n            cortex_m::Peripherals\n    = note: unresolved item `crate::uarte::eh02::EASY_DMA_SIZE` exists but is inaccessible\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/buffered_uarte.rs:21:9\n   |\n21 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n --> src/radio/ble.rs:9:9\n  |\n9 | pub use pac::radio::mode::MODE_A as Mode;\n  |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/ble.rs:11:5\n   |\n11 | use pac::radio::pcnf0::PLEN_A as PreambleLength;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:23:5\n   |\n23 | use pac::radio::state::STATE_A as RadioState;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/radio/mod.rs:24:9\n   |\n24 | pub use pac::radio::txpower::TXPOWER_A as TxPower;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `crate::chip::interrupt`\n   --> src/lib.rs:178:9\n    |\n178 | pub use crate::chip::interrupt;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ no `interrupt` in `chip`\n    |\nhelp: consider importing one of these items instead\n    |\n178 | pub use cortex_m::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~\n178 | pub use embassy_hal_internal::interrupt;\n    |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:16:9\n   |\n16 | pub use pac::spim0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spim.rs:17:9\n   |\n17 | pub use pac::spim0::frequency::FREQUENCY_A as Frequency;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/spis.rs:13:9\n   |\n13 | pub use pac::spis0::config::ORDER_A as BitOrder;\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:24:5\n   |\n24 | use pac::uarte0::RegisterBlock;\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `pac`\n  --> src/uarte.rs:26:9\n   |\n26 | pub use pac::uarte0::{baudrate::BAUDRATE_A as Baudrate, config::PARITY_A as Parity};\n   |         ^^^ use of undeclared crate or module `pac`\n\nerror[E0432]: unresolved import `pac`\n  --> src/saadc.rs:12:5\n   |\n12 | use pac::{saadc, SAADC};\n   |     ^^^ use of undeclared crate or module `pac`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:123:26\n    |\n123 |                     ppi::regs().chenset.write(|w| unsafe { w.bits(1 << chn) });\n    |                          ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:147:47\n    |\n147 |                     let ppi_ch_enabled = ppi::regs().chen.read().bits() & (1 << chn) != 0;\n    |                                               ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find function `regs` in module `ppi`\n   --> src/buffered_uarte.rs:155:30\n    |\n155 |                         ppi::regs().chenclr.write(|w| unsafe { w.bits(1 << chn) });\n    |                              ^^^^ not found in `ppi`\n\nerror[E0425]: cannot find value `FLASH_SIZE` in module `crate::chip`\n  --> src/nvmc.rs:21:44\n   |\n21 | pub const FLASH_SIZE: usize = crate::chip::FLASH_SIZE;\n   |                                            ^^^^^^^^^^ not found in `crate::chip`\n\nwarning: unused macro definition: `impl_pin`\n   --> src/gpio.rs:498:14\n    |\n498 | macro_rules! impl_pin {\n    |              ^^^^^^^^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: unused macro definition: `impl_radio`\n  --> src/radio/mod.rs:77:14\n   |\n77 | macro_rules! impl_radio {\n   |              ^^^^^^^^^^\n\nwarning: unused import: `_version::*`\n  --> src/ppi/mod.rs:28:16\n   |\n28 | pub(crate) use _version::*;\n   |                ^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: unused macro definition: `impl_ppi_channel`\n   --> src/ppi/mod.rs:288:14\n    |\n288 | macro_rules! impl_ppi_channel {\n    |              ^^^^^^^^^^^^^^^^\n\nwarning: unused macro definition: `impl_pwm`\n   --> src/pwm.rs:860:14\n    |\n860 | macro_rules! impl_pwm {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_qdec`\n   --> src/qdec.rs:273:14\n    |\n273 | macro_rules! impl_qdec {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_rng`\n   --> src/rng.rs:258:14\n    |\n258 | macro_rules! impl_rng {\n    |              ^^^^^^^^\n\nwarning: unused macro definition: `impl_spim`\n   --> src/spim.rs:524:14\n    |\n524 | macro_rules! impl_spim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_spis`\n   --> src/spis.rs:483:14\n    |\n483 | macro_rules! impl_spis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_timer`\n  --> src/timer.rs:30:14\n   |\n30 | macro_rules! impl_timer {\n   |              ^^^^^^^^^^\n\nwarning: unused macro definition: `impl_twim`\n   --> src/twim.rs:754:14\n    |\n754 | macro_rules! impl_twim {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_twis`\n   --> src/twis.rs:781:14\n    |\n781 | macro_rules! impl_twis {\n    |              ^^^^^^^^^\n\nwarning: unused macro definition: `impl_uarte`\n   --> src/uarte.rs:985:14\n    |\n985 | macro_rules! impl_uarte {\n    |              ^^^^^^^^^^\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:314:18\n    |\n314 |             Ppi::new_one_to_one(ppi_ch1, Event::from_reg(&r.events_end), Task::from_reg(&r.tasks_start));\n    |                  ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no function or associated item named `new_one_to_one` found for struct `ppi::Ppi` in the current scope\n   --> src/saadc.rs:324:35\n    |\n324 |         let mut sample_ppi = Ppi::new_one_to_one(ppi_ch2, timer_cc.event_compare(), Task::from_reg(&r.tasks_sample));\n    |                                   ^^^^^^^^^^^^^^ function or associated item not found in `Ppi<'_, _, _, _>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- function or associated item `new_one_to_one` not found for this struct\n\nerror[E0599]: no method named `disable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:764:22\n    |\n764 |         self.ppi_ch1.disable();\n    |                      ^^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `disable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `disable`, perhaps you need to implement one of them:\n            candidate #1: `cortex_m::prelude::_embedded_hal_watchdog_WatchdogDisable`\n            candidate #2: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #3: `embassy_usb_driver::Bus`\n            candidate #4: `embedded_hal::Capture`\n            candidate #5: `embedded_hal::Pwm`\n            candidate #6: `embedded_hal::PwmPin`\n\nerror[E0599]: no method named `enable` found for struct `ppi::Ppi` in the current scope\n   --> src/uarte.rs:791:22\n    |\n791 |         self.ppi_ch1.enable();\n    |                      ^^^^^^ method not found in `Ppi<'d, AnyConfigurableChannel, 1, 2>`\n    |\n   ::: src/ppi/mod.rs:31:1\n    |\n31  | pub struct Ppi<'d, C: Channel, const EVENT_COUNT: usize, const TASK_COUNT: usize> {\n    | --------------------------------------------------------------------------------- method `enable` not found for this struct\n    |\n    = help: items from traits can only be used if the trait is implemented and in scope\n    = note: the following traits define an item `enable`, perhaps you need to implement one of them:\n            candidate #1: `embassy_hal_internal::interrupt::InterruptExt`\n            candidate #2: `embassy_usb_driver::Bus`\n            candidate #3: `embedded_hal::Capture`\n            candidate #4: `embedded_hal::Pwm`\n            candidate #5: `embedded_hal::PwmPin`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:34\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                  ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0433]: failed to resolve: use of undeclared crate or module `consts`\n   --> src/lib.rs:467:58\n    |\n467 |             let res = uicr_write(consts::UICR_APPROTECT, consts::APPROTECT_ENABLED);\n    |                                                          ^^^^^^ use of undeclared crate or module `consts`\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:51:17\n   |\n51 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:65:17\n   |\n65 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:78:17\n   |\n78 |         let r = regs();\n   |                 ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:87:9\n   |\n87 |         regs().tasks_chg[n].en.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n  --> src/ppi/mod.rs:93:9\n   |\n93 |         regs().tasks_chg[n].dis.write(|w| unsafe { w.bits(1) });\n   |         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:101:25\n    |\n101 |         Task::from_reg(&regs().tasks_chg[n].en)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:109:25\n    |\n109 |         Task::from_reg(&regs().tasks_chg[n].dis)\n    |                         ^^^^ not found in this scope\n\nerror[E0425]: cannot find function `regs` in this scope\n   --> src/ppi/mod.rs:115:17\n    |\n115 |         let r = regs();\n    |                 ^^^^ not found in this scope\n\nSome errors have detailed explanations: E0425, E0432, E0433, E0583, E0599.\nFor more information about an error, try `rustc --explain E0425`.\nwarning: `embassy-nrf` (lib) generated 13 warnings\nerror: could not compile `embassy-nrf` (lib) due to 40 previous errors; 13 warnings emitted\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 615,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-nrf, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-nrf\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded nrf51-pac v0.12.2\n  Downloaded nrf9160-pac v0.12.2\n  Downloaded nrf5340-app-pac v0.12.2\n  Downloaded nrf52840-pac v0.12.2\n  Downloaded nrf52833-pac v0.12.2\n  Downloaded nrf52832-pac v0.12.2\n  Downloaded nrf5340-net-pac v0.12.2\n  Downloaded nrf52820-pac v0.12.2\n  Downloaded nrf52811-pac v0.12.2\n  Downloaded nrf52810-pac v0.12.2\n  Downloaded nrf52805-pac v0.12.2\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 634,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 635,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 636,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 637,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 638,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 639,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 640,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 641,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 642,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 643,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n Downloading crates ...\n  Downloaded once_cell v1.20.0\nerror: rustc 1.78.0 is not supported by the following packages:\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\n  fixed@1.28.0 requires rustc 1.79\nEither upgrade rustc or select compatible dependency versions with\n`cargo update <name>@<current-ver> --precise <compatible-ver>`\nwhere `<compatible-ver>` is the latest version supporting rustc 1.78.0\n\n"
    },
    {
      "cmd_idx": 644,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling void v1.0.2\n   Compiling byteorder v1.5.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bitfield v0.13.2\n   Compiling embedded-io v0.6.1\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-storage v0.3.1\n   Compiling atomic-polyfill v1.0.3\n   Compiling rp-pac v6.0.0\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling embedded-storage-async v0.4.1\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling arrayvec v0.7.6\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling pio v0.2.1\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 645,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling void v1.0.2\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling byteorder v1.5.0\n   Compiling critical-section v1.1.3\n   Compiling nb v0.1.3\n   Compiling cfg-if v1.0.0\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling bitfield v0.13.2\n   Compiling typenum v1.17.0\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling num-traits v0.2.19\n   Compiling embedded-storage v0.3.1\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling rp-pac v6.0.0\n   Compiling atomic-polyfill v1.0.3\n   Compiling fixed v1.28.0\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling rp2040-boot2 v0.3.0\n   Compiling embedded-storage-async v0.4.1\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling half v2.4.1\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling num_enum v0.5.11\n   Compiling bytemuck v1.18.0\n   Compiling arrayvec v0.7.6\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling pio v0.2.1\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling rand_core v0.6.4\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\nerror: statics with a custom `#[link_section]` must be a simple list of bytes on the wasm target with no extra levels of indirection such as references\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/rp-pac-6.0.0/src/_vectors.rs:41:1\n   |\n41 | pub static __INTERRUPTS: [Vector; 32] = [\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `rp-pac` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 646,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-rp, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling cortex-m v0.7.7\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      },\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"parking_lot_core::unpark_requeue\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:914:12: 914:50 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/parking_lot_core-0.9.10/src/parking_lot.rs:935:17: 935:64 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:37Z WARN  lockbud::callbacks] crate parking_lot contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 2 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:218:18: 218:55 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      },\n      {\n        \"UseAfterFree\": {\n          \"bug_kind\": \"UseAfterFree\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": \"Raw ptr is used at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:222:13: 222:53 (#0) after dropped at /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/once_cell-1.20.0/src/imp_std.rs:238:5: 238:6 (#0)\",\n          \"explanation\": \"Raw ptr is used or escapes the current function after the pointed value is dropped\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate once_cell contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 0 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 2 }\n   Compiling void v1.0.2\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:39Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:51Z WARN  lockbud::callbacks] crate lalrpop contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling heapless v0.8.0\n   Compiling cortex-m-rt v0.7.3\n   Compiling bare-metal v0.2.5\n   Compiling embedded-hal v0.2.7\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling vcell v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v1.0.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-io-async v0.6.1\n   Compiling bitfield v0.13.2\n   Compiling embedded-io v0.6.1\n   Compiling az v1.2.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling typenum v1.17.0\n   Compiling num-traits v0.2.19\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"BufferWriter::print\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1146:16: 1146:52 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/termcolor-1.4.1/src/lib.rs:1166:9: 1166:52 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:54:46Z WARN  lockbud::callbacks] crate termcolor contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-hal-internal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-hal-internal)\n   Compiling rp-pac v6.0.0\n   Compiling fixed v1.28.0\n   Compiling atomic-polyfill v1.0.3\n   Compiling embedded-storage-async v0.4.1\n   Compiling rp2040-boot2 v0.3.0\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"regex_automata::util::pool::inner::Pool::<T, F>::get\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:525:25: 525:59 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/regex-automata-0.4.7/src/util/pool.rs:530:17: 530:69 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:55:03Z WARN  lockbud::callbacks] crate pio_parser contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling half v2.4.1\n   Compiling num_enum v0.5.11\n   Compiling arrayvec v0.7.6\n   Compiling bytemuck v1.18.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embassy-rp v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-rp)\n   Compiling pio v0.2.1\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embedded-hal-nb v1.0.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling rand_core v0.6.4\nerror[E0609]: no field `rasr` on type `cortex_m::peripheral::MPU`\n   --> src/lib.rs:297:18\n    |\n297 |         core.MPU.rasr.write(\n    |                  ^^^^ unknown field\n    |\n    = note: available fields are: `_type`, `ctrl`, `rnr`, `rbar`, `rlar` ... and 7 others\n\nFor more information about this error, try `rustc --explain E0609`.\nerror: could not compile `embassy-rp` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 658,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/void-1.0.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 658,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 658,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 674,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling volatile-register v0.2.2\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5630fe21b6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5630fe21b6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5630fe21b6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5630fe21b6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5630fe2399bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5630fe2399bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5630fe21943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5630fe21b47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5630fe21b47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5630fe21c7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5630fe21c52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5630fe21cca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5630fe21cb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5630fe21bb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5630fe21c8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5630fe238be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5630fe2000ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5630fe1fafbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5630fe1fa5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5630fe1fa631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5630fe2167dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5630fe2167dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5630fe2167dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5630fe2167dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5630fe2167dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5630fe2167dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5630fe2167dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5630fe2167dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5630fe2167dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5630fe1fa60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5630fe2001ce - main\n    31:     0x7fd05f429d90 - <unknown>\n    32:     0x7fd05f429e40 - __libc_start_main\n    33:     0x5630fe1f9f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 675,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n    Checking nb v1.1.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n    Checking nb v0.1.3\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling heapless v0.8.0\n   Compiling quote v1.0.37\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n   Compiling vcell v0.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling autocfg v1.3.0\n   Compiling litrs v0.4.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling bitfield v0.13.2\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling document-features v0.2.10\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 676,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling byteorder v1.5.0\n   Compiling nb v0.1.3\n   Compiling heapless v0.8.0\n   Compiling embedded-hal v0.2.7\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5558727286a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5558727286a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5558727286a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5558727286a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5558727469bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5558727469bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55587272643f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55587272847e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55587272847e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5558727297e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55587272952d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x555872729ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x555872729b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x555872728b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5558727298b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x555872745be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55587270d0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x555872707fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5558727075be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x555872707631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5558727237dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5558727237dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5558727237dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5558727237dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5558727237dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5558727237dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5558727237dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5558727237dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5558727237dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55587270760a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55587270d1ce - main\n    31:     0x7f188fe29d90 - <unknown>\n    32:     0x7f188fe29e40 - __libc_start_main\n    33:     0x555872706f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 677,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n   Compiling proc-macro2 v1.0.86\n   Compiling nb v1.1.0\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling syn v1.0.109\n   Compiling rustc_version v0.2.3\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling bare-metal v0.2.5\n   Compiling byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling vcell v0.1.3\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling futures-util v0.3.30\n   Compiling volatile-register v0.2.2\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling bitfield v0.13.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling autocfg v1.3.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x557a7d1a66a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x557a7d1a66a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x557a7d1a66a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x557a7d1a66a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x557a7d1c49bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x557a7d1c49bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x557a7d1a443f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x557a7d1a647e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x557a7d1a647e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x557a7d1a77e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x557a7d1a752d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x557a7d1a7ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x557a7d1a7b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x557a7d1a6b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x557a7d1a78b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x557a7d1c3be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x557a7d18b0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x557a7d185fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x557a7d1855be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x557a7d185631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x557a7d1a17dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x557a7d1a17dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x557a7d1a17dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x557a7d1a17dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x557a7d1a17dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x557a7d1a17dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x557a7d1a17dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x557a7d1a17dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x557a7d1a17dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x557a7d18560a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x557a7d18b1ce - main\n    31:     0x7fee37829d90 - <unknown>\n    32:     0x7fee37829e40 - __libc_start_main\n    33:     0x557a7d184f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 678,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling volatile-register v0.2.2\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5593f1a5a6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5593f1a5a6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5593f1a5a6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5593f1a5a6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5593f1a789bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5593f1a789bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5593f1a5843f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5593f1a5a47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5593f1a5a47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5593f1a5b7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5593f1a5b52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5593f1a5bca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5593f1a5bb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5593f1a5ab69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5593f1a5b8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5593f1a77be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5593f1a3f0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5593f1a39fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5593f1a395be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5593f1a39631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5593f1a557dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5593f1a557dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5593f1a557dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5593f1a557dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5593f1a557dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5593f1a557dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5593f1a557dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5593f1a557dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5593f1a557dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5593f1a3960a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5593f1a3f1ce - main\n    31:     0x7f6f93a29d90 - <unknown>\n    32:     0x7f6f93a29e40 - __libc_start_main\n    33:     0x5593f1a38f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 679,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 680,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-hal v0.2.7\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55c2ce25e6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55c2ce25e6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55c2ce25e6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55c2ce25e6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55c2ce27c9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55c2ce27c9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55c2ce25c43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55c2ce25e47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55c2ce25e47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55c2ce25f7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55c2ce25f52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55c2ce25fca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55c2ce25fb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55c2ce25eb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55c2ce25f8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55c2ce27bbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55c2ce2430ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55c2ce23dfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55c2ce23d5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55c2ce23d631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55c2ce2597dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55c2ce2597dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55c2ce2597dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55c2ce2597dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55c2ce2597dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55c2ce2597dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55c2ce2597dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55c2ce2597dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55c2ce2597dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55c2ce23d60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55c2ce2431ce - main\n    31:     0x7f27f0e29d90 - <unknown>\n    32:     0x7f27f0e29e40 - __libc_start_main\n    33:     0x55c2ce23cf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 681,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\nerror: could not compile `void` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `nb` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 682,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling vcell v0.1.3\n   Compiling document-features v0.2.10\n   Compiling volatile-register v0.2.2\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x556ddf8006a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x556ddf8006a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x556ddf8006a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x556ddf8006a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x556ddf81e9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x556ddf81e9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x556ddf7fe43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x556ddf80047e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x556ddf80047e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x556ddf8017e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x556ddf80152d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x556ddf801ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x556ddf801b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x556ddf800b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x556ddf8018b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x556ddf81dbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x556ddf7e50ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x556ddf7dffbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x556ddf7df5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x556ddf7df631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x556ddf7fb7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x556ddf7fb7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x556ddf7fb7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x556ddf7fb7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x556ddf7fb7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x556ddf7fb7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x556ddf7fb7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x556ddf7fb7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x556ddf7fb7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x556ddf7df60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x556ddf7e51ce - main\n    31:     0x7fd78cc29d90 - <unknown>\n    32:     0x7fd78cc29e40 - __libc_start_main\n    33:     0x556ddf7def45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 683,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking nb v0.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking vcell v0.1.3\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking volatile-register v0.2.2\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 684,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling futures-util v0.3.30\n   Compiling embedded-hal v1.0.0\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x564c129cc6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x564c129cc6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x564c129cc6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x564c129cc6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x564c129ea9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x564c129ea9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x564c129ca43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x564c129cc47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x564c129cc47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x564c129cd7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x564c129cd52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x564c129cdca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x564c129cdb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x564c129ccb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x564c129cd8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x564c129e9be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x564c129b10ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x564c129abfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x564c129ab5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x564c129ab631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x564c129c77dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x564c129c77dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x564c129c77dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x564c129c77dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x564c129c77dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x564c129c77dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x564c129c77dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x564c129c77dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x564c129c77dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x564c129ab60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x564c129b11ce - main\n    31:     0x7f9ee0229d90 - <unknown>\n    32:     0x7f9ee0229e40 - __libc_start_main\n    33:     0x564c129aaf45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 685,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking nb v0.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking vcell v0.1.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 686,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling cortex-m-rt-macros v0.7.0\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking vcell v0.1.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 687,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking embedded-hal v0.2.7\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking futures-util v0.3.30\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking vcell v0.1.3\n    Checking cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 688,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling embedded-hal v0.2.7\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling vcell v0.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling volatile-register v0.2.2\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5596c9e586a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5596c9e586a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5596c9e586a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5596c9e586a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5596c9e769bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5596c9e769bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5596c9e5643f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5596c9e5847e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5596c9e5847e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5596c9e597e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5596c9e5952d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5596c9e59ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5596c9e59b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5596c9e58b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5596c9e598b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5596c9e75be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5596c9e3d0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5596c9e37fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5596c9e375be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5596c9e37631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5596c9e537dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5596c9e537dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5596c9e537dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5596c9e537dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5596c9e537dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5596c9e537dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5596c9e537dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5596c9e537dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5596c9e537dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5596c9e3760a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5596c9e3d1ce - main\n    31:     0x7f3109229d90 - <unknown>\n    32:     0x7f3109229e40 - __libc_start_main\n    33:     0x5596c9e36f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 689,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking stable_deref_trait v1.2.0\n    Checking nb v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking vcell v0.1.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 690,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling void v1.0.2\n   Compiling cortex-m v0.7.7\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling nb v0.1.3\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-hal v0.2.7\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling futures-util v0.3.30\n   Compiling vcell v0.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55fe64beb6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55fe64beb6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55fe64beb6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55fe64beb6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55fe64c099bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55fe64c099bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55fe64be943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55fe64beb47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55fe64beb47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55fe64bec7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55fe64bec52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55fe64becca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55fe64becb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55fe64bebb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55fe64bec8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55fe64c08be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55fe64bd00ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55fe64bcafbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55fe64bca5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55fe64bca631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55fe64be67dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55fe64be67dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55fe64be67dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55fe64be67dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55fe64be67dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55fe64be67dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55fe64be67dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55fe64be67dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55fe64be67dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55fe64bca60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55fe64bd01ce - main\n    31:     0x7f50a5429d90 - <unknown>\n    32:     0x7f50a5429e40 - __libc_start_main\n    33:     0x55fe64bc9f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 691,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking void v1.0.2\n   Compiling cortex-m v0.7.7\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking nb v0.1.3\n    Checking pin-project-lite v0.2.14\n    Checking embedded-hal v0.2.7\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling bare-metal v0.2.5\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking vcell v0.1.3\n    Checking volatile-register v0.2.2\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 703,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 703,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 703,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/void-1.0.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 719,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling futures-core v0.3.30\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling bitfield v0.13.2\n   Compiling pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x561457fe76a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x561457fe76a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x561457fe76a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x561457fe76a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5614580059bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5614580059bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x561457fe543f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x561457fe747e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x561457fe747e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x561457fe87e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x561457fe852d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x561457fe8ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x561457fe8b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x561457fe7b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x561457fe88b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x561458004be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x561457fcc0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x561457fc6fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x561457fc65be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x561457fc6631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x561457fe27dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x561457fe27dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x561457fe27dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x561457fe27dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x561457fe27dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x561457fe27dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x561457fe27dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x561457fe27dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x561457fe27dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x561457fc660a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x561457fcc1ce - main\n    31:     0x7f9e9b229d90 - <unknown>\n    32:     0x7f9e9b229e40 - __libc_start_main\n    33:     0x561457fc5f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 720,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Updating git repository `https://github.com/embassy-rs/stm32-data-generated`\n Downloading crates ...\n  Downloaded as-slice v0.1.5\n  Downloaded aligned v0.4.2\n  Downloaded aligned v0.3.5\n  Downloaded as-slice v0.2.1\n  Downloaded generic-array v0.12.4\n  Downloaded stm32-device-signature v0.3.3\n  Downloaded generic-array v0.13.3\n  Downloaded cortex-m v0.6.7\n   Compiling semver-parser v0.7.0\n   Compiling cortex-m v0.7.7\n    Checking nb v1.1.0\n   Compiling proc-macro2 v1.0.86\n    Checking stable_deref_trait v1.2.0\n   Compiling unicode-ident v1.0.13\n   Compiling semver v0.9.0\n   Compiling rustc_version v0.2.3\n   Compiling cortex-m-rt v0.7.3\n    Checking nb v0.1.3\n   Compiling syn v1.0.109\n   Compiling bare-metal v0.2.5\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling typenum v1.17.0\n   Compiling quote v1.0.37\n   Compiling version_check v0.9.5\n   Compiling heapless v0.8.0\n    Checking vcell v0.1.3\n    Checking byteorder v1.5.0\n    Checking hash32 v0.3.1\n    Checking volatile-register v0.2.2\n   Compiling generic-array v0.14.7\n    Checking futures-task v0.3.30\n    Checking bitfield v0.13.2\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling litrs v0.4.1\n    Checking embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-hal v1.0.0\n   Compiling autocfg v1.3.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking cfg-if v1.0.0\n   Compiling document-features v0.2.10\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 721,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling nb v0.1.3\n   Compiling bare-metal v0.2.5\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling vcell v0.1.3\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling bitfield v0.13.2\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling document-features v0.2.10\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d92a9696a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55d92a9696a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55d92a9696a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55d92a9696a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55d92a9879bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55d92a9879bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55d92a96743f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55d92a96947e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55d92a96947e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55d92a96a7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55d92a96a52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55d92a96aca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55d92a96ab4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55d92a969b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55d92a96a8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55d92a986be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55d92a94e0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55d92a948fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55d92a9485be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55d92a948631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55d92a9647dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55d92a9647dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55d92a9647dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55d92a9647dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55d92a9647dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55d92a9647dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55d92a9647dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55d92a9647dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55d92a9647dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55d92a94860a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55d92a94e1ce - main\n    31:     0x7f38b2a29d90 - <unknown>\n    32:     0x7f38b2a29e40 - __libc_start_main\n    33:     0x55d92a947f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 722,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling cortex-m v0.7.7\n   Compiling semver-parser v0.7.0\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling proc-macro2 v1.0.86\n   Compiling unicode-ident v1.0.13\n   Compiling cortex-m-rt v0.7.3\n   Compiling semver v0.9.0\n   Compiling nb v0.1.3\n   Compiling rustc_version v0.2.3\n   Compiling syn v1.0.109\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling bare-metal v0.2.5\n   Compiling typenum v1.17.0\n   Compiling heapless v0.8.0\n   Compiling byteorder v1.5.0\n   Compiling quote v1.0.37\n   Compiling version_check v0.9.5\n   Compiling vcell v0.1.3\n   Compiling volatile-register v0.2.2\n   Compiling generic-array v0.14.7\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling bitfield v0.13.2\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling autocfg v1.3.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling litrs v0.4.1\n   Compiling num-traits v0.2.19\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d000a126a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55d000a126a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55d000a126a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55d000a126a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55d000a309bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55d000a309bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55d000a1043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55d000a1247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55d000a1247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55d000a137e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55d000a1352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55d000a13ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55d000a13b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55d000a12b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55d000a138b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55d000a2fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55d0009f70ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55d0009f1fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55d0009f15be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55d0009f1631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55d000a0d7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55d000a0d7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55d000a0d7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55d000a0d7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55d000a0d7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55d000a0d7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55d000a0d7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55d000a0d7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55d000a0d7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55d0009f160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55d0009f71ce - main\n    31:     0x7f07cc829d90 - <unknown>\n    32:     0x7f07cc829e40 - __libc_start_main\n    33:     0x55d0009f0f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 723,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-core v0.3.30\n   Compiling bitfield v0.13.2\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5628d7ed46a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5628d7ed46a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5628d7ed46a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5628d7ed46a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5628d7ef29bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5628d7ef29bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5628d7ed243f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5628d7ed447e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5628d7ed447e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5628d7ed57e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5628d7ed552d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5628d7ed5ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5628d7ed5b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5628d7ed4b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5628d7ed58b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5628d7ef1be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5628d7eb90ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5628d7eb3fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5628d7eb35be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5628d7eb3631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5628d7ecf7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5628d7ecf7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5628d7ecf7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5628d7ecf7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5628d7ecf7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5628d7ecf7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5628d7ecf7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5628d7ecf7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5628d7ecf7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5628d7eb360a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5628d7eb91ce - main\n    31:     0x7f7ee4c29d90 - <unknown>\n    32:     0x7f7ee4c29e40 - __libc_start_main\n    33:     0x5628d7eb2f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 724,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-core v0.3.30\n    Checking bitfield v0.13.2\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 725,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x5591fd8db6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x5591fd8db6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x5591fd8db6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x5591fd8db6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x5591fd8f99bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x5591fd8f99bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x5591fd8d943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x5591fd8db47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x5591fd8db47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x5591fd8dc7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x5591fd8dc52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x5591fd8dcca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x5591fd8dcb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x5591fd8dbb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x5591fd8dc8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x5591fd8f8be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x5591fd8c00ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x5591fd8bafbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x5591fd8ba5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x5591fd8ba631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x5591fd8d67dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x5591fd8d67dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x5591fd8d67dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x5591fd8d67dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x5591fd8d67dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x5591fd8d67dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x5591fd8d67dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x5591fd8d67dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x5591fd8d67dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x5591fd8ba60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x5591fd8c01ce - main\n    31:     0x7ffadae29d90 - <unknown>\n    32:     0x7ffadae29e40 - __libc_start_main\n    33:     0x5591fd8b9f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 726,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `nb` (lib) due to 2 previous errors\nerror: could not compile `void` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 727,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling pin-project-lite v0.2.14\n   Compiling bitfield v0.13.2\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling critical-section v1.1.3\n   Compiling futures-task v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55bcbc7026a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55bcbc7026a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55bcbc7026a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55bcbc7026a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55bcbc7209bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55bcbc7209bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55bcbc70043f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55bcbc70247e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55bcbc70247e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55bcbc7037e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55bcbc70352d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55bcbc703ca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55bcbc703b4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55bcbc702b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55bcbc7038b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55bcbc71fbe3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55bcbc6e70ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55bcbc6e1fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55bcbc6e15be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55bcbc6e1631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55bcbc6fd7dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55bcbc6fd7dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55bcbc6fd7dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55bcbc6fd7dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55bcbc6fd7dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55bcbc6fd7dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55bcbc6fd7dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55bcbc6fd7dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55bcbc6fd7dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55bcbc6e160a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55bcbc6e71ce - main\n    31:     0x7f1130e29d90 - <unknown>\n    32:     0x7f1130e29e40 - __libc_start_main\n    33:     0x55bcbc6e0f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 728,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking bitfield v0.13.2\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 729,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling vcell v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n   Compiling volatile-register v0.2.2\n   Compiling hash32 v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling critical-section v1.1.3\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-io v0.6.1\n   Compiling embedded-hal v1.0.0\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55d4b15396a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55d4b15396a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55d4b15396a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55d4b15396a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55d4b15579bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55d4b15579bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55d4b153743f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55d4b153947e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55d4b153947e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55d4b153a7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55d4b153a52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55d4b153aca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55d4b153ab4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55d4b1539b69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55d4b153a8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55d4b1556be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55d4b151e0ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55d4b1518fbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55d4b15185be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55d4b1518631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55d4b15347dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55d4b15347dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55d4b15347dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55d4b15347dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55d4b15347dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55d4b15347dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55d4b15347dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55d4b15347dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55d4b15347dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55d4b151860a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55d4b151e1ce - main\n    31:     0x7f0a2b229d90 - <unknown>\n    32:     0x7f0a2b229e40 - __libc_start_main\n    33:     0x55d4b1517f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 730,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\n   Compiling embedded-hal-async v1.0.0\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 731,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling cortex-m-rt-macros v0.7.0\n   Compiling bare-metal v0.2.5\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking embedded-hal v0.2.7\n    Checking vcell v0.1.3\n    Checking hash32 v0.3.1\n    Checking volatile-register v0.2.2\n   Compiling heapless v0.8.0\n    Checking critical-section v1.1.3\n    Checking pin-utils v0.1.0\n    Checking bitfield v0.13.2\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n    Checking embedded-hal v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 732,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking pin-project-lite v0.2.14\n    Checking critical-section v1.1.3\n    Checking futures-task v0.3.30\n    Checking bitfield v0.13.2\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-hal v1.0.0\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking generic-array v0.13.3\n    Checking generic-array v0.12.4\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 733,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling hash32 v0.3.1\n   Compiling bitfield v0.13.2\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55f951f9b6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55f951f9b6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55f951f9b6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55f951f9b6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55f951fb99bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55f951fb99bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55f951f9943f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55f951f9b47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55f951f9b47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55f951f9c7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55f951f9c52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55f951f9cca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55f951f9cb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55f951f9bb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55f951f9c8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55f951fb8be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55f951f800ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55f951f7afbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55f951f7a5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55f951f7a631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55f951f967dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55f951f967dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55f951f967dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55f951f967dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55f951f967dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55f951f967dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55f951f967dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55f951f967dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55f951f967dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55f951f7a60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55f951f801ce - main\n    31:     0x7f3754829d90 - <unknown>\n    32:     0x7f3754829e40 - __libc_start_main\n    33:     0x55f951f79f45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 734,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking vcell v0.1.3\n    Checking nb v0.1.3\n    Checking byteorder v1.5.0\n    Checking volatile-register v0.2.2\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n    Checking futures-task v0.3.30\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking generic-array v0.12.4\n    Checking generic-array v0.13.3\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 735,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling nb v1.1.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n   Compiling void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n   Compiling nb v0.1.3\n   Compiling byteorder v1.5.0\n   Compiling vcell v0.1.3\n   Compiling embedded-hal v0.2.7\n   Compiling volatile-register v0.2.2\n   Compiling heapless v0.8.0\n   Compiling pin-utils v0.1.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling bitfield v0.13.2\n   Compiling critical-section v1.1.3\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-e3043d584af0886a/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  stack backtrace:\n     0:     0x55e78e3bc6a5 - std::backtrace_rs::backtrace::libunwind::trace::h5b560bab72e6154b\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/libunwind.rs:105:5\n     1:     0x55e78e3bc6a5 - std::backtrace_rs::backtrace::trace_unsynchronized::h4ee8ec99b43d8706\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/../../backtrace/src/backtrace/mod.rs:66:5\n     2:     0x55e78e3bc6a5 - std::sys_common::backtrace::_print_fmt::h6e8289aafa4fb13e\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:68:5\n     3:     0x55e78e3bc6a5 - <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hed32d0ff2aa0fdf1\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:44:22\n     4:     0x55e78e3da9bb - core::fmt::rt::Argument::fmt::hca3a538408b6d3ca\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/rt.rs:165:63\n     5:     0x55e78e3da9bb - core::fmt::write::h0c46818975380aad\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/fmt/mod.rs:1169:21\n     6:     0x55e78e3ba43f - std::io::Write::write_fmt::h5ea3db9efd501baa\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/io/mod.rs:1835:15\n     7:     0x55e78e3bc47e - std::sys_common::backtrace::_print::h27ff758d37d9e119\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:47:5\n     8:     0x55e78e3bc47e - std::sys_common::backtrace::print::hafc6b0d8efbd24ba\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:34:9\n     9:     0x55e78e3bd7e9 - std::panicking::default_hook::{{closure}}::ha573ac73171c717b\n    10:     0x55e78e3bd52d - std::panicking::default_hook::h8ed95b009f156527\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:298:9\n    11:     0x55e78e3bdca3 - std::panicking::rust_panic_with_hook::h086afbf37fa35871\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:795:13\n    12:     0x55e78e3bdb4b - std::panicking::begin_panic_handler::{{closure}}::ha322428a7efae35f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:656:13\n    13:     0x55e78e3bcb69 - std::sys_common::backtrace::__rust_end_short_backtrace::hfc043f4d06966d4a\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:171:18\n    14:     0x55e78e3bd8b7 - rust_begin_unwind\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:652:5\n    15:     0x55e78e3d9be3 - core::panicking::panic_fmt::h6d75522ebd7efdf2\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/panicking.rs:72:14\n    16:     0x55e78e3a10ea - build_script_build::main::he02330bd1fd8bde9\n                                 at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35\n    17:     0x55e78e39bfbb - core::ops::function::FnOnce::call_once::h8f4e4acd625f2813\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:250:5\n    18:     0x55e78e39b5be - std::sys_common::backtrace::__rust_begin_short_backtrace::he3c8957a45467066\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/sys_common/backtrace.rs:155:18\n    19:     0x55e78e39b631 - std::rt::lang_start::{{closure}}::h075bc8cdd305a275\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:159:18\n    20:     0x55e78e3b77dd - core::ops::function::impls::<impl core::ops::function::FnOnce<A> for &F>::call_once::hc45caadc31f12bbc\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/core/src/ops/function.rs:284:13\n    21:     0x55e78e3b77dd - std::panicking::try::do_call::h2817e8d187fb4046\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    22:     0x55e78e3b77dd - std::panicking::try::hd725b8f33b0955ec\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    23:     0x55e78e3b77dd - std::panic::catch_unwind::h393b56b2db7d8348\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    24:     0x55e78e3b77dd - std::rt::lang_start_internal::{{closure}}::h346fefab85a8f29f\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:48\n    25:     0x55e78e3b77dd - std::panicking::try::do_call::hff9d5ed939b97486\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:559:40\n    26:     0x55e78e3b77dd - std::panicking::try::h1e2d653a69031472\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panicking.rs:523:19\n    27:     0x55e78e3b77dd - std::panic::catch_unwind::h843eea8cbc130396\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/panic.rs:149:14\n    28:     0x55e78e3b77dd - std::rt::lang_start_internal::h3d73f751252cfec5\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:141:20\n    29:     0x55e78e39b60a - std::rt::lang_start::h7e2b451d7306c90d\n                                 at /rustc/b92758a9aef1cef7b79e2b72c3d8ba113e547f89/library/std/src/rt.rs:158:17\n    30:     0x55e78e3a11ce - main\n    31:     0x7fd0fc829d90 - <unknown>\n    32:     0x7fd0fc829e40 - __libc_start_main\n    33:     0x55e78e39af45 - _start\n    34:                0x0 - <unknown>\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 736,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-stm32-wpan, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking nb v1.1.0\n    Checking stable_deref_trait v1.2.0\n   Compiling cortex-m v0.7.7\n    Checking void v1.0.2\n   Compiling typenum v1.17.0\n   Compiling bare-metal v0.2.5\n    Checking byteorder v1.5.0\n    Checking nb v0.1.3\n    Checking vcell v0.1.3\n    Checking embedded-hal v0.2.7\n   Compiling heapless v0.8.0\n    Checking volatile-register v0.2.2\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking pin-project-lite v0.2.14\n    Checking bitfield v0.13.2\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling generic-array v0.14.7\n   Compiling cortex-m-rt v0.7.3\n    Checking embedded-io v0.6.1\n    Checking embedded-hal v1.0.0\n    Checking cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n    Checking generic-array v0.13.3\n    Checking generic-array v0.12.4\n   Compiling stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)\nerror: failed to run custom build command for `stm32-metapac v15.0.0 (https://github.com/embassy-rs/stm32-data-generated?tag=stm32-data-59b1f65bd109c3ef35782e6c44062208d0ef3d0e#2ad33979)`\n\nCaused by:\n  process didn't exit successfully: `/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-stm32-wpan/target/debug/build/stm32-metapac-c5704b4c8885a29d/build-script-build` (exit status: 101)\n  --- stderr\n  thread 'main' panicked at /home/runner/.cargo/git/checkouts/stm32-data-generated-cb34dad5f3150296/2ad3397/stm32-metapac/build.rs:36:35:\n  No stm32xx Cargo feature enabled\n  note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 746,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 746,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 747,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/embedded-io-0.6.1/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 747,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 747,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 748,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 748,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 749,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 750,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 750,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 751,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 751,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 752,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 753,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 754,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:107:5\n    |\n107 | /     pub fn borrow(&self) -> &T {\n108 | |         let ptr = self.data.get() as *const T;\n109 | |         unsafe { &*ptr }\n110 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 754,
      "file": "src/blocking_mutex/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `borrow` can be confused for the standard trait method `std::borrow::Borrow::borrow`\n   --> src/blocking_mutex/mod.rs:166:9\n    |\n166 | /         pub fn borrow(&self) -> &T {\n167 | |             assert!(\n168 | |                 raw::in_thread_mode(),\n169 | |                 \"ThreadModeMutex can only be borrowed from thread mode.\"\n170 | |             );\n171 | |             unsafe { &*self.inner.get() }\n172 | |         }\n    | |_________^\n    |\n    = help: consider implementing the trait `std::borrow::Borrow` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n\n"
    },
    {
      "cmd_idx": 764,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-sync, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking embedded-io v0.6.1\n    Checking stable_deref_trait v1.2.0\nerror: could not compile `embedded-io` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 774,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/nb-1.1.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 775,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/void-1.0.2/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 776,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 777,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 778,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 779,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 780,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 781,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 782,
      "file": "src/duration.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/duration.rs:194:6\n    |\n194 | impl<'a> fmt::Display for Duration {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n    = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 782,
      "file": "src/instant.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n   --> src/instant.rs:157:6\n    |\n157 | impl<'a> fmt::Display for Instant {\n    |      ^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 782,
      "file": "src/timer.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: method `next` can be confused for the standard trait method `std::iter::Iterator::next`\n   --> src/timer.rs:204:5\n    |\n204 | /     pub fn next(&mut self) -> impl Future<Output = ()> + Send + Sync + '_ {\n205 | |         poll_fn(|cx| {\n206 | |             if self.expires_at <= Instant::now() {\n207 | |                 let dur = self.duration;\n...   |\n214 | |         })\n215 | |     }\n    | |_____^\n    |\n    = help: consider implementing the trait `std::iter::Iterator` or choosing a less ambiguous method name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#should_implement_trait\n    = note: `#[warn(clippy::should_implement_trait)]` on by default\n\n"
    },
    {
      "cmd_idx": 792,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking nb v1.1.0\n   Compiling heapless v0.8.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\nerror: could not compile `nb` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `void` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 802,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 803,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 804,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 805,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 806,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 807,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 808,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 809,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 810,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:85:5\n   |\n85 |     pub unsafe fn new(id: u8) -> Self {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n   = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 810,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/lib.rs:152:1\n    |\n152 | pub unsafe fn allocate_alarm() -> Option<AlarmHandle> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 810,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this public function might dereference a raw pointer but is not marked `unsafe`\n   --> src/lib.rs:158:64\n    |\n158 |     unsafe { _embassy_time_set_alarm_callback(alarm, callback, ctx) }\n    |                                                                ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#not_unsafe_ptr_arg_deref\n    = note: `#[deny(clippy::not_unsafe_ptr_arg_deref)]` on by default\n\n"
    },
    {
      "cmd_idx": 820,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 821,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 822,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 823,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 824,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 825,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 826,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling litrs v0.4.1\n   Compiling document-features v0.2.10\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 827,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 828,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-driver, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\nerror: could not compile `embassy-time-driver` (lib) due to 2 previous errors; 2 warnings emitted\n"
    },
    {
      "cmd_idx": 839,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 856,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-time-queue-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\nerror: could not compile `embassy-time-queue-driver` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 866,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 867,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.4.3/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 868,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 869,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 870,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 871,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 872,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 873,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/class/cdc_ncm/embassy_net.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<MTU, N_RX, N_TX>`\n  --> src/class/cdc_ncm/embassy_net.rs:17:5\n   |\n17 | /     pub const fn new() -> Self {\n18 | |         Self {\n19 | |             ch_state: ch::State::new(),\n20 | |         }\n21 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n15 + impl<const MTU: usize, const N_RX: usize, const N_TX: usize> Default for State<MTU, N_RX, N_TX> {\n16 +     fn default() -> Self {\n17 +         Self::new()\n18 +     }\n19 + }\n   |\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n   --> src/msos.rs:627:17\n    |\n627 |         assert!(resume_signaling_time >= 1 && resume_signaling_time <= 20);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `(1..=20).contains(&resume_signaling_time)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n    = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/msos.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `CcgpDeviceDescriptor`\n   --> src/msos.rs:687:5\n    |\n687 | /     pub fn new() -> Self {\n688 | |         Self {\n689 | |             wLength: (size_of::<Self>() as u16).to_le(),\n690 | |             wDescriptorType: (Self::TYPE as u16).to_le(),\n691 | |         }\n692 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n    |\n685 + impl Default for CcgpDeviceDescriptor {\n686 +     fn default() -> Self {\n687 +         Self::new()\n688 +     }\n689 + }\n    |\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> src/lib.rs:214:5\n    |\n214 | /     pub(crate) fn build(\n215 | |         driver: D,\n216 | |         config: Config<'d>,\n217 | |         handlers: Vec<&'d mut dyn Handler, MAX_HANDLER_COUNT>,\n...   |\n222 | |         control_buf: &'d mut [u8],\n223 | |     ) -> UsbDevice<'d, D> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 874,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary closure used with `bool::then`\n   --> src/lib.rs:374:28\n    |\n374 |                     .chain(need_zlp.then(|| -> &[u8] { &[] }));\n    |                            ^^^^^^^^^-------------------------\n    |                                     |\n    |                                     help: use `then_some(..)` instead: `then_some({ &[] })`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n    = note: `#[warn(clippy::unnecessary_lazy_evaluations)]` on by default\n\n"
    },
    {
      "cmd_idx": 875,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 876,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 877,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 878,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 879,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 880,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 881,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 882,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 883,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T21:59:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T21:59:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 884,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.4.3\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling portable-atomic v1.7.0\n   Compiling serde v1.0.210\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 894,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 895,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 896,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 896,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 896,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 897,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 898,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 899,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 900,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 901,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 902,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 912,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target wasm32-unknown-unknown\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 913,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling version_check v0.9.5\n    Checking futures-task v0.3.30\n   Compiling typenum v1.17.0\n    Checking hash32 v0.3.1\n    Checking pin-utils v0.1.0\n   Compiling embedded-io-async v0.6.1\n    Checking stable_deref_trait v1.2.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking critical-section v1.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling litrs v0.4.1\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n    Checking embedded-hal v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n   Compiling document-features v0.2.10\n    Checking embedded-storage v0.3.1\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking digest v0.10.7\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 914,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv6m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n   Compiling futures-util v0.3.30\n   Compiling embedded-io v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 915,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target riscv32imac-unknown-none-elf\n   Compiling heapless v0.8.0\n   Compiling byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling hash32 v0.3.1\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling version_check v0.9.5\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling generic-array v0.14.7\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling critical-section v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling litrs v0.4.1\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling document-features v0.2.10\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embedded-storage-async v0.4.1\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling digest v0.10.7\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\n"
    },
    {
      "cmd_idx": 916,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 917,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 918,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7em-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-core v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 919,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 920,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv7m-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling futures-task v0.3.30\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling cfg-if v1.0.0\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 921,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking embedded-io v0.6.1\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking void v1.0.2\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 922,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabihf\n   Compiling byteorder v1.5.0\n   Compiling pin-project-lite v0.2.14\n   Compiling heapless v0.8.0\n   Compiling futures-task v0.3.30\n   Compiling pin-utils v0.1.0\n   Compiling futures-core v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling signature v2.2.0\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling block-buffer v0.10.4\n   Compiling crypto-common v0.1.6\n   Compiling digest v0.10.7\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 923,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n    Checking cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 924,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking futures-task v0.3.30\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n   Compiling typenum v1.17.0\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 925,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n   Compiling typenum v1.17.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n    Checking embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 926,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target x86_64-unknown-linux-gnu\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-utils v0.1.0\n   Compiling pin-project-lite v0.2.14\n   Compiling futures-task v0.3.30\n   Compiling futures-core v0.3.30\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling hash32 v0.3.1\n   Compiling critical-section v1.1.3\n   Compiling embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling void v1.0.2\n   Compiling embedded-hal v1.0.0\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 927,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-task v0.3.30\n    Checking futures-core v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking embedded-hal v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking signature v2.2.0\n    Checking embedded-storage-async v0.4.1\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking crypto-common v0.1.6\n    Checking block-buffer v0.10.4\n    Checking digest v0.10.7\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 928,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Lockbud\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo +nightly-2024-05-21 lockbud -k all -- --target thumbv8m.main-none-eabi\n   Compiling byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling futures-core v0.3.30\n   Compiling futures-task v0.3.30\n   Compiling stable_deref_trait v1.2.0\n   Compiling pin-project-lite v0.2.14\n   Compiling pin-utils v0.1.0\n   Compiling typenum v1.17.0\n   Compiling futures-util v0.3.30\n   Compiling embedded-io-async v0.6.1\n   Compiling critical-section v1.1.3\n   Compiling hash32 v0.3.1\n   Compiling embedded-io v0.6.1\n   Compiling cfg-if v1.0.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n   Compiling nb v1.1.0\n   Compiling embedded-hal-async v1.0.0\n   Compiling nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n   Compiling embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n   Compiling embedded-hal v1.0.0\n   Compiling void v1.0.2\n   Compiling embedded-hal v0.2.7\n   Compiling embedded-storage v0.3.1\n   Compiling embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embedded-storage-async v0.4.1\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n   Compiling embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n   Compiling signature v2.2.0\n   Compiling bitflags v2.6.0\n   Compiling embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n   Compiling crypto-common v0.1.6\n   Compiling block-buffer v0.10.4\n   Compiling digest v0.10.7\n   Compiling embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n   Compiling embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n   Compiling embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n   Compiling embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: usb-dfu must be compiled with exactly one of `dfu`, or `application` features\n  --> src/lib.rs:22:1\n   |\n22 | compile_error!(\"usb-dfu must be compiled with exactly one of `dfu`, or `application` features\");\n   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nerror: could not compile `embassy-usb-dfu` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 929,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-dfu, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling typenum v1.17.0\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embedded-io v0.6.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n   Compiling generic-array v0.14.7\n    Checking nb v1.1.0\n   Compiling embassy-time-queue-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-queue-driver)\n    Checking nb v0.1.3\n   Compiling embassy-time-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time-driver)\n   Compiling embedded-hal-async v1.0.0\n    Checking void v1.0.2\n    Checking embassy-futures v0.1.1 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-futures)\n    Checking embedded-hal v1.0.0\n    Checking embedded-hal v0.2.7\n    Checking embedded-storage v0.3.1\n    Checking embassy-net-driver v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver)\n   Compiling embassy-usb v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb)\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embedded-storage-async v0.4.1\n    Checking signature v2.2.0\n    Checking bitflags v2.6.0\n    Checking embassy-time v0.3.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-time)\n    Checking block-buffer v0.10.4\n    Checking crypto-common v0.1.6\n    Checking digest v0.10.7\n    Checking embassy-net-driver-channel v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-net-driver-channel)\n    Checking embassy-embedded-hal v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-embedded-hal)\n    Checking embassy-boot v0.2.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-boot)\n    Checking embassy-usb-dfu v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-dfu)\nerror: could not compile `embassy-usb-dfu` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 940,
      "file": "src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 957,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-driver, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\nerror: could not compile `embassy-usb-driver` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 967,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 967,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 968,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/stable_deref_trait-1.2.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 968,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.4.3/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 969,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 969,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 970,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 970,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 971,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 971,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 972,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 972,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 973,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 973,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 974,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 974,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 975,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `LoggerState<'d>`\n  --> src/lib.rs:27:5\n   |\n27 | /     pub fn new() -> Self {\n28 | |         Self {\n29 | |             state: State::new(),\n30 | |             config_descriptor: [0; 128],\n...  |\n34 | |         }\n35 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n   = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n   |\n25 + impl<'d> Default for LoggerState<'d> {\n26 +     fn default() -> Self {\n27 +         Self::new()\n28 +     }\n29 + }\n   |\n\n"
    },
    {
      "cmd_idx": 975,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `UsbLogger<N>`\n  --> src/lib.rs:48:5\n   |\n48 | /     pub const fn new() -> Self {\n49 | |         Self { buffer: Pipe::new() }\n50 | |     }\n   | |_____^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\nhelp: try adding this\n   |\n46 + impl<const N: usize> Default for UsbLogger<N> {\n47 +     fn default() -> Self {\n48 +         Self::new()\n49 +     }\n50 + }\n   |\n\n"
    },
    {
      "cmd_idx": 976,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:00:55Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:55Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 977,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 978,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:02Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:02Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 979,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:06Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:06Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 980,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:09Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:09Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 981,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:12Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:12Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 982,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:15Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:15Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 983,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:18Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:18Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 984,
      "file": "Not supported to display yet.",
      "kind": "Lockbud(Possibly)",
      "raw": "[2024-09-13T22:00:53Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:00:53Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n[2024-09-13T22:01:21Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1447:11: 1447:40 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.22/src/lib.rs:1450:13: 1450:56 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2024-09-13T22:01:21Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }"
    },
    {
      "cmd_idx": 985,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-logger, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-logger\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.4.3\n   Compiling heapless v0.8.0\n    Checking stable_deref_trait v1.2.0\n   Compiling embedded-io-async v0.6.1\n   Compiling portable-atomic v1.7.0\nerror: could not compile `stable_deref_trait` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 995,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 996,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.30/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/byteorder-1.5.0/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 997,
      "file": "/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/pin-project-lite-0.2.14/src/lib.rs",
      "kind": "Clippy(Error)",
      "raw": "error[E0463]: can't find crate for `core`\n  |\n  = note: the `thumbv8m.main-none-eabi` target may not be installed\n  = help: consider downloading the target with `rustup target add thumbv8m.main-none-eabi`\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 998,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 999,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1000,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1001,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1002,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n   --> src/lib.rs:366:9\n    |\n366 | /         if D::dir() == Direction::Out {\n367 | |             if self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n368 | |                 error!(\"Not enough endpoint out buffer capacity\");\n369 | |                 return Err(EndpointAllocError);\n370 | |             }\n371 | |         };\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n    = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n    |\n366 ~         if D::dir() == Direction::Out && self.ep_out_buffer_offset + max_packet_size as usize >= self.ep_out_buffer.len() {\n367 +             error!(\"Not enough endpoint out buffer capacity\");\n368 +             return Err(EndpointAllocError);\n369 ~         };\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n   --> src/otg_v1.rs:102:5\n    |\n102 |     pub const unsafe fn from_ptr(ptr: *mut ()) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n    = note: `#[warn(clippy::missing_safety_doc)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n    = note: `#[warn(clippy::identity_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:388:23\n    |\n388 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:389:13\n    |\n389 |             val as u32\n    |             ^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n   --> src/otg_v1.rs:394:22\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n    = note: `#[deny(clippy::erasing_op)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:33\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:60\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:394:61\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/otg_v1.rs:394:62\n    |\n394 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n    |                                                              ^^^^^^^^^^^^ help: try: `val`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:411:23\n    |\n411 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:33\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:417:55\n    |\n417 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:445:23\n    |\n445 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:33\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:451:55\n    |\n451 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:479:23\n    |\n479 |             let val = (self.0 >> 0usize) & 0x03;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:33\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:485:53\n    |\n485 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val.to_bits() as u32) & 0x03) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val.to_bits() as u32) & 0x03)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:546:23\n    |\n546 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:552:53\n    |\n552 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:668:23\n    |\n668 |             let val = (self.0 >> 0usize) & 0x07ff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:33\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:674:55\n    |\n674 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:834:23\n    |\n834 |             let val = (self.0 >> 0usize) & 0xffff;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:33\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:840:55\n    |\n840 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n    |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:857:23\n    |\n857 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:863:53\n    |\n863 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:935:23\n    |\n935 |             let val = (self.0 >> 0usize) & 0x01;\n    |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n   --> src/otg_v1.rs:941:53\n    |\n941 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n    |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1013:23\n     |\n1013 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1014:13\n     |\n1014 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:33\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1019:60\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1019:62\n     |\n1019 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1058:23\n     |\n1058 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:33\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1064:55\n     |\n1064 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1213:23\n     |\n1213 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1219:53\n     |\n1219 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1280:23\n     |\n1280 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1286:53\n     |\n1286 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1336:23\n     |\n1336 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1337:13\n     |\n1337 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:33\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1342:60\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1342:62\n     |\n1342 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1381:23\n     |\n1381 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1387:53\n     |\n1387 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1437:23\n     |\n1437 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:33\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1443:55\n     |\n1443 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1460:23\n     |\n1460 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:33\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1466:55\n     |\n1466 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1483:23\n     |\n1483 |             let val = (self.0 >> 0usize) & 0x0fff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:33\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0fff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1489:55\n     |\n1489 |             self.0 = (self.0 & !(0x0fff << 0usize)) | (((val as u32) & 0x0fff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0fff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(self.0 >> 0usize)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1506:23\n     |\n1506 |             let val = (self.0 >> 0usize) & 0xffff_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1507:13\n     |\n1507 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Error)",
      "raw": "error: this operation will always return zero. This is likely not the intended outcome\n    --> src/otg_v1.rs:1512:22\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#erasing_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:33\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:60\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1512:61\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `(val as u32)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:1512:62\n     |\n1512 |             self.0 = (self.0 & !(0xffff_ffff << 0usize)) | (((val as u32) & 0xffff_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1529:23\n     |\n1529 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:33\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1535:55\n     |\n1535 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1563:23\n     |\n1563 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1569:53\n     |\n1569 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1697:23\n     |\n1697 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1703:53\n     |\n1703 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1830:23\n     |\n1830 |             let val = (self.0 >> 0usize) & 0xff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:33\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:1836:53\n     |\n1836 |             self.0 = (self.0 & !(0xff << 0usize)) | (((val as u32) & 0xff) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2261:23\n     |\n2261 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2267:53\n     |\n2267 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2559:23\n     |\n2559 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2565:53\n     |\n2565 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2736:23\n     |\n2736 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:2742:53\n     |\n2742 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3024:23\n     |\n3024 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3030:53\n     |\n3030 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3124:23\n     |\n3124 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:33\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3130:55\n     |\n3130 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3147:23\n     |\n3147 |             let val = (self.0 >> 0usize) & 0x0f;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:33\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0f`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3153:53\n     |\n3153 |             self.0 = (self.0 & !(0x0f << 0usize)) | (((val as u32) & 0x0f) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0f)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3225:23\n     |\n3225 |             let val = (self.0 >> 0usize) & 0x07;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:33\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3231:53\n     |\n3231 |             self.0 = (self.0 & !(0x07 << 0usize)) | (((val as u32) & 0x07) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3435:23\n     |\n3435 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:33\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3441:55\n     |\n3441 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3458:23\n     |\n3458 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:33\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3464:55\n     |\n3464 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3481:23\n     |\n3481 |             let val = (self.0 >> 0usize) & 0x07ff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:33\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x07ff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3487:55\n     |\n3487 |             self.0 = (self.0 & !(0x07ff << 0usize)) | (((val as u32) & 0x07ff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x07ff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3603:23\n     |\n3603 |             let val = (self.0 >> 0usize) & 0x03;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:33\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x03`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3609:53\n     |\n3609 |             self.0 = (self.0 & !(0x03 << 0usize)) | (((val as u32) & 0x03) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x03)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3637:23\n     |\n3637 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3643:53\n     |\n3643 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3748:23\n     |\n3748 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3754:53\n     |\n3754 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3870:23\n     |\n3870 |             let val = (self.0 >> 0usize) & 0x0007_ffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3871:13\n     |\n3871 |             val as u32\n     |             ^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:33\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0x0007_ffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3876:60\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x0007_ffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n    --> src/otg_v1.rs:3876:62\n     |\n3876 |             self.0 = (self.0 & !(0x0007_ffff << 0usize)) | (((val as u32) & 0x0007_ffff) << 0usize);\n     |                                                              ^^^^^^^^^^^^ help: try: `val`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3915:23\n     |\n3915 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:33\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3921:55\n     |\n3921 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3938:23\n     |\n3938 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:33\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3944:55\n     |\n3944 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3972:23\n     |\n3972 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:33\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:3978:55\n     |\n3978 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4017:23\n     |\n4017 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4023:53\n     |\n4023 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4172:23\n     |\n4172 |             let val = (self.0 >> 0usize) & 0xffff;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:33\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                 ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `0xffff`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4178:55\n     |\n4178 |             self.0 = (self.0 & !(0xffff << 0usize)) | (((val as u32) & 0xffff) << 0usize);\n     |                                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0xffff)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4217:23\n     |\n4217 |             let val = (self.0 >> 0usize) & 0x01;\n     |                       ^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `self.0`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/otg_v1.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this operation has no effect\n    --> src/otg_v1.rs:4223:53\n     |\n4223 |             self.0 = (self.0 & !(0x01 << 0usize)) | (((val as u32) & 0x01) << 0usize);\n     |                                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider reducing it to: `((val as u32) & 0x01)`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#identity_op\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unsafe function's docs miss `# Safety` section\n  --> src/lib.rs:26:1\n   |\n26 | / pub unsafe fn on_interrupt<const MAX_EP_COUNT: usize>(\n27 | |     r: Otg,\n28 | |     state: &State<MAX_EP_COUNT>,\n29 | |     ep_count: usize,\n30 | |     quirk_setup_late_cnak: bool,\n31 | | ) {\n   | |_^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#missing_safety_doc\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against false can be replaced by a negation\n  --> src/lib.rs:63:20\n   |\n63 |                 if state.cp_state.setup_ready.load(Ordering::Relaxed) == false {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `!state.cp_state.setup_ready.load(Ordering::Relaxed)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: methods with the following characteristics: (`to_*` and `self` type is `Copy`) usually take `self` by value\n   --> src/lib.rs:203:16\n    |\n203 |     fn to_dspd(&self) -> vals::Dspd {\n    |                ^^^^^\n    |\n    = help: consider choosing a less ambiguous name\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#wrong_self_convention\n    = note: `#[warn(clippy::wrong_self_convention)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you should consider adding a `Default` implementation for `State<EP_COUNT>`\n   --> src/lib.rs:248:5\n    |\n248 | /     pub const fn new() -> Self {\n249 | |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n250 | |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n251 | |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n...   |\n266 | |         }\n267 | |     }\n    | |_____^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n    = note: `#[warn(clippy::new_without_default)]` on by default\nhelp: try adding this\n    |\n246 + impl<const EP_COUNT: usize> Default for State<EP_COUNT> {\n247 +     fn default() -> Self {\n248 +         Self::new()\n249 +     }\n250 + }\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:249:9\n    |\n249 |         const NEW_AW: AtomicWaker = AtomicWaker::new();\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n    = note: `#[warn(clippy::declare_interior_mutable_const)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:250:9\n    |\n250 |         const NEW_BUF: UnsafeCell<*mut u8> = UnsafeCell::new(0 as _);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:251:9\n    |\n251 |         const NEW_SIZE: AtomicU16 = AtomicU16::new(EP_OUT_BUFFER_EMPTY);\n    |         -----^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         make this a static item (maybe with lazy_static)\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: a `const` item should never be interior mutable\n   --> src/lib.rs:252:9\n    |\n252 |           const NEW_EP_STATE: EpState = EpState {\n    |           ^----\n    |           |\n    |  _________make this a static item (maybe with lazy_static)\n    | |\n253 | |             in_waker: NEW_AW,\n254 | |             out_waker: NEW_AW,\n255 | |             out_buffer: NEW_BUF,\n256 | |             out_size: NEW_SIZE,\n257 | |         };\n    | |__________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#declare_interior_mutable_const\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `impl` can be derived\n   --> src/lib.rs:306:1\n    |\n306 | / impl Default for Config {\n307 | |     fn default() -> Self {\n308 | |         Self {\n309 | |             vbus_detection: false,\n...   |\n312 | |     }\n313 | | }\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#derivable_impls\n    = note: `#[warn(clippy::derivable_impls)]` on by default\n    = help: remove the manual implementation...\nhelp: ...and instead derive it\n    |\n280 + #[derive(Default)]\n281 | pub struct Config {\n    |\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `offset` with a `usize` casted to an `isize`\n   --> src/lib.rs:420:43\n    |\n420 |                 *state.out_buffer.get() = self.ep_out_buffer.as_mut_ptr().offset(self.ep_out_buffer_offset as _);\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.ep_out_buffer.as_mut_ptr().add(self.ep_out_buffer_offset)`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#ptr_offset_with_cast\n    = note: `#[warn(clippy::ptr_offset_with_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1003,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n    --> src/lib.rs:1120:12\n     |\n1120 |         if buf.len() > 0 {\n     |            ^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buf.is_empty()`\n     |\n     = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n     = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 1013,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking embedded-io v0.6.1\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking futures-core v0.3.30\n    Checking hash32 v0.3.1\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1014,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1015,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv6m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv6m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n    Checking embedded-io v0.6.1\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1016,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv8m.main-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv8m.main-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\nerror: could not compile `futures-core` (lib) due to 2 previous errors\nwarning: build failed, waiting for other jobs to finish...\nerror: could not compile `byteorder` (lib) due to 2 previous errors\nerror: could not compile `pin-project-lite` (lib) due to 2 previous errors\n"
    },
    {
      "cmd_idx": 1017,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7em-none-eabihf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7em-none-eabihf --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking futures-core v0.3.30\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking cfg-if v1.0.0\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1018,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json\n    Checking byteorder v1.5.0\n    Checking embedded-io v0.6.1\n   Compiling heapless v0.8.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-task v0.3.30\n    Checking pin-project-lite v0.2.14\n    Checking pin-utils v0.1.0\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1019,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=riscv32imac-unknown-none-elf\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target riscv32imac-unknown-none-elf --no-deps --message-format=json\n    Updating crates.io index\n   Compiling embedded-io-async v0.6.1\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-utils v0.1.0\n    Checking embedded-io v0.6.1\n    Checking pin-project-lite v0.2.14\n    Checking hash32 v0.3.1\n    Checking stable_deref_trait v1.2.0\n    Checking futures-core v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-task v0.3.30\n    Checking futures-util v0.3.30\n    Checking cfg-if v1.0.0\n    Checking critical-section v1.1.3\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1020,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=wasm32-unknown-unknown\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target wasm32-unknown-unknown --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n    Checking stable_deref_trait v1.2.0\n    Checking futures-task v0.3.30\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking futures-util v0.3.30\n    Checking critical-section v1.1.3\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    },
    {
      "cmd_idx": 1021,
      "file": "(virtual) clippy",
      "kind": "Cargo",
      "raw": "// pkg_name=embassy-usb-synopsys-otg, checker=Clippy\n// toolchain=1.78, target=thumbv7m-none-eabi\n// pkg_dir=/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg\n// cmd=cargo clippy --target thumbv7m-none-eabi --no-deps --message-format=json\n    Checking byteorder v1.5.0\n   Compiling embedded-io-async v0.6.1\n    Checking futures-core v0.3.30\n   Compiling heapless v0.8.0\n    Checking pin-project-lite v0.2.14\n    Checking stable_deref_trait v1.2.0\n    Checking embedded-io v0.6.1\n    Checking pin-utils v0.1.0\n    Checking futures-task v0.3.30\n   Compiling embassy-sync v0.6.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-sync)\n    Checking critical-section v1.1.3\n    Checking futures-util v0.3.30\n    Checking hash32 v0.3.1\n    Checking cfg-if v1.0.0\n    Checking embassy-usb-driver v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-driver)\n    Checking embassy-usb-synopsys-otg v0.1.0 (/home/runner/check/batch_1/AsyncModules/embassy-priority/embassy-usb-synopsys-otg)\nerror: could not compile `embassy-usb-synopsys-otg` (lib) due to 3 previous errors; 140 warnings emitted\n"
    }
  ]
}