{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.85.0-nightly (7c002ff9a 2024-12-25)",
          "commit_hash": "7c002ff9a70cb84fd1a91bc7b4a0f988cfc36fca",
          "commit_date": "2024-12-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.85.0-nightly",
          "llvm_version": "19.1.6"
        },
        "installed": [
          {
            "channel": "nightly-2024-12-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1735882766219,
        "finish": 1735882902056,
        "duration_ms": 135836,
        "git_time": "2025-01-03 13:35:34 +0800",
        "git_sha": "7ab9a06261b221c2d5c2ab34b09711af283c972e"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rap",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rap": [
          "Rap"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "yuoo655",
        "repo": "ext4libtest"
      }
    ],
    "packages": [
      {
        "name": "ext4libtest",
        "repo": {
          "repo_idx": 0,
          "user": "yuoo655",
          "repo": "ext4libtest"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu fmt -- --emit=json",
      "count": 6,
      "duration_ms": 143,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu --no-deps --message-format=json",
      "count": 28,
      "duration_ms": 4175,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu",
      "count": 1,
      "duration_ms": 7787,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json",
      "count": 28,
      "duration_ms": 24456,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-10-05 lockbud -k all -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 5903,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rap",
      "cmd": "cargo +nightly-2024-10-12 rap -F -M -- --target x86_64-unknown-linux-gnu",
      "count": 0,
      "duration_ms": 5699,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra",
      "count": 0,
      "duration_ms": 64140,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 1166,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 4558,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 7787,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=mirai cargo",
      "count": 1,
      "duration_ms": 24456,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2024-12-25",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/lib.rs (original lines from 97 to 97)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/lib.rs (original lines from 119 to 119)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/lib.rs (original lines from 141 to 141)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/lib.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/lib.rs (original lines from 147 to 147)\n-        \n"
    },
    {
      "cmd_idx": 0,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/main.rs (original lines from 558 to 558)\n-\n"
    },
    {
      "cmd_idx": 0,
      "file": "src/main.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/yuoo655/ext4libtest/src/main.rs (original lines from 566 to 573)\n-        let inode_ref = self.ext4.fuse_mkdir_with_attr(\n-            parent,\n-            name.to_str().unwrap(),\n-            mode,\n-            umask,\n-            _req.uid(),\n-            _req.gid(),\n-        ).unwrap();\n+        let inode_ref = self\n+            .ext4\n+            .fuse_mkdir_with_attr(\n+                parent,\n+                name.to_str().unwrap(),\n+                mode,\n+                umask,\n+                _req.uid(),\n+                _req.gid(),\n+            )\n+            .unwrap();\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `std::fs::OpenOptions`\n --> src/lib.rs:4:5\n  |\n4 | use std::fs::OpenOptions;\n  |     ^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Read`, `Seek`, and `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Read`, `Seek`, and `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused imports: `Read`, `Seek`, and `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `std::path::PathBuf`\n --> src/lib.rs:6:5\n  |\n6 | use std::path::PathBuf;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `std::process::Command`\n --> src/lib.rs:7:5\n  |\n7 | use std::process::Command;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `std::sync::Arc`\n --> src/lib.rs:8:5\n  |\n8 | use std::sync::Arc;\n  |     ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/lib.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `alloc::vec`\n  --> src/lib.rs:12:5\n   |\n12 | use alloc::vec;\n   |     ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `ReplyOpen`\n --> src/main.rs:7:17\n  |\n7 |     ReplyEntry, ReplyOpen, ReplyWrite, Request, TimeOrNow,\n  |                 ^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant field names in struct initialization\n   --> src/main.rs:175:16\n    |\n175 |         Self { ext4: ext4 }\n    |                ^^^^^^^^^^ help: replace it with: `ext4`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n    = note: `#[warn(clippy::redundant_field_names)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused import: `Read`\n   --> src/main.rs:157:23\n    |\n157 |         use std::io::{Read, Seek, Write};\n    |                       ^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:149:13\n    |\n149 |         let r = file.seek(std::io::SeekFrom::Start(offset as u64));\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:150:13\n    |\n150 |         let r = file.read_exact(&mut buf);\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:164:13\n    |\n164 |         let r = file.seek(std::io::SeekFrom::Start(offset as u64));\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:165:13\n    |\n165 |         let r = file.write_all(&data);\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused variable: `req`\n   --> src/main.rs:275:9\n    |\n275 |         req: &Request,\n    |         ^^^ help: if this is intentional, prefix it with an underscore: `_req`\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `time_now` is never used\n   --> src/main.rs:613:4\n    |\n613 | fn time_now() -> (i64, u32) {\n    |    ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `time_from_system_time` is never used\n   --> src/main.rs:617:4\n    |\n617 | fn time_from_system_time(system_time: &SystemTime) -> (i64, u32) {\n    |    ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `system_time_from_time` is never used\n   --> src/main.rs:628:4\n    |\n628 | fn system_time_from_time(secs: i64, nsecs: u32) -> SystemTime {\n    |    ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: function `system_time_to_timestamp` is never used\n   --> src/main.rs:636:4\n    |\n636 | fn system_time_to_timestamp(time: SystemTime) -> u32 {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> src/main.rs:148:33\n    |\n148 |         let mut buf = vec![0u8; BLOCK_SIZE as usize];\n    |                                 ^^^^^^^^^^^^^^^^^^^ help: try: `BLOCK_SIZE`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> src/main.rs:165:32\n    |\n165 |         let r = file.write_all(&data);\n    |                                ^^^^^ help: change this to: `data`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/main.rs:207:18\n    |\n207 |             ino: file_attr.ino as u64,\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: try: `file_attr.ino`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/main.rs:253:18\n    |\n253 |             ino: file_attr.ino as u64,\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: try: `file_attr.ino`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u64` -> `u64`)\n   --> src/main.rs:373:18\n    |\n373 |             ino: file_attr.ino as u64,\n    |                  ^^^^^^^^^^^^^^^^^^^^ help: try: `file_attr.ino`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u32` -> `u32`)\n   --> src/main.rs:536:27\n    |\n536 |                     rdev: rdev as u32,\n    |                           ^^^^^^^^^^^ help: try: `rdev`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `u32` is unnecessary\n   --> src/main.rs:589:19\n    |\n589 |             rdev: 0 as u32,\n    |                   ^^^^^^^^ help: try: `0_u32`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 1,
      "file": "src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unused return value of `fuser::ReplyDirectory::add` that must be used\n   --> src/main.rs:441:21\n    |\n441 |                     reply.add(entry.inode as u64, (i + 1) as i64, kind, &name);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n441 |                     let _ = reply.add(entry.inode as u64, (i + 1) as i64, kind, &name);\n    |                     +++++++\n\n"
    },
    {
      "cmd_idx": 2,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=ext4libtest, checker=SemverChecks\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/yuoo655/ext4libtest\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n\n\nstdout:\n\nstderr:\n    Building ext4libtest v0.1.0 (current)\n       Built [   5.596s] (current)\n     Parsing ext4libtest v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ext4libtest not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::fs::OpenOptions`\n --> src/lib.rs:4:5\n  |\n4 | use std::fs::OpenOptions;\n  |     ^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::path::PathBuf`\n --> src/lib.rs:6:5\n  |\n6 | use std::path::PathBuf;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::process::Command`\n --> src/lib.rs:7:5\n  |\n7 | use std::process::Command;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::sync::Arc`\n --> src/lib.rs:8:5\n  |\n8 | use std::sync::Arc;\n  |     ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `alloc::vec`\n  --> src/lib.rs:12:5\n   |\n12 | use alloc::vec;\n   |     ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::fs::OpenOptions`\n --> src/lib.rs:4:5\n  |\n4 | use std::fs::OpenOptions;\n  |     ^^^^^^^^^^^^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused imports: `Read`, `Seek`, `Write`\n --> src/lib.rs:5:15\n  |\n5 | use std::io::{Read, Seek, Write};\n  |               ^^^^  ^^^^  ^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::path::PathBuf`\n --> src/lib.rs:6:5\n  |\n6 | use std::path::PathBuf;\n  |     ^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::process::Command`\n --> src/lib.rs:7:5\n  |\n7 | use std::process::Command;\n  |     ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `std::sync::Arc`\n --> src/lib.rs:8:5\n  |\n8 | use std::sync::Arc;\n  |     ^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/lib.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `alloc::vec`\n  --> src/lib.rs:12:5\n   |\n12 | use alloc::vec;\n   |     ^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `ReplyOpen`\n --> src/main.rs:7:17\n  |\n7 |     ReplyEntry, ReplyOpen, ReplyWrite, Request, TimeOrNow,\n  |                 ^^^^^^^^^\n  |\n  = note: `#[warn(unused_imports)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused import: `Read`\n   --> src/main.rs:157:23\n    |\n157 |         use std::io::{Read, Seek, Write};\n    |                       ^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:149:13\n    |\n149 |         let r = file.seek(std::io::SeekFrom::Start(offset as u64));\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n    |\n    = note: `#[warn(unused_variables)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:150:13\n    |\n150 |         let r = file.read_exact(&mut buf);\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:164:13\n    |\n164 |         let r = file.seek(std::io::SeekFrom::Start(offset as u64));\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused variable: `r`\n   --> src/main.rs:165:13\n    |\n165 |         let r = file.write_all(&data);\n    |             ^ help: if this is intentional, prefix it with an underscore: `_r`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused variable: `req`\n   --> src/main.rs:275:9\n    |\n275 |         req: &Request,\n    |         ^^^ help: if this is intentional, prefix it with an underscore: `_req`\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: function `time_now` is never used\n   --> src/main.rs:613:4\n    |\n613 | fn time_now() -> (i64, u32) {\n    |    ^^^^^^^^\n    |\n    = note: `#[warn(dead_code)]` on by default\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: function `time_from_system_time` is never used\n   --> src/main.rs:617:4\n    |\n617 | fn time_from_system_time(system_time: &SystemTime) -> (i64, u32) {\n    |    ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: function `system_time_from_time` is never used\n   --> src/main.rs:628:4\n    |\n628 | fn system_time_from_time(secs: i64, nsecs: u32) -> SystemTime {\n    |    ^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: function `system_time_to_timestamp` is never used\n   --> src/main.rs:636:4\n    |\n636 | fn system_time_to_timestamp(time: SystemTime) -> u32 {\n    |    ^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 3,
      "file": "src/main.rs",
      "kind": "Mirai",
      "raw": "warning: unused return value of `fuser::ReplyDirectory::add` that must be used\n   --> src/main.rs:441:21\n    |\n441 |                     reply.add(entry.inode as u64, (i + 1) as i64, kind, &name);\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(unused_must_use)]` on by default\nhelp: use `let _ = ...` to ignore the resulting value\n    |\n441 |                     let _ = reply.add(entry.inode as u64, (i + 1) as i64, kind, &name);\n    |                     +++++++\n\n"
    },
    {
      "cmd_idx": 7,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=ext4libtest, checker=Outdated\ntoolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\npkg_dir=/home/runner/check/batch_1/yuoo655/ext4libtest\ncmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\n\nName     Project  Compat  Latest  Kind    Platform\n----     -------  ------  ------  ----    --------\next4_rs  1.1.0    1.2.0   1.2.0   Normal  ---\nfuser    0.14.0   0.15.1  0.15.1  Normal  ---\nlog      0.4.21   0.4.22  0.4.22  Normal  ---\n"
    },
    {
      "cmd_idx": 9,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4libtest, checker=SemverChecks\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/yuoo655/ext4libtest\n// cmd=cargo +nightly-2024-12-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu\n// timestamp=2025-01-03 13:39:47.897560553 +08:00:00\n    Building ext4libtest v0.1.0 (current)\n       Built [   5.596s] (current)\n     Parsing ext4libtest v0.1.0 (current)\n      Parsed [   0.002s] (current)\nerror: ext4libtest not found in registry (crates.io). For workarounds check https://github.com/obi1kenobi/cargo-semver-checks#does-the-crate-im-checking-have-to-be-published-on-cratesio\n"
    },
    {
      "cmd_idx": 10,
      "file": "(virtual) mirai",
      "kind": "Cargo",
      "raw": "// pkg_name=ext4libtest, checker=Mirai\n// toolchain=nightly-2024-12-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// pkg_dir=/home/runner/check/batch_1/yuoo655/ext4libtest\n// cmd=cargo +nightly-2024-02-05 mirai --target x86_64-unknown-linux-gnu --message-format=json\n// timestamp=2025-01-03 13:39:55.77171394 +08:00:00\n   Compiling proc-macro2 v1.0.85\n   Compiling unicode-ident v1.0.12\n   Compiling libc v0.2.155\n   Compiling cfg_aliases v0.1.1\n   Compiling nix v0.28.0\n    Checking bitflags v2.5.0\n    Checking log v0.4.21\n   Compiling pkg-config v0.3.30\n    Checking byteorder v1.5.0\n    Checking cfg-if v1.0.0\n    Checking smallvec v1.13.2\n   Compiling quote v1.0.36\n   Compiling syn v2.0.66\n   Compiling fuser v0.14.0 (https://github.com/cberner/fuser.git#99aa5280)\n    Checking memchr v2.7.2\n    Checking jbd2_rs v0.1.0 (https://github.com/yuoo655/jbd2_rs.git#94d8e257)\n    Checking ext4_rs v1.1.0 (https://github.com/yuoo655/ext4_rs.git#7aa7536b)\n    Checking page_size v0.6.0\n   Compiling zerocopy-derive v0.7.34\n    Checking zerocopy v0.7.34\n    Checking ext4libtest v0.1.0 (/home/runner/check/batch_1/yuoo655/ext4libtest)\n    Finished dev [unoptimized + debuginfo] target(s) in 4.60s\n    Checking ext4libtest v0.1.0 (/home/runner/check/batch_1/yuoo655/ext4libtest)\nerror: could not compile `ext4libtest` (bin \"ext4libtest\"); 12 warnings emitted\n"
    }
  ]
}