{
  "env": {
    "tools": {
      "rust_toolchains": {
        "host": {
          "version": "1.86.0-nightly (f7cc13af8 2025-01-25)",
          "commit_hash": "f7cc13af822fe68c64fec0b05aa9dd1412451f7c",
          "commit_date": "2025-01-25",
          "host": "x86_64-unknown-linux-gnu",
          "release": "1.86.0-nightly",
          "llvm_version": "19.1.7"
        },
        "installed": [
          {
            "channel": "nightly-2025-01-26-x86_64-unknown-linux-gnu",
            "profile": null,
            "targets": [
              "x86_64-unknown-linux-gnu"
            ],
            "components": [
              "cargo-x86_64-unknown-linux-gnu",
              "clippy-x86_64-unknown-linux-gnu",
              "rust-std-x86_64-unknown-linux-gnu",
              "rustc-x86_64-unknown-linux-gnu",
              "rustfmt-x86_64-unknown-linux-gnu"
            ],
            "toml_path": "/home/runner/check",
            "need_install_clippy": false,
            "peculiar_targets": null
          }
        ]
      },
      "os_checker": {
        "start": 1740774521433,
        "finish": 1740774522400,
        "duration_ms": 967,
        "git_time": "2025-02-16 16:17:11 +0800",
        "git_sha": "379b4c5f3884500f536ea00ffc0672d2af054861"
      }
    },
    "kinds": {
      "order": [
        "Cargo",
        "Clippy(Error)",
        "Clippy(Warn)",
        "Semver Violation",
        "Audit",
        "Mirai",
        "Rapx",
        "Rudra",
        "Lockbud(Probably)",
        "Lockbud(Possibly)",
        "Outdated",
        "Geiger",
        "Unformatted"
      ],
      "mapping": {
        "cargo": [
          "Cargo"
        ],
        "clippy": [
          "Clippy(Error)",
          "Clippy(Warn)"
        ],
        "semver-checks": [
          "Semver Violation"
        ],
        "audit": [
          "Audit"
        ],
        "mirai": [
          "Mirai"
        ],
        "rapx": [
          "Rapx"
        ],
        "rudra": [
          "Rudra"
        ],
        "lockbud": [
          "Lockbud(Probably)",
          "Lockbud(Possibly)"
        ],
        "outdated": [
          "Outdated"
        ],
        "geiger": [
          "Geiger"
        ],
        "fmt": [
          "Unformatted"
        ]
      }
    },
    "repos": [
      {
        "user": "Azure-stars",
        "repo": "kernel_elf_parser"
      },
      {
        "user": "Byte-OS",
        "repo": "ByteOS"
      }
    ],
    "packages": [
      {
        "name": "kernel-elf-parser",
        "repo": {
          "repo_idx": 0,
          "user": "Azure-stars",
          "repo": "kernel_elf_parser"
        }
      },
      {
        "name": "kernel",
        "repo": {
          "repo_idx": 1,
          "user": "Byte-OS",
          "repo": "ByteOS"
        }
      }
    ]
  },
  "cmd": [
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 99,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 99,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 98,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 0,
      "duration_ms": 1097,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-linux-gnu  --no-deps",
      "count": 0,
      "duration_ms": 1961,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 1009,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 0,
      "duration_ms": 411,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none  --no-deps",
      "count": 0,
      "duration_ms": 1776,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf ",
      "count": 1,
      "duration_ms": 655,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu ",
      "count": 1,
      "duration_ms": 1762,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none ",
      "count": 1,
      "duration_ms": 1264,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "semver-checks",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none ",
      "count": 1,
      "duration_ms": 2035,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "mirai",
      "cmd": "cargo +nightly-2025-01-04 mirai --target x86_64-unknown-linux-gnu ",
      "count": 2,
      "duration_ms": 65517,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 572,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 2070,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 1445,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none ",
      "count": 0,
      "duration_ms": 2577,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 99,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 100,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 100,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none ",
      "count": 0,
      "duration_ms": 99,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "rudra",
      "cmd": "cargo +nightly-2021-10-21 rudra --target x86_64-unknown-linux-gnu ",
      "count": 0,
      "duration_ms": 85,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 196,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 165,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 169,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 0,
      "duration_ms": 168,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "geiger",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu geiger --output-format Ascii",
      "count": 0,
      "duration_ms": 70,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1762,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-linux-gnu",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 2035,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 655,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 0,
      "tool": "cargo",
      "cmd": "VRITUAL=semver-checks cargo",
      "count": 1,
      "duration_ms": 1264,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2025-01-25",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 11,
      "duration_ms": 157,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 11,
      "duration_ms": 156,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 11,
      "duration_ms": 154,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 11,
      "duration_ms": 157,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "fmt",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu fmt",
      "count": 11,
      "duration_ms": 155,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target aarch64-unknown-none-softfloat  --no-deps",
      "count": 140,
      "duration_ms": 16648,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target loongarch64-unknown-none  --no-deps",
      "count": 140,
      "duration_ms": 4743,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64gc-unknown-none-elf  --no-deps",
      "count": 137,
      "duration_ms": 4705,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target riscv64imac-unknown-none-elf  --no-deps",
      "count": 137,
      "duration_ms": 4627,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "clippy",
      "cmd": "cargo clippy --target x86_64-unknown-none  --no-deps",
      "count": 139,
      "duration_ms": 6277,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 581,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 217,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 209,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 212,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "audit",
      "cmd": "cargo audit",
      "count": 1,
      "duration_ms": 221,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 3162,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64imac-unknown-none-elf ",
      "count": 0,
      "duration_ms": 1333,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 4979,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 3210,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "lockbud",
      "cmd": "cargo +nightly-2024-12-01 lockbud -k all -- --target loongarch64-unknown-none ",
      "count": 0,
      "duration_ms": 1248,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none ",
      "count": 0,
      "duration_ms": 4659,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf ",
      "count": 0,
      "duration_ms": 4787,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat ",
      "count": 0,
      "duration_ms": 5090,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none ",
      "count": 0,
      "duration_ms": 6717,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "rapx",
      "cmd": "cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64imac-unknown-none-elf ",
      "count": 0,
      "duration_ms": 4842,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 2764,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 2771,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 2417,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 2910,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "outdated",
      "cmd": "cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2",
      "count": 1,
      "duration_ms": 3747,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4787,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4842,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3210,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 6717,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1333,
      "arch": "riscv64imac",
      "target_triple": "riscv64imac-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 3162,
      "arch": "x86_64",
      "target_triple": "x86_64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 4659,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=rapx cargo",
      "count": 1,
      "duration_ms": 5090,
      "arch": "aarch64",
      "target_triple": "aarch64-unknown-none-softfloat",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 4979,
      "arch": "riscv64gc",
      "target_triple": "riscv64gc-unknown-none-elf",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    },
    {
      "package_idx": 1,
      "tool": "cargo",
      "cmd": "VRITUAL=lockbud cargo",
      "count": 1,
      "duration_ms": 1248,
      "arch": "loongarch64",
      "target_triple": "loongarch64-unknown-none",
      "rust_toolchain": "nightly-2023-12-01",
      "features": [],
      "flags": []
    }
  ],
  "data": [
    {
      "cmd_idx": 8,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=kernel-elf-parser, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \ntimestamp=2025-02-27 4:29:17.571883047 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   0.466s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 9,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=kernel-elf-parser, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \ntimestamp=2025-02-27 4:29:15.644911022 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.508s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 10,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=kernel-elf-parser, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \ntimestamp=2025-02-27 4:29:16.914655452 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.071s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/x86_64-unknown-none/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 11,
      "file": "[semver checks]",
      "kind": "Semver Violation",
      "raw": "pkg=kernel-elf-parser, checker=SemverChecks\ntoolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \ntimestamp=2025-02-27 4:29:19.609326264 +08:00:00\n\n\nstdout:\n\nstderr:\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.845s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/aarch64-unknown-none/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/info.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] possible attempt to add with overflow\n   --> src/info.rs:118:9\n    |\n118 | /         self.elf.header.pt2.ph_offset() as usize\n119 | |             + self.base\n120 | |             + self\n121 | |                 .elf\n...   |\n124 | |                 .map(|ph| ph.virtual_addr() as usize)\n125 | |                 .unwrap_or(0)\n    | |_____________________________^\n\n"
    },
    {
      "cmd_idx": 12,
      "file": "src/user_stack.rs",
      "kind": "Mirai",
      "raw": "warning: [MIRAI] assertion failed: stack.get_sp() % 16 == 0\n  --> src/user_stack.rs:88:5\n   |\n88 |     assert!(stack.get_sp() % 16 == 0);\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n"
    },
    {
      "cmd_idx": 27,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-elf-parser, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-linux-gnu\n// features=\n// pkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-linux-gnu \n// timestamp=2025-02-27 4:29:13.882055955 +08:00:00\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.508s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/x86_64-unknown-linux-gnu/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 28,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-elf-parser, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=aarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target aarch64-unknown-none \n// timestamp=2025-02-27 4:29:17.573675101 +08:00:00\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.845s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/aarch64-unknown-none/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 29,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-elf-parser, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-27 4:29:16.916352458 +08:00:00\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   0.466s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/riscv64gc-unknown-none-elf/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 30,
      "file": "(virtual) semver-checks",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel-elf-parser, checker=SemverChecks\n// toolchain=nightly-2025-01-26-x86_64-unknown-linux-gnu, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Azure-stars/kernel_elf_parser\n// cmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu semver-checks --target x86_64-unknown-none \n// timestamp=2025-02-27 4:29:15.649952718 +08:00:00\n    Building kernel-elf-parser v0.3.2 (current)\n       Built [   1.071s] (current)\n     Parsing kernel-elf-parser v0.3.2 (current)\nerror: unsupported rustdoc format v39 for file: /home/runner/check/batch_1/Azure-stars/kernel_elf_parser/target/semver-checks/local-kernel_elf_parser-0_3_2-01666ec060466c14/target/x86_64-unknown-none/doc/kernel_elf_parser.json\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/panic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/panic.rs (original lines from 30 to 30)\n-    \n+\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/syscall/shm.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/shm.rs (original lines from 8 to 8)\n-use polyhal::{addr::{VirtAddr, VirtPage}, MappingFlags};\n+use polyhal::{\n+    addr::{VirtAddr, VirtPage},\n+    MappingFlags,\n+};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 20 to 21)\n-use devices::PAGE_SIZE;\n-use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 23 to 23)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 30 to 30)\n+use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/tasks/elf.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/elf.rs (original lines from 5 to 5)\n-use polyhal::{addr::VirtPage, trapframe::{TrapFrame, TrapFrameArgs}};\n+use polyhal::{\n+    addr::VirtPage,\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 2 to 2)\n-use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 8 to 8)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/tasks/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/task.rs (original lines from 13 to 13)\n-use polyhal::{addr::{PhysPage, VirtAddr, VirtPage}, trapframe::{TrapFrame, TrapFrameArgs}, MappingFlags, MappingSize, PageTableWrapper};\n+use polyhal::{\n+    addr::{PhysPage, VirtAddr, VirtPage},\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+    MappingFlags, MappingSize, PageTableWrapper,\n+};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 1 to 3)\n-use polyhal::trap::{run_user_task, EscapeReason};\n-use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n-use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 31,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 10 to 10)\n+use polyhal::trap::{run_user_task, EscapeReason};\n+use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n+use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/panic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/panic.rs (original lines from 30 to 30)\n-    \n+\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/syscall/shm.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/shm.rs (original lines from 8 to 8)\n-use polyhal::{addr::{VirtAddr, VirtPage}, MappingFlags};\n+use polyhal::{\n+    addr::{VirtAddr, VirtPage},\n+    MappingFlags,\n+};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 20 to 21)\n-use devices::PAGE_SIZE;\n-use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 23 to 23)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 30 to 30)\n+use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/tasks/elf.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/elf.rs (original lines from 5 to 5)\n-use polyhal::{addr::VirtPage, trapframe::{TrapFrame, TrapFrameArgs}};\n+use polyhal::{\n+    addr::VirtPage,\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 2 to 2)\n-use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 8 to 8)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/tasks/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/task.rs (original lines from 13 to 13)\n-use polyhal::{addr::{PhysPage, VirtAddr, VirtPage}, trapframe::{TrapFrame, TrapFrameArgs}, MappingFlags, MappingSize, PageTableWrapper};\n+use polyhal::{\n+    addr::{PhysPage, VirtAddr, VirtPage},\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+    MappingFlags, MappingSize, PageTableWrapper,\n+};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 1 to 3)\n-use polyhal::trap::{run_user_task, EscapeReason};\n-use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n-use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 32,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 10 to 10)\n+use polyhal::trap::{run_user_task, EscapeReason};\n+use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n+use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/panic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/panic.rs (original lines from 30 to 30)\n-    \n+\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/syscall/shm.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/shm.rs (original lines from 8 to 8)\n-use polyhal::{addr::{VirtAddr, VirtPage}, MappingFlags};\n+use polyhal::{\n+    addr::{VirtAddr, VirtPage},\n+    MappingFlags,\n+};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 20 to 21)\n-use devices::PAGE_SIZE;\n-use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 23 to 23)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 30 to 30)\n+use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/tasks/elf.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/elf.rs (original lines from 5 to 5)\n-use polyhal::{addr::VirtPage, trapframe::{TrapFrame, TrapFrameArgs}};\n+use polyhal::{\n+    addr::VirtPage,\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 2 to 2)\n-use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 8 to 8)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/tasks/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/task.rs (original lines from 13 to 13)\n-use polyhal::{addr::{PhysPage, VirtAddr, VirtPage}, trapframe::{TrapFrame, TrapFrameArgs}, MappingFlags, MappingSize, PageTableWrapper};\n+use polyhal::{\n+    addr::{PhysPage, VirtAddr, VirtPage},\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+    MappingFlags, MappingSize, PageTableWrapper,\n+};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 1 to 3)\n-use polyhal::trap::{run_user_task, EscapeReason};\n-use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n-use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 33,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 10 to 10)\n+use polyhal::trap::{run_user_task, EscapeReason};\n+use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n+use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/panic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/panic.rs (original lines from 30 to 30)\n-    \n+\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/syscall/shm.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/shm.rs (original lines from 8 to 8)\n-use polyhal::{addr::{VirtAddr, VirtPage}, MappingFlags};\n+use polyhal::{\n+    addr::{VirtAddr, VirtPage},\n+    MappingFlags,\n+};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 20 to 21)\n-use devices::PAGE_SIZE;\n-use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 23 to 23)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 30 to 30)\n+use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/tasks/elf.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/elf.rs (original lines from 5 to 5)\n-use polyhal::{addr::VirtPage, trapframe::{TrapFrame, TrapFrameArgs}};\n+use polyhal::{\n+    addr::VirtPage,\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 2 to 2)\n-use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 8 to 8)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/tasks/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/task.rs (original lines from 13 to 13)\n-use polyhal::{addr::{PhysPage, VirtAddr, VirtPage}, trapframe::{TrapFrame, TrapFrameArgs}, MappingFlags, MappingSize, PageTableWrapper};\n+use polyhal::{\n+    addr::{PhysPage, VirtAddr, VirtPage},\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+    MappingFlags, MappingSize, PageTableWrapper,\n+};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 1 to 3)\n-use polyhal::trap::{run_user_task, EscapeReason};\n-use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n-use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 34,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 10 to 10)\n+use polyhal::trap::{run_user_task, EscapeReason};\n+use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n+use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/panic.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/panic.rs (original lines from 30 to 30)\n-    \n+\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/syscall/shm.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/shm.rs (original lines from 8 to 8)\n-use polyhal::{addr::{VirtAddr, VirtPage}, MappingFlags};\n+use polyhal::{\n+    addr::{VirtAddr, VirtPage},\n+    MappingFlags,\n+};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 20 to 21)\n-use devices::PAGE_SIZE;\n-use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 23 to 23)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/syscall/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/syscall/task.rs (original lines from 30 to 30)\n+use polyhal::{trapframe::TrapFrameArgs, MappingFlags, Time, VirtPage};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/tasks/elf.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/elf.rs (original lines from 5 to 5)\n-use polyhal::{addr::VirtPage, trapframe::{TrapFrame, TrapFrameArgs}};\n+use polyhal::{\n+    addr::VirtPage,\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 2 to 2)\n-use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/tasks/memset.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/memset.rs (original lines from 8 to 8)\n+use devices::PAGE_SIZE;\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/tasks/task.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/tasks/task.rs (original lines from 13 to 13)\n-use polyhal::{addr::{PhysPage, VirtAddr, VirtPage}, trapframe::{TrapFrame, TrapFrameArgs}, MappingFlags, MappingSize, PageTableWrapper};\n+use polyhal::{\n+    addr::{PhysPage, VirtAddr, VirtPage},\n+    trapframe::{TrapFrame, TrapFrameArgs},\n+    MappingFlags, MappingSize, PageTableWrapper,\n+};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 1 to 3)\n-use polyhal::trap::{run_user_task, EscapeReason};\n-use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n-use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 35,
      "file": "src/user/mod.rs",
      "kind": "Unformatted",
      "raw": "file: /home/runner/check/batch_1/Byte-OS/ByteOS/kernel/src/user/mod.rs (original lines from 10 to 10)\n+use polyhal::trap::{run_user_task, EscapeReason};\n+use polyhal::trapframe::{TrapFrame, TrapFrameArgs};\n+use polyhal::{MappingFlags, Time};\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:727:24\n    |\n727 |                   } else {\n    |  ________________________^\n728 | |                     if let Some(index) = target_signal.real_time_index() {\n729 | |                         child_tcb.signal_queue[index] += 1;\n730 | |                     }\n731 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n727 ~                 } else if let Some(index) = target_signal.real_time_index() {\n728 +                     child_tcb.signal_queue[index] += 1;\n729 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:36\n    |\n758 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:759:37\n    |\n759 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:36\n    |\n762 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:763:37\n    |\n763 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:69:45\n   |\n69 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:127:26\n    |\n127 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:193:16\n    |\n193 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:244:59\n    |\n244 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:190:5\n    |\n190 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:249:79\n    |\n249 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n272 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:406:14\n    |\n406 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:412:14\n    |\n412 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:461:31\n    |\n461 |           let clear_child_tid = flags\n    |  _______________________________^\n462 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n463 | |             .then_some(ctid)\n464 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n461 ~         let clear_child_tid = if flags\n462 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:514:21\n    |\n514 | /                     inner\n515 | |                         .children\n516 | |                         .iter()\n517 | |                         .find(|x| x.task_id == pid as usize)\n518 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n514 ~                     inner\n515 +                         .children\n516 +                         .iter()\n517 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:525:17\n    |\n525 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:555:24\n    |\n555 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:699:17\n    |\n699 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n699 -                 return Err(LinuxError::EPERM);\n699 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:707:13\n    |\n707 | /             x.threads\n708 | |                 .iter()\n709 | |                 .find(|x| match x.upgrade() {\n710 | |                     Some(thread) => thread.task_id == tid,\n711 | |                     None => false,\n712 | |                 })\n713 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n707 ~             x.threads\n708 +                 .iter()\n709 +                 .find(|x| match x.upgrade() {\n710 +                     Some(thread) => thread.task_id == tid,\n711 +                     None => false,\n712 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:139:5\n    |\n139 | /     pub fn map_frames(\n140 | |         &self,\n141 | |         vpn: VirtPage,\n142 | |         mtype: MemType,\n...   |\n147 | |         len: usize,\n148 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:317:29\n    |\n317 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:357:17\n    |\n357 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:358:22\n    |\n358 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 36,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:79:13\n   |\n79 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n79 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:727:24\n    |\n727 |                   } else {\n    |  ________________________^\n728 | |                     if let Some(index) = target_signal.real_time_index() {\n729 | |                         child_tcb.signal_queue[index] += 1;\n730 | |                     }\n731 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n727 ~                 } else if let Some(index) = target_signal.real_time_index() {\n728 +                     child_tcb.signal_queue[index] += 1;\n729 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:36\n    |\n758 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:759:37\n    |\n759 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:36\n    |\n762 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:763:37\n    |\n763 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:69:45\n   |\n69 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:127:26\n    |\n127 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:193:16\n    |\n193 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:244:59\n    |\n244 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:190:5\n    |\n190 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:249:79\n    |\n249 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n272 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:406:14\n    |\n406 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:412:14\n    |\n412 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:461:31\n    |\n461 |           let clear_child_tid = flags\n    |  _______________________________^\n462 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n463 | |             .then_some(ctid)\n464 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n461 ~         let clear_child_tid = if flags\n462 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:514:21\n    |\n514 | /                     inner\n515 | |                         .children\n516 | |                         .iter()\n517 | |                         .find(|x| x.task_id == pid as usize)\n518 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n514 ~                     inner\n515 +                         .children\n516 +                         .iter()\n517 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:525:17\n    |\n525 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:555:24\n    |\n555 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:699:17\n    |\n699 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n699 -                 return Err(LinuxError::EPERM);\n699 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:707:13\n    |\n707 | /             x.threads\n708 | |                 .iter()\n709 | |                 .find(|x| match x.upgrade() {\n710 | |                     Some(thread) => thread.task_id == tid,\n711 | |                     None => false,\n712 | |                 })\n713 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n707 ~             x.threads\n708 +                 .iter()\n709 +                 .find(|x| match x.upgrade() {\n710 +                     Some(thread) => thread.task_id == tid,\n711 +                     None => false,\n712 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:139:5\n    |\n139 | /     pub fn map_frames(\n140 | |         &self,\n141 | |         vpn: VirtPage,\n142 | |         mtype: MemType,\n...   |\n147 | |         len: usize,\n148 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:317:29\n    |\n317 |         new_tcb_writer.cx = self.tcb.read().cx.clone();\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.tcb.read().cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:357:17\n    |\n357 |             cx: parent_tcb.cx.clone(),\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.cx`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:358:22\n    |\n358 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `TrapFrame` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:57:24\n   |\n57 |         let store_cx = cx_ref.clone();\n   |                        ^^^^^^^^^^^^^^ help: try dereferencing it: `*cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 37,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:79:13\n   |\n79 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n79 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:727:24\n    |\n727 |                   } else {\n    |  ________________________^\n728 | |                     if let Some(index) = target_signal.real_time_index() {\n729 | |                         child_tcb.signal_queue[index] += 1;\n730 | |                     }\n731 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n727 ~                 } else if let Some(index) = target_signal.real_time_index() {\n728 +                     child_tcb.signal_queue[index] += 1;\n729 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:36\n    |\n758 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:759:37\n    |\n759 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:36\n    |\n762 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:763:37\n    |\n763 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:69:45\n   |\n69 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:127:26\n    |\n127 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:193:16\n    |\n193 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:244:59\n    |\n244 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:190:5\n    |\n190 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:249:79\n    |\n249 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n272 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:406:14\n    |\n406 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:412:14\n    |\n412 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:461:31\n    |\n461 |           let clear_child_tid = flags\n    |  _______________________________^\n462 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n463 | |             .then_some(ctid)\n464 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n461 ~         let clear_child_tid = if flags\n462 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:514:21\n    |\n514 | /                     inner\n515 | |                         .children\n516 | |                         .iter()\n517 | |                         .find(|x| x.task_id == pid as usize)\n518 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n514 ~                     inner\n515 +                         .children\n516 +                         .iter()\n517 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:525:17\n    |\n525 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:555:24\n    |\n555 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:699:17\n    |\n699 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n699 -                 return Err(LinuxError::EPERM);\n699 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:707:13\n    |\n707 | /             x.threads\n708 | |                 .iter()\n709 | |                 .find(|x| match x.upgrade() {\n710 | |                     Some(thread) => thread.task_id == tid,\n711 | |                     None => false,\n712 | |                 })\n713 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n707 ~             x.threads\n708 +                 .iter()\n709 +                 .find(|x| match x.upgrade() {\n710 +                     Some(thread) => thread.task_id == tid,\n711 +                     None => false,\n712 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:139:5\n    |\n139 | /     pub fn map_frames(\n140 | |         &self,\n141 | |         vpn: VirtPage,\n142 | |         mtype: MemType,\n...   |\n147 | |         len: usize,\n148 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:358:22\n    |\n358 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 38,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:79:13\n   |\n79 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n79 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:727:24\n    |\n727 |                   } else {\n    |  ________________________^\n728 | |                     if let Some(index) = target_signal.real_time_index() {\n729 | |                         child_tcb.signal_queue[index] += 1;\n730 | |                     }\n731 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n727 ~                 } else if let Some(index) = target_signal.real_time_index() {\n728 +                     child_tcb.signal_queue[index] += 1;\n729 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:36\n    |\n758 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:759:37\n    |\n759 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:36\n    |\n762 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:763:37\n    |\n763 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:69:45\n   |\n69 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:127:26\n    |\n127 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:193:16\n    |\n193 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:244:59\n    |\n244 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:190:5\n    |\n190 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:249:79\n    |\n249 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n272 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:406:14\n    |\n406 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:412:14\n    |\n412 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:461:31\n    |\n461 |           let clear_child_tid = flags\n    |  _______________________________^\n462 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n463 | |             .then_some(ctid)\n464 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n461 ~         let clear_child_tid = if flags\n462 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:514:21\n    |\n514 | /                     inner\n515 | |                         .children\n516 | |                         .iter()\n517 | |                         .find(|x| x.task_id == pid as usize)\n518 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n514 ~                     inner\n515 +                         .children\n516 +                         .iter()\n517 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:525:17\n    |\n525 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:555:24\n    |\n555 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:699:17\n    |\n699 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n699 -                 return Err(LinuxError::EPERM);\n699 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:707:13\n    |\n707 | /             x.threads\n708 | |                 .iter()\n709 | |                 .find(|x| match x.upgrade() {\n710 | |                     Some(thread) => thread.task_id == tid,\n711 | |                     None => false,\n712 | |                 })\n713 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n707 ~             x.threads\n708 +                 .iter()\n709 +                 .find(|x| match x.upgrade() {\n710 +                     Some(thread) => thread.task_id == tid,\n711 +                     None => false,\n712 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:139:5\n    |\n139 | /     pub fn map_frames(\n140 | |         &self,\n141 | |         vpn: VirtPage,\n142 | |         mtype: MemType,\n...   |\n147 | |         len: usize,\n148 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:358:22\n    |\n358 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 39,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:79:13\n   |\n79 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n79 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n  --> kernel/build.rs:17:12\n   |\n17 |         if module == \"\" {\n   |            ^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `module.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n   = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:20:84\n   |\n20 |         module_file_content.push_str(&format!(\"extern crate {};\\n\", module.replace(\"-\", \"_\")))\n   |                                                                                    ^^^ help: try using a `char` instead: `'-'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/build.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/build.rs:29:16\n   |\n29 |         .split(\",\")\n   |                ^^^ help: try using a `char` instead: `','`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded sub `cfg` when there is only one condition\n   --> kernel/src/syscall/mod.rs:381:19\n    |\n381 |             #[cfg(any(target_arch = \"x86_64\"))]\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `target_arch = \"x86_64\"`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#non_minimal_cfg\n    = note: `#[warn(clippy::non_minimal_cfg)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:699:57\n    |\n699 |         let etime = current_nsec() + timeout as usize * 0x1000_000;\n    |                                                         ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n    = note: `#[warn(clippy::unusual_byte_groupings)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits of hex, binary or octal literal not in groups of equal size\n   --> kernel/src/syscall/fd.rs:936:31\n    |\n936 |             stime + timeout * 0x1000_000\n    |                               ^^^^^^^^^^ help: consider: `0x0100_0000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unusual_byte_groupings\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this is a decimal constant\n  --> kernel/src/syscall/shm.rs:31:21\n   |\n31 |         if shmflg & 01000 > 0 {\n   |                     ^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#zero_prefixed_literal\n   = note: `#[warn(clippy::zero_prefixed_literal)]` on by default\nhelp: if you mean to use a decimal constant, remove the `0` to avoid confusion\n   |\n31 |         if shmflg & 1000 > 0 {\n   |                     ~~~~\nhelp: if you mean to use an octal constant, use `0o`\n   |\n31 |         if shmflg & 0o1000 > 0 {\n   |                     ~~~~~~\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `else { if .. }` block can be collapsed\n   --> kernel/src/syscall/task.rs:727:24\n    |\n727 |                   } else {\n    |  ________________________^\n728 | |                     if let Some(index) = target_signal.real_time_index() {\n729 | |                         child_tcb.signal_queue[index] += 1;\n730 | |                     }\n731 | |                 }\n    | |_________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_else_if\n    = note: `#[warn(clippy::collapsible_else_if)]` on by default\nhelp: collapse nested if block\n    |\n727 ~                 } else if let Some(index) = target_signal.real_time_index() {\n728 +                     child_tcb.signal_queue[index] += 1;\n729 +                 }\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:758:36\n    |\n758 |             sec: stime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n    = note: `#[warn(clippy::inconsistent_digit_grouping)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:759:37\n    |\n759 |             usec: stime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:762:36\n    |\n762 |             sec: utime.to_usec() / 1000_000,\n    |                                    ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: digits grouped inconsistently by underscores\n   --> kernel/src/syscall/task.rs:763:37\n    |\n763 |             usec: utime.to_usec() % 1000_000,\n    |                                     ^^^^^^^^ help: consider: `1_000_000`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#inconsistent_digit_grouping\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: constants have by default a `'static` lifetime\n   --> kernel/src/tasks/initproc.rs:213:27\n    |\n213 | pub const USER_WORK_DIR: &'static str = \"/\";\n    |                          -^^^^^^^---- help: consider removing `'static`: `&str`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_static_lifetimes\n    = note: `#[warn(clippy::redundant_static_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:42:9\n   |\n42 | /         if events.contains(PollEvent::POLLOUT) {\n43 | |             if self.inner.lock().len() <= 0x50000 {\n44 | |                 res |= PollEvent::POLLOUT;\n45 | |             }\n46 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\n   = note: `#[warn(clippy::collapsible_if)]` on by default\nhelp: collapse nested if block\n   |\n42 ~         if events.contains(PollEvent::POLLOUT) && self.inner.lock().len() <= 0x50000 {\n43 +             res |= PollEvent::POLLOUT;\n44 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `if` statement can be collapsed\n  --> kernel/src/user/socket_pair.rs:47:9\n   |\n47 | /         if events.contains(PollEvent::POLLIN) {\n48 | |             if self.inner.lock().len() > 0 {\n49 | |                 res |= PollEvent::POLLIN;\n50 | |             }\n51 | |         }\n   | |_________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#collapsible_if\nhelp: collapse nested if block\n   |\n47 ~         if events.contains(PollEvent::POLLIN) && self.inner.lock().len() > 0 {\n48 +             res |= PollEvent::POLLIN;\n49 +         }\n   |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/epoll/mod.rs:65:17\n   |\n65 | //                 self.data.lock().get_mut(&fd).map(|x| {\n66 | ||                     *x = ev;\n67 | ||                 });\n   | ||__________________^- help: try: `if let Some(x) = self.data.lock().get_mut(&fd) { *x = ev; }`\n   |  |__________________|\n   | \n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\n   = note: `#[warn(clippy::option_map_unit_fn)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ADD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:79:5\n   |\n79 |     ADD = 1,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Add`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n   = note: `#[warn(clippy::upper_case_acronyms)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DEL` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:80:5\n   |\n80 |     DEL = 2,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Del`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/epoll/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `MOD` contains a capitalized acronym\n  --> kernel/src/epoll/mod.rs:81:5\n   |\n81 |     MOD = 3,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Mod`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `STEAM` contains a capitalized acronym\n  --> kernel/src/socket.rs:15:5\n   |\n15 |     STEAM,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Steam`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DGRAME` contains a capitalized acronym\n  --> kernel/src/socket.rs:16:5\n   |\n16 |     DGRAME,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dgrame`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `RAW` contains a capitalized acronym\n  --> kernel/src/socket.rs:17:5\n   |\n17 |     RAW,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Raw`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/socket.rs:163:12\n    |\n163 |         if data.len() == 0 {\n    |            ^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `data.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n    = note: `#[warn(clippy::len_zero)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/socket.rs:186:33\n    |\n186 |         match self.inner.sendto(&buffer, None) {\n    |                                 ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n    = note: `#[warn(clippy::needless_borrow)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPERM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:21:5\n   |\n21 |     EPERM = 1,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eperm`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOENT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:23:5\n   |\n23 |     ENOENT = 2,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoent`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESRCH` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:25:5\n   |\n25 |     ESRCH = 3,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Esrch`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINTR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:27:5\n   |\n27 |     EINTR = 4,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eintr`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:29:5\n   |\n29 |     EIO = 5,\n   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Eio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENXIO` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:31:5\n   |\n31 |     ENXIO = 6,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enxio`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOEXEC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:35:5\n   |\n35 |     ENOEXEC = 8,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enoexec`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBADF` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:37:5\n   |\n37 |     EBADF = 9,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebadf`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECHILD` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:39:5\n   |\n39 |     ECHILD = 10,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Echild`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAGAIN` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:41:5\n   |\n41 |     EAGAIN = 11,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eagain`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOMEM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:43:5\n   |\n43 |     ENOMEM = 12,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enomem`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EACCES` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:45:5\n   |\n45 |     EACCES = 13,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eacces`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFAULT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:47:5\n   |\n47 |     EFAULT = 14,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efault`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTBLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:49:5\n   |\n49 |     ENOTBLK = 15,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotblk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EBUSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:51:5\n   |\n51 |     EBUSY = 16,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ebusy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EEXIST` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:53:5\n   |\n53 |     EEXIST = 17,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eexist`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EXDEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:55:5\n   |\n55 |     EXDEV = 18,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Exdev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENODEV` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:57:5\n   |\n57 |     ENODEV = 19,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enodev`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:59:5\n   |\n59 |     ENOTDIR = 20,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EISDIR` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:61:5\n   |\n61 |     EISDIR = 21,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eisdir`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EINVAL` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:63:5\n   |\n63 |     EINVAL = 22,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Einval`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:65:5\n   |\n65 |     ENFILE = 23,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMFILE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:67:5\n   |\n67 |     EMFILE = 24,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emfile`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:69:5\n   |\n69 |     ENOTTY = 25,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETXTBSY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:71:5\n   |\n71 |     ETXTBSY = 26,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etxtbsy`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EFBIG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:73:5\n   |\n73 |     EFBIG = 27,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Efbig`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSPC` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:75:5\n   |\n75 |     ENOSPC = 28,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enospc`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ESPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:77:5\n   |\n77 |     ESPIPE = 29,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Espipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EROFS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:79:5\n   |\n79 |     EROFS = 30,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erofs`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EMLINK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:81:5\n   |\n81 |     EMLINK = 31,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Emlink`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EPIPE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:83:5\n   |\n83 |     EPIPE = 32,\n   |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Epipe`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDOM` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:85:5\n   |\n85 |     EDOM = 33,\n   |     ^^^^ help: consider making the acronym lowercase, except the initial letter: `Edom`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ERANGE` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:87:5\n   |\n87 |     ERANGE = 34,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Erange`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EDEADLK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:89:5\n   |\n89 |     EDEADLK = 35,\n   |     ^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Edeadlk`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENAMETOOLONG` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:91:5\n   |\n91 |     ENAMETOOLONG = 36,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enametoolong`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOLCK` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:93:5\n   |\n93 |     ENOLCK = 37,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enolck`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOSYS` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:95:5\n   |\n95 |     ENOSYS = 38,\n   |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enosys`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTEMPTY` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:97:5\n   |\n97 |     ENOTEMPTY = 39,\n   |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotempty`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EAFNOSUPPORT` contains a capitalized acronym\n  --> kernel/src/syscall/consts.rs:99:5\n   |\n99 |     EAFNOSUPPORT = 97,\n   |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Eafnosupport`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ENOTCONN` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:101:5\n    |\n101 |     ENOTCONN = 107,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Enotconn`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ETIMEDOUT` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:103:5\n    |\n103 |     ETIMEDOUT = 100,\n    |     ^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Etimedout`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `ECONNREFUSED` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:105:5\n    |\n105 |     ECONNREFUSED = 111,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Econnrefused`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `EALREADY` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:107:5\n    |\n107 |     EALREADY = 114,\n    |     ^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Ealready`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting integer literal to `isize` is unnecessary\n   --> kernel/src/syscall/consts.rs:422:27\n    |\n422 | pub const AT_CWD: usize = -100 as isize as usize;\n    |                           ^^^^^^^^^^^^^ help: try: `-100_isize`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n    = note: `#[warn(clippy::unnecessary_cast)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:509:1\n    |\n509 | impl Into<MappingFlags> for MmapProt {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\n    = note: `#[warn(clippy::from_over_into)]` on by default\nhelp: replace the `Into` implementation with `From<syscall::consts::MmapProt>`\n    |\n509 ~ impl From<MmapProt> for MappingFlags {\n510 ~     fn from(val: MmapProt) -> Self {\n511 |         let mut res = MappingFlags::empty();\n512 ~         if val.contains(MmapProt::PROT_READ) {\n513 |             res |= MappingFlags::R;\n514 |         }\n515 ~         if val.contains(MmapProt::PROT_WRITE) {\n516 |             res |= MappingFlags::W;\n517 |         }\n518 ~         if val.contains(MmapProt::PROT_EXEC) {\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:607:5\n    |\n607 |     DUPFD = 0,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:609:5\n    |\n609 |     GETFD = 1,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFD` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:611:5\n    |\n611 |     SETFD = 2,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfd`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:613:5\n    |\n613 |     GETFL = 3,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETFL` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:615:5\n    |\n615 |     SETFL = 4,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setfl`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `GETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:617:5\n    |\n617 |     GETLK = 5,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Getlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLK` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:619:5\n    |\n619 |     SETLK = 6,\n    |     ^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlk`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `SETLKW` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:621:5\n    |\n621 |     SETLKW = 7,\n    |     ^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Setlkw`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `DUPFDCLOEXEC` contains a capitalized acronym\n   --> kernel/src/syscall/consts.rs:623:5\n    |\n623 |     DUPFDCLOEXEC = 0x406,\n    |     ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `Dupfdcloexec`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/consts.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: an implementation of `From` is preferred since it gives you `Into<_>` for free where the reverse isn't true\n   --> kernel/src/syscall/consts.rs:872:1\n    |\n872 | impl<T> Into<usize> for UserRef<T> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `impl From<Local> for Foreign` is allowed by the orphan rules, for more information see\n            https://doc.rust-lang.org/reference/items/implementations.html#trait-implementation-coherence\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#from_over_into\nhelp: replace the `Into` implementation with `From<syscall::consts::UserRef<T>>`\n    |\n872 ~ impl<T> From<UserRef<T>> for usize {\n873 ~     fn from(val: UserRef<T>) -> Self {\n874 ~         val.addr.addr()\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n  --> kernel/src/syscall/fd.rs:26:8\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |        ^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!path.is_empty()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n  --> kernel/src/syscall/fd.rs:26:43\n   |\n26 |     if path.len() > 0 && path.starts_with(\"/\") {\n   |                                           ^^^ help: try using a `char` instead: `'/'`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n   = note: `#[warn(clippy::single_char_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/fd.rs:298:50\n    |\n298 |         dentry_open(dir.dentry.clone().unwrap(), &path, OpenFlags::NONE)\n    |                                                  ^^^^^ help: change this to: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `ts`\n   --> kernel/src/syscall/fd.rs:529:26\n    |\n529 |                 for i in 0..2 {\n    |                          ^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\n    = note: `#[warn(clippy::needless_range_loop)]` on by default\nhelp: consider using an iterator\n    |\n529 |                 for <item> in ts.iter().take(2) {\n    |                     ~~~~~~    ~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:667:22\n    |\n667 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n667 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the loop variable `i` is only used to index `poll_fds`\n   --> kernel/src/syscall/fd.rs:702:22\n    |\n702 |             for i in 0..nfds {\n    |                      ^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_range_loop\nhelp: consider using an iterator\n    |\n702 |             for <item> in poll_fds.iter_mut().take(nfds) {\n    |                 ~~~~~~    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/fd.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: the method `writeat` doesn't need a mutable reference\n   --> kernel/src/syscall/fd.rs:995:46\n    |\n995 |                 .writeat(*off_out.get_ref(), &mut buffer[..rsize])\n    |                                              ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n    = note: `#[warn(clippy::unnecessary_mut_passed)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this loop could be written as a `while let` loop\n   --> kernel/src/syscall/socket.rs:237:9\n    |\n237 | /         loop {\n238 | |             match socket.inner.clone().connect(remote) {\n239 | |                 Err(NetServerError::Blocking) => {}\n240 | |                 _ => break,\n241 | |             }\n242 | |             yield_now().await;\n243 | |         }\n    | |_________^ help: try: `while let Err(NetServerError::Blocking) = socket.inner.clone().connect(remote) { .. }`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#while_let_loop\n    = note: `#[warn(clippy::while_let_loop)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/socket.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `Ipv4Addr` which implements the `Copy` trait\n   --> kernel/src/syscall/socket.rs:488:27\n    |\n488 |                 sa.addr = new_socket.get_remote().unwrap().ip().clone();\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try dereferencing it: `*new_socket.get_remote().unwrap().ip()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n    = note: `#[warn(clippy::clone_on_copy)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/syscall/task.rs:69:45\n   |\n69 |     if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n   |                                             ^^^^^^^ help: change this to: `buffer`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: redundant closure\n   --> kernel/src/syscall/task.rs:127:26\n    |\n127 |                     .map(|x| Arc::new(x))\n    |                          ^^^^^^^^^^^^^^^ help: replace the closure with the function itself: `Arc::new`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure\n    = note: `#[warn(clippy::redundant_closure)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `alloc::string::String`\n   --> kernel/src/syscall/task.rs:193:16\n    |\n193 |     let path = String::from(path);\n    |                ^^^^^^^^^^^^^^^^^^ help: consider removing `String::from()`: `path`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n    = note: `#[warn(clippy::useless_conversion)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/syscall/task.rs:244:59\n    |\n244 |         let elf = if let Ok(elf) = xmas_elf::ElfFile::new(&buffer) {\n    |                                                           ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: parameter is only used in recursion\n   --> kernel/src/syscall/task.rs:190:5\n    |\n190 |     envp: Vec<String>,\n    |     ^^^^ help: if this is intentional, prefix it with an underscore: `_envp`\n    |\nnote: parameter used here\n   --> kernel/src/syscall/task.rs:249:79\n    |\n249 |             return exec_with_process(task, String::from(\"busybox\"), new_args, envp).await;\n    |                                                                               ^^^^\n...\n272 |                 return exec_with_process(task, new_args[0].clone(), new_args, envp).await;\n    |                                                                               ^^^^\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#only_used_in_recursion\n    = note: `#[warn(clippy::only_used_in_recursion)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:406:14\n    |\n406 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n    = note: `#[warn(clippy::into_iter_on_ref)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this `.into_iter()` call is equivalent to `.iter_mut()` and will not consume the `slice`\n   --> kernel/src/syscall/task.rs:412:14\n    |\n412 |             .into_iter()\n    |              ^^^^^^^^^ help: call directly: `iter_mut`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#into_iter_on_ref\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: use of `.then_some(..).unwrap_or(..)` can be written more clearly with `if .. else ..`\n   --> kernel/src/syscall/task.rs:461:31\n    |\n461 |           let clear_child_tid = flags\n    |  _______________________________^\n462 | |             .contains(CloneFlags::CLONE_CHILD_CLEARTID)\n463 | |             .then_some(ctid)\n464 | |             .unwrap_or(UserRef::from(0));\n    | |________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#obfuscated_if_else\n    = note: `#[warn(clippy::obfuscated_if_else)]` on by default\nhelp: try\n    |\n461 ~         let clear_child_tid = if flags\n462 ~             .contains(CloneFlags::CLONE_CHILD_CLEARTID) { ctid } else { UserRef::from(0) };\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:514:21\n    |\n514 | /                     inner\n515 | |                         .children\n516 | |                         .iter()\n517 | |                         .find(|x| x.task_id == pid as usize)\n518 | |                         .map(|x| x.clone())\n    | |___________________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\n    = note: `#[warn(clippy::map_clone)]` on by default\nhelp: consider calling the dedicated `cloned` method\n    |\n514 ~                     inner\n515 +                         .children\n516 +                         .iter()\n517 +                         .find(|x| x.task_id == pid as usize).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `.iter().count()` on a `Vec`\n   --> kernel/src/syscall/task.rs:525:17\n    |\n525 |                 self.task.pcb.lock().children.iter().count()\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `self.task.pcb.lock().children.len()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n    = note: `#[warn(clippy::iter_count)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map_or(None, ..)` on an `Option` value. This can be done more directly by calling `and_then(..)` instead\n   --> kernel/src/syscall/task.rs:555:24\n    |\n555 |             let exit = child_task.clone().map_or(None, |x| x.exit_code());\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try using `and_then` instead: `child_task.clone().and_then(|x| x.exit_code())`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_or_none\n    = note: `#[warn(clippy::option_map_or_none)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/syscall/task.rs:699:17\n    |\n699 |                 return Err(LinuxError::EPERM);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\n    = note: `#[warn(clippy::needless_return)]` on by default\nhelp: remove `return`\n    |\n699 -                 return Err(LinuxError::EPERM);\n699 +                 Err(LinuxError::EPERM)\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you are using an explicit closure for cloning elements\n   --> kernel/src/syscall/task.rs:707:13\n    |\n707 | /             x.threads\n708 | |                 .iter()\n709 | |                 .find(|x| match x.upgrade() {\n710 | |                     Some(thread) => thread.task_id == tid,\n711 | |                     None => false,\n712 | |                 })\n713 | |                 .map(|x| x.clone())\n    | |___________________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_clone\nhelp: consider calling the dedicated `cloned` method\n    |\n707 ~             x.threads\n708 +                 .iter()\n709 +                 .find(|x| match x.upgrade() {\n710 +                     Some(thread) => thread.task_id == tid,\n711 +                     None => false,\n712 +                 }).cloned()\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/syscall/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `usize`\n   --> kernel/src/syscall/mod.rs:255:21\n    |\n255 |                     args[5].into(),\n    |                     ^^^^^^^^^^^^^^ help: consider removing `.into()`: `args[5]`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/async_ops.rs:67:10\n   |\n67 |           .find(|x| x.contains(&task_id))\n   |  __________^\n68 | |         .is_some()\n   | |__________________^ help: use `any()` instead: `any(|x| x.contains(&task_id))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n   = note: `#[warn(clippy::search_is_some)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `map(f)` on an `Option` value where `f` is a closure that returns the unit type `()`\n  --> kernel/src/tasks/async_ops.rs:81:21\n   |\n81 | /                     self.0\n82 | |                         .lock()\n83 | |                         .values_mut()\n84 | |                         .find(|x| x.contains(&self.1))\n85 | |                         .map(|x| x.retain(|x| *x != self.1));\n   | |____________________________________________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#option_map_unit_fn\nhelp: try\n   |\n81 ~                     if let Some(x) = self.0\n82 +                         .lock()\n83 +                         .values_mut()\n84 +                         .find(|x| x.contains(&self.1)) { x.retain(|x| *x != self.1) }\n   |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:121:41\n    |\n121 |             .map(|x| x.drain(..cmp::min(wake_count as usize, que_size)));\n    |                                         ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:138:28\n    |\n138 |         .map(|x| x.drain(..wake_count as usize).count())\n    |                            ^^^^^^^^^^^^^^^^^^^ help: try: `wake_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`usize` -> `usize`)\n   --> kernel/src/tasks/async_ops.rs:143:28\n    |\n143 |         .map(|x| x.drain(..reque_count as usize).collect());\n    |                            ^^^^^^^^^^^^^^^^^^^^ help: try: `reque_count`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/async_ops.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: usage of `contains_key` followed by `insert` on a `BTreeMap`\n   --> kernel/src/tasks/async_ops.rs:146:9\n    |\n146 | /         if !futex_table.contains_key(&uaddr2) {\n147 | |             futex_table.insert(uaddr2, vec![]);\n148 | |         }\n    | |_________^ help: try: `futex_table.entry(uaddr2).or_insert_with(|| vec![]);`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#map_entry\n    = note: `#[warn(clippy::map_entry)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/elf.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (10/7)\n   --> kernel/src/tasks/elf.rs:108:1\n    |\n108 | / pub fn init_task_stack(\n109 | |     user_task: Arc<UserTask>,\n110 | |     args: Vec<String>,\n111 | |     base: usize,\n...   |\n118 | |     tls: usize,\n119 | | ) {\n    | |_^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n    = note: `#[warn(clippy::too_many_arguments)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/filetable.rs:78:6\n   |\n78 | impl<'a> FileItem {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n   = note: `#[warn(clippy::extra_unused_lifetimes)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual implementation of an assign operation\n   --> kernel/src/tasks/filetable.rs:210:13\n    |\n210 |             ptr = ptr + current_len;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `ptr += current_len`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n    = note: `#[warn(clippy::assign_op_pattern)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:333:12\n    |\n333 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:349:12\n    |\n349 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/filetable.rs:374:12\n    |\n374 |         if buffer.len() == 0 {\n    |            ^^^^^^^^^^^^^^^^^ help: using `is_empty` is clearer and more explicit: `buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/filetable.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n   --> kernel/src/tasks/filetable.rs:378:47\n    |\n378 |         WaitBlockingWrite(self.inner.clone(), &buffer, offset)\n    |                                               ^^^^^^^ help: change this to: `buffer`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `hashbrown::hash_map::Values<'_, usize, alloc::sync::Weak<dyn executor::AsyncTask>>`\n  --> kernel/src/tasks/initproc.rs:59:5\n   |\n59 |     TASK_MAP.lock().values().into_iter().for_each(|task| {\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider removing `.into_iter()`: `TASK_MAP.lock().values()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unneeded `return` statement\n   --> kernel/src/tasks/initproc.rs:118:5\n    |\n118 |     return true;\n    |     ^^^^^^^^^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_return\nhelp: remove `return`\n    |\n118 -     return true;\n118 +     true\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:122:41\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                         ^^^ help: try using a `char` instead: `' '`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: comparison to empty slice\n   --> kernel/src/tasks/initproc.rs:122:57\n    |\n122 |     let mut args: Vec<&str> = cmd.split(\" \").filter(|x| *x != \"\").collect();\n    |                                                         ^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!x.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#comparison_to_empty\n    = note: `#[warn(clippy::comparison_to_empty)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: single-character string constant used as pattern\n   --> kernel/src/tasks/initproc.rs:125:47\n    |\n125 |     let filename = match filename.starts_with(\"/\") {\n    |                                               ^^^ help: try using a `char` instead: `'/'`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_char_pattern\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:184:19\n    |\n184 |             match c as u8 {\n    |                   ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: unnecessary use of `to_string`\n   --> kernel/src/tasks/initproc.rs:187:40\n    |\n187 |                     let sign = command(&String::from_utf8_lossy(&buffer).to_string()).await;\n    |                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use: `String::from_utf8_lossy(&buffer).as_ref()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_to_owned\n    = note: `#[warn(clippy::unnecessary_to_owned)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: length comparison to zero\n   --> kernel/src/tasks/initproc.rs:195:24\n    |\n195 |                     if buffer.len() > 0 {\n    |                        ^^^^^^^^^^^^^^^^ help: using `!is_empty` is clearer and more explicit: `!buffer.is_empty()`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#len_zero\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:204:33\n    |\n204 |                     buffer.push(c as u8);\n    |                                 ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: casting to the same type is unnecessary (`u8` -> `u8`)\n   --> kernel/src/tasks/initproc.rs:205:43\n    |\n205 |                     DebugConsole::putchar(c as u8);\n    |                                           ^^^^^^^ help: try: `c`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_cast\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/initproc.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_none()` after searching an `Iterator` with `find`\n   --> kernel/src/tasks/initproc.rs:400:8\n    |\n400 |       if TASK_MAP\n    |  ________^\n401 | |         .lock()\n402 | |         .values()\n403 | |         .find(|x| {\n...   |\n407 | |         })\n408 | |         .is_none()\n    | |__________________^\n    |\n    = help: this is more succinctly expressed by calling `any()` with negation\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this lifetime isn't used in the impl\n  --> kernel/src/tasks/memset.rs:32:6\n   |\n32 | impl<'a> MemSet {\n   |      ^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#extra_unused_lifetimes\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: called `is_some()` after searching an `Iterator` with `find`\n  --> kernel/src/tasks/memset.rs:38:23\n   |\n38 |         self.0.iter().find(|x| x.overlapping(start, end)).is_some()\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `any()` instead: `any(|x| x.overlapping(start, end))`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#search_is_some\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: returning the result of a `let` binding from a block\n   --> kernel/src/tasks/memset.rs:111:9\n    |\n109 | /         let res =\n110 | |             !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end));\n    | |____________________________________________________________________________________________________- unnecessary `let` binding\n111 |           res\n    |           ^^^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return\n    = note: `#[warn(clippy::let_and_return)]` on by default\nhelp: return the expression directly\n    |\n109 ~         \n110 ~         !((start <= self.start && end <= self.start) || (start >= self_end && end >= self_end))\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/memset.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: you seem to be trying to use `match` for an equality check. Consider using `if`\n   --> kernel/src/tasks/memset.rs:213:9\n    |\n213 | /         match &self.mtype {\n214 | |             MemType::ShareFile => {\n215 | |                 let start = self.start;\n216 | |                 let len = self.len;\n...   |\n232 | |             _ => {}\n233 | |         }\n    | |_________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#single_match\n    = note: `#[warn(clippy::single_match)]` on by default\nhelp: try\n    |\n213 ~         if self.mtype == MemType::ShareFile {\n214 +             let start = self.start;\n215 +             let len = self.len;\n216 +             let mapfile = self.file.clone().unwrap();\n217 +             for tracker in &self.mtrackers {\n218 +                 if Arc::strong_count(&tracker.tracker) > 1 {\n219 +                     continue;\n220 +                 }\n221 + \n222 +                 let offset = tracker.vpn.to_addr() - start;\n223 +                 let wlen = min(len - offset, PAGE_SIZE);\n224 + \n225 +                 let bytes = &mut tracker.tracker.0.get_buffer()[..wlen];\n226 +                 mapfile\n227 +                     .writeat(offset, bytes)\n228 +                     .expect(\"can't write data to file at drop\");\n229 +             }\n230 +         }\n    |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/shm.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: equality checks against true are unnecessary\n  --> kernel/src/tasks/shm.rs:30:49\n   |\n30 |         if Arc::strong_count(&self.mem) == 1 && *self.mem.deleted.lock() == true {\n   |                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try simplifying it as shown: `*self.mem.deleted.lock()`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#bool_comparison\n   = note: `#[warn(clippy::bool_comparison)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this function has too many arguments (8/7)\n   --> kernel/src/tasks/task.rs:139:5\n    |\n139 | /     pub fn map_frames(\n140 | |         &self,\n141 | |         vpn: VirtPage,\n142 | |         mtype: MemType,\n...   |\n147 | |         len: usize,\n148 | |     ) -> Option<PhysPage> {\n    | |_________________________^\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/task.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigProcMask` which implements the `Copy` trait\n   --> kernel/src/tasks/task.rs:358:22\n    |\n358 |             sigmask: parent_tcb.sigmask.clone(),\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `parent_tcb.sigmask`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: manual `RangeInclusive::contains` implementation\n  --> kernel/src/tasks/mod.rs:57:20\n   |\n57 |                 if c >= 0x20 && c <= 0x7e {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^ help: use: `(0x20..=0x7e).contains(&c)`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_range_contains\n   = note: `#[warn(clippy::manual_range_contains)]` on by default\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/tasks/mod.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: name `TMS` contains a capitalized acronym\n   --> kernel/src/tasks/mod.rs:125:12\n    |\n125 | pub struct TMS {\n    |            ^^^ help: consider making the acronym lowercase, except the initial letter: `Tms`\n    |\n    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#upper_case_acronyms\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: using `clone` on type `SigAction` which implements the `Copy` trait\n  --> kernel/src/user/signal.rs:28:25\n   |\n28 |         let sigaction = self.task.pcb.lock().sigaction[signal.num()].clone();\n   |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `self.task.pcb.lock().sigaction[signal.num()]`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/user/signal.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: this expression creates a reference which is immediately dereferenced by the compiler\n  --> kernel/src/user/signal.rs:65:22\n   |\n65 |         cx.store_ctx(&cx_ref);\n   |                      ^^^^^^^ help: change this to: `cx_ref`\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/user/socket_pair.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: useless conversion to the same type: `core::iter::Enumerate<alloc::collections::vec_deque::Drain<'_, u8>>`\n  --> kernel/src/user/socket_pair.rs:26:9\n   |\n26 | /         queue\n27 | |             .drain(..rlen)\n28 | |             .enumerate()\n29 | |             .into_iter()\n   | |________________________^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_conversion\nhelp: consider removing `.into_iter()`\n   |\n26 ~         queue\n27 +             .drain(..rlen)\n28 +             .enumerate()\n   |\n\n"
    },
    {
      "cmd_idx": 40,
      "file": "kernel/src/main.rs",
      "kind": "Clippy(Warn)",
      "raw": "warning: matching on `Some` with `ok()` is redundant\n  --> kernel/src/main.rs:79:13\n   |\n79 |             if let Some(task) = current_task().downcast_arc::<UserTask>().ok() {\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n   |\n   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#match_result_ok\n   = note: `#[warn(clippy::match_result_ok)]` on by default\nhelp: consider matching on `Ok(task)` and removing the call to `ok` instead\n   |\n79 |             if let Ok(task) = current_task().downcast_arc::<UserTask>() {\n   |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n"
    },
    {
      "cmd_idx": 41,
      "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (94 crate dependencies)\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── logging 0.1.0\n    │   ├── kernel 0.1.0\n    │   ├── fs 0.1.0\n    │   │   └── kernel 0.1.0\n    │   └── devfs 0.1.0\n    │       └── fs 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    └── devfs 0.1.0\n\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.11.1\n    └── polyhal 0.1.3\n        ├── ramfs 0.1.0\n        │   └── fs 0.1.0\n        │       └── kernel 0.1.0\n        ├── logging 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devfs 0.1.0\n        │       └── fs 0.1.0\n        ├── kernel 0.1.0\n        ├── hal 0.1.0\n        │   ├── kernel 0.1.0\n        │   └── devfs 0.1.0\n        ├── frame_allocator 0.1.0\n        │   ├── ramfs 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── hal 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devices 0.1.0\n        │       ├── ns16550a 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── logging 0.1.0\n        │       ├── kvirtio 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kramdisk 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kgoldfish-rtc 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kernel 0.1.0\n        │       ├── general-plic 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── fs 0.1.0\n        │       └── devfs 0.1.0\n        ├── executor 0.1.0\n        │   └── kernel 0.1.0\n        └── devices 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 94\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 42,
      "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (94 crate dependencies)\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── logging 0.1.0\n    │   ├── kernel 0.1.0\n    │   ├── fs 0.1.0\n    │   │   └── kernel 0.1.0\n    │   └── devfs 0.1.0\n    │       └── fs 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    └── devfs 0.1.0\n\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.11.1\n    └── polyhal 0.1.3\n        ├── ramfs 0.1.0\n        │   └── fs 0.1.0\n        │       └── kernel 0.1.0\n        ├── logging 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devfs 0.1.0\n        │       └── fs 0.1.0\n        ├── kernel 0.1.0\n        ├── hal 0.1.0\n        │   ├── kernel 0.1.0\n        │   └── devfs 0.1.0\n        ├── frame_allocator 0.1.0\n        │   ├── ramfs 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── hal 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devices 0.1.0\n        │       ├── ns16550a 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── logging 0.1.0\n        │       ├── kvirtio 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kramdisk 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kgoldfish-rtc 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kernel 0.1.0\n        │       ├── general-plic 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── fs 0.1.0\n        │       └── devfs 0.1.0\n        ├── executor 0.1.0\n        │   └── kernel 0.1.0\n        └── devices 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 94\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 43,
      "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (94 crate dependencies)\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── logging 0.1.0\n    │   ├── kernel 0.1.0\n    │   ├── fs 0.1.0\n    │   │   └── kernel 0.1.0\n    │   └── devfs 0.1.0\n    │       └── fs 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    └── devfs 0.1.0\n\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.11.1\n    └── polyhal 0.1.3\n        ├── ramfs 0.1.0\n        │   └── fs 0.1.0\n        │       └── kernel 0.1.0\n        ├── logging 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devfs 0.1.0\n        │       └── fs 0.1.0\n        ├── kernel 0.1.0\n        ├── hal 0.1.0\n        │   ├── kernel 0.1.0\n        │   └── devfs 0.1.0\n        ├── frame_allocator 0.1.0\n        │   ├── ramfs 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── hal 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devices 0.1.0\n        │       ├── ns16550a 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── logging 0.1.0\n        │       ├── kvirtio 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kramdisk 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kgoldfish-rtc 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kernel 0.1.0\n        │       ├── general-plic 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── fs 0.1.0\n        │       └── devfs 0.1.0\n        ├── executor 0.1.0\n        │   └── kernel 0.1.0\n        └── devices 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 94\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 44,
      "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (94 crate dependencies)\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── logging 0.1.0\n    │   ├── kernel 0.1.0\n    │   ├── fs 0.1.0\n    │   │   └── kernel 0.1.0\n    │   └── devfs 0.1.0\n    │       └── fs 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    └── devfs 0.1.0\n\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.11.1\n    └── polyhal 0.1.3\n        ├── ramfs 0.1.0\n        │   └── fs 0.1.0\n        │       └── kernel 0.1.0\n        ├── logging 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devfs 0.1.0\n        │       └── fs 0.1.0\n        ├── kernel 0.1.0\n        ├── hal 0.1.0\n        │   ├── kernel 0.1.0\n        │   └── devfs 0.1.0\n        ├── frame_allocator 0.1.0\n        │   ├── ramfs 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── hal 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devices 0.1.0\n        │       ├── ns16550a 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── logging 0.1.0\n        │       ├── kvirtio 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kramdisk 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kgoldfish-rtc 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kernel 0.1.0\n        │       ├── general-plic 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── fs 0.1.0\n        │       └── devfs 0.1.0\n        ├── executor 0.1.0\n        │   └── kernel 0.1.0\n        └── devices 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 94\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 45,
      "file": "/home/runner/check/batch_1/Byte-OS/ByteOS/Cargo.lock",
      "kind": "Audit",
      "raw": "    Fetching advisory database from `https://github.com/RustSec/advisory-db.git`\n      Loaded 732 security advisories (from /home/runner/.cargo/advisory-db)\n    Updating crates.io index\n    Scanning Cargo.lock for vulnerabilities (94 crate dependencies)\nCrate:     linkme\nVersion:   0.3.22\nWarning:   unsound\nTitle:     Fails to ensure slice elements match the slice's declared type\nDate:      2024-03-05\nID:        RUSTSEC-2024-0407\nURL:       https://rustsec.org/advisories/RUSTSEC-2024-0407\nDependency tree:\nlinkme 0.3.22\n└── devices 0.1.0\n    ├── ns16550a 0.1.0\n    │   └── kernel 0.1.0\n    ├── logging 0.1.0\n    │   ├── kernel 0.1.0\n    │   ├── fs 0.1.0\n    │   │   └── kernel 0.1.0\n    │   └── devfs 0.1.0\n    │       └── fs 0.1.0\n    ├── kvirtio 0.1.0\n    │   └── kernel 0.1.0\n    ├── kramdisk 0.1.0\n    │   └── kernel 0.1.0\n    ├── kgoldfish-rtc 0.1.0\n    │   └── kernel 0.1.0\n    ├── kernel 0.1.0\n    ├── general-plic 0.1.0\n    │   └── kernel 0.1.0\n    ├── fs 0.1.0\n    └── devfs 0.1.0\n\nCrate:     ahash\nVersion:   0.8.3\nWarning:   yanked\nDependency tree:\nahash 0.8.3\n└── hashbrown 0.14.0\n    ├── kernel 0.1.0\n    └── executor 0.1.0\n        └── kernel 0.1.0\n\nCrate:     critical-section\nVersion:   1.1.2\nWarning:   yanked\nDependency tree:\ncritical-section 1.1.2\n└── riscv 0.11.1\n    └── polyhal 0.1.3\n        ├── ramfs 0.1.0\n        │   └── fs 0.1.0\n        │       └── kernel 0.1.0\n        ├── logging 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devfs 0.1.0\n        │       └── fs 0.1.0\n        ├── kernel 0.1.0\n        ├── hal 0.1.0\n        │   ├── kernel 0.1.0\n        │   └── devfs 0.1.0\n        ├── frame_allocator 0.1.0\n        │   ├── ramfs 0.1.0\n        │   ├── kernel 0.1.0\n        │   ├── hal 0.1.0\n        │   ├── fs 0.1.0\n        │   └── devices 0.1.0\n        │       ├── ns16550a 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── logging 0.1.0\n        │       ├── kvirtio 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kramdisk 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kgoldfish-rtc 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── kernel 0.1.0\n        │       ├── general-plic 0.1.0\n        │       │   └── kernel 0.1.0\n        │       ├── fs 0.1.0\n        │       └── devfs 0.1.0\n        ├── executor 0.1.0\n        │   └── kernel 0.1.0\n        └── devices 0.1.0\n\nwarning: 3 allowed warnings found\n\n{\n  \"database\": {\n    \"advisory-count\": 732,\n    \"last-commit\": \"ddccfe8aced779f7b54d27bbe7e122ecb1dda33a\",\n    \"last-updated\": \"2025-02-14T08:11:43Z\"\n  },\n  \"lockfile\": {\n    \"dependency-count\": 94\n  },\n  \"settings\": {\n    \"target_arch\": [],\n    \"target_os\": [],\n    \"severity\": null,\n    \"ignore\": [],\n    \"informational_warnings\": [\n      \"unmaintained\",\n      \"unsound\",\n      \"notice\"\n    ]\n  },\n  \"vulnerabilities\": {\n    \"found\": false,\n    \"count\": 0,\n    \"list\": []\n  },\n  \"warnings\": {\n    \"unsound\": [\n      {\n        \"kind\": \"unsound\",\n        \"package\": {\n          \"name\": \"linkme\",\n          \"version\": \"0.3.22\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"8b53ad6a33de58864705954edb5ad5d571a010f9e296865ed43dc72a5621b430\",\n          \"dependencies\": [\n            {\n              \"name\": \"linkme-impl\",\n              \"version\": \"0.3.22\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": {\n          \"id\": \"RUSTSEC-2024-0407\",\n          \"package\": \"linkme\",\n          \"title\": \"Fails to ensure slice elements match the slice's declared type\",\n          \"description\": \"Affected versions allow populating a DistributedSlice of T with elements of an\\narbitrary other type that coerces to T. For example, elements of type `&&str`\\ncould end up in a slice of type `[&str]`, since `&&str` coerces to `&str` via a\\nderef coercion.\\n\\nThe flaw was corrected by implementing typechecking for distributed slice\\nelements in such a way that coercion no longer occurs. The element's type must\\nbe a subtype of the slice's declared element type.\",\n          \"date\": \"2024-03-05\",\n          \"aliases\": [],\n          \"related\": [],\n          \"collection\": \"crates\",\n          \"categories\": [],\n          \"keywords\": [],\n          \"cvss\": null,\n          \"informational\": \"unsound\",\n          \"references\": [],\n          \"source\": null,\n          \"url\": \"https://github.com/dtolnay/linkme/issues/82\",\n          \"withdrawn\": null,\n          \"license\": \"CC0-1.0\"\n        },\n        \"affected\": null,\n        \"versions\": {\n          \"patched\": [\n            \">=0.3.24\"\n          ],\n          \"unaffected\": []\n        }\n      }\n    ],\n    \"yanked\": [\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"ahash\",\n          \"version\": \"0.8.3\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"2c99f64d1e06488f620f932677e24bc6e2897582980441ae90a671415bd7ec2f\",\n          \"dependencies\": [\n            {\n              \"name\": \"cfg-if\",\n              \"version\": \"1.0.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"once_cell\",\n              \"version\": \"1.19.0\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            },\n            {\n              \"name\": \"version_check\",\n              \"version\": \"0.9.4\",\n              \"source\": \"registry+https://github.com/rust-lang/crates.io-index\"\n            }\n          ],\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      },\n      {\n        \"kind\": \"yanked\",\n        \"package\": {\n          \"name\": \"critical-section\",\n          \"version\": \"1.1.2\",\n          \"source\": \"registry+https://github.com/rust-lang/crates.io-index\",\n          \"checksum\": \"7059fff8937831a9ae6f0fe4d658ffabf58f2ca96aa9dec1c889f936f705f216\",\n          \"replace\": null\n        },\n        \"advisory\": null,\n        \"affected\": null,\n        \"versions\": null\n      }\n    ]\n  }\n}"
    },
    {
      "cmd_idx": 56,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel, checker=Outdated\ntoolchain=nightly-2023-12-01, target=x86_64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:46:22.283341138 +08:00:00\n\nName             Project  Compat   Latest   Kind    Platform\n----             -------  ------   ------   ----    --------\nasync-recursion  1.1.0    1.1.1    1.1.1    Normal  ---\nbitflags         2.4.2    2.8.0    2.8.0    Normal  ---\nfutures-lite     1.13.0   ---      2.6.0    Normal  ---\nhashbrown        0.14.0   0.14.5   0.15.2   Normal  ---\nlog              0.4.17   0.4.25   0.4.25   Normal  ---\nnum-derive       0.4.0    0.4.2    0.4.2    Normal  ---\nnum-traits       0.2.16   0.2.19   0.2.19   Normal  ---\nserde            1.0.188  1.0.217  1.0.217  Build   ---\nserde_derive     1.0.188  1.0.217  1.0.217  Build   ---\ntoml             0.5.11   ---      0.8.20   Build   ---\nxmas-elf         0.9.0    0.9.1    0.9.1    Normal  ---\n"
    },
    {
      "cmd_idx": 57,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel, checker=Outdated\ntoolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:46:19.51745077 +08:00:00\n\nName             Project  Compat   Latest   Kind    Platform\n----             -------  ------   ------   ----    --------\nasync-recursion  1.1.0    1.1.1    1.1.1    Normal  ---\nbitflags         2.4.2    2.8.0    2.8.0    Normal  ---\nfutures-lite     1.13.0   ---      2.6.0    Normal  ---\nhashbrown        0.14.0   0.14.5   0.15.2   Normal  ---\nlog              0.4.17   0.4.25   0.4.25   Normal  ---\nnum-derive       0.4.0    0.4.2    0.4.2    Normal  ---\nnum-traits       0.2.16   0.2.19   0.2.19   Normal  ---\nserde            1.0.188  1.0.217  1.0.217  Build   ---\nserde_derive     1.0.188  1.0.217  1.0.217  Build   ---\ntoml             0.5.11   ---      0.8.20   Build   ---\nxmas-elf         0.9.0    0.9.1    0.9.1    Normal  ---\n"
    },
    {
      "cmd_idx": 58,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel, checker=Outdated\ntoolchain=nightly-2023-12-01, target=riscv64gc-unknown-none-elf\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:46:16.744440041 +08:00:00\n\nName             Project  Compat   Latest   Kind    Platform\n----             -------  ------   ------   ----    --------\nasync-recursion  1.1.0    1.1.1    1.1.1    Normal  ---\nbitflags         2.4.2    2.8.0    2.8.0    Normal  ---\nfutures-lite     1.13.0   ---      2.6.0    Normal  ---\nhashbrown        0.14.0   0.14.5   0.15.2   Normal  ---\nlog              0.4.17   0.4.25   0.4.25   Normal  ---\nnum-derive       0.4.0    0.4.2    0.4.2    Normal  ---\nnum-traits       0.2.16   0.2.19   0.2.19   Normal  ---\nserde            1.0.188  1.0.217  1.0.217  Build   ---\nserde_derive     1.0.188  1.0.217  1.0.217  Build   ---\ntoml             0.5.11   ---      0.8.20   Build   ---\nxmas-elf         0.9.0    0.9.1    0.9.1    Normal  ---\n"
    },
    {
      "cmd_idx": 59,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel, checker=Outdated\ntoolchain=nightly-2023-12-01, target=loongarch64-unknown-none\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:46:14.32552504 +08:00:00\n\nName             Project  Compat   Latest   Kind    Platform\n----             -------  ------   ------   ----    --------\nasync-recursion  1.1.0    1.1.1    1.1.1    Normal  ---\nbitflags         2.4.2    2.8.0    2.8.0    Normal  ---\nfutures-lite     1.13.0   ---      2.6.0    Normal  ---\nhashbrown        0.14.0   0.14.5   0.15.2   Normal  ---\nlog              0.4.17   0.4.25   0.4.25   Normal  ---\nnum-derive       0.4.0    0.4.2    0.4.2    Normal  ---\nnum-traits       0.2.16   0.2.19   0.2.19   Normal  ---\nserde            1.0.188  1.0.217  1.0.217  Build   ---\nserde_derive     1.0.188  1.0.217  1.0.217  Build   ---\ntoml             0.5.11   ---      0.8.20   Build   ---\nxmas-elf         0.9.0    0.9.1    0.9.1    Normal  ---\n"
    },
    {
      "cmd_idx": 60,
      "file": "[outdated direct dependencies]",
      "kind": "Outdated",
      "raw": "pkg=kernel, checker=Outdated\ntoolchain=nightly-2023-12-01, target=aarch64-unknown-none-softfloat\nfeatures=\npkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\ncmd=cargo +nightly-2025-01-26-x86_64-unknown-linux-gnu outdated -R --exit-code=2\ntimestamp=2025-02-16 21:46:11.413933148 +08:00:00\n\nName             Project  Compat   Latest   Kind    Platform\n----             -------  ------   ------   ----    --------\nasync-recursion  1.1.0    1.1.1    1.1.1    Normal  ---\nbitflags         2.4.2    2.8.0    2.8.0    Normal  ---\nfutures-lite     1.13.0   ---      2.6.0    Normal  ---\nhashbrown        0.14.0   0.14.5   0.15.2   Normal  ---\nlog              0.4.17   0.4.25   0.4.25   Normal  ---\nnum-derive       0.4.0    0.4.2    0.4.2    Normal  ---\nnum-traits       0.2.16   0.2.19   0.2.19   Normal  ---\nserde            1.0.188  1.0.217  1.0.217  Build   ---\nserde_derive     1.0.188  1.0.217  1.0.217  Build   ---\ntoml             0.5.11   ---      0.8.20   Build   ---\nxmas-elf         0.9.0    0.9.1    0.9.1    Normal  ---\n"
    },
    {
      "cmd_idx": 61,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2023-12-01, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 21:45:51.314002043 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling log v0.4.17\n    Checking bitflags v2.4.2\n    Checking static_assertions v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling riscv v0.11.1\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.1.2\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.2\n    Checking fdt v0.1.5\n   Compiling quote v1.0.35\n    Checking spin v0.9.8\n   Compiling syn v2.0.48\n    Checking bit_field v0.10.2\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking byteorder v1.4.3\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n   Compiling serde v1.0.188\n   Compiling version_check v0.9.4\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n    Checking once_cell v1.19.0\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n13:45:56|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 62,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-02-16 21:45:56.102903673 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n    Checking cfg-if v1.0.0\n   Compiling log v0.4.17\n    Checking scopeguard v1.1.0\n    Checking bitflags v2.4.2\n    Checking static_assertions v1.1.0\n   Compiling riscv v0.11.1\n   Compiling lock_api v0.4.9\n    Checking sbi-spec v0.0.4\n    Checking critical-section v1.1.2\n    Checking embedded-hal v1.0.0\n    Checking sbi-rt v0.0.2\n   Compiling quote v1.0.35\n    Checking spin v0.9.8\n   Compiling syn v2.0.48\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking fdt v0.1.5\n    Checking bit_field v0.10.2\n    Checking byteorder v1.4.3\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n   Compiling version_check v0.9.4\n   Compiling serde v1.0.188\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n    Checking once_cell v1.19.0\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n13:46:00|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 63,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 21:45:32.312313614 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling scopeguard v1.1.0\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling tock-registers v0.8.1\n   Compiling arm_pl011 v0.1.0\n[2025-02-16T13:45:32Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T13:45:32Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling arm_gicv2 v0.1.0\n   Compiling aarch64-cpu v9.4.0\n   Compiling spin v0.9.8\n   Compiling polyhal-macro v0.1.3\n   Compiling fdt v0.1.5\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling bit_field v0.10.2\n   Compiling zerocopy-derive v0.7.32\n   Compiling byteorder v1.4.3\n   Compiling linkme-impl v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling zerocopy v0.7.32\n   Compiling ahash v0.8.3\n   Compiling num_enum_derive v0.6.1\n   Compiling linkme v0.3.22\n   Compiling once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 64,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target x86_64-unknown-none \n// timestamp=2025-02-16 21:46:00.94747061 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling log v0.4.17\n    Checking bitflags v2.4.2\n    Checking bitflags v1.3.2\n   Compiling paste v1.0.14\n   Compiling lock_api v0.4.9\n    Checking bit_field v0.10.2\n   Compiling rustversion v1.0.12\n   Compiling quote v1.0.35\n    Checking spin v0.9.8\n   Compiling syn v2.0.48\n    Checking raw-cpuid v10.7.0\n    Checking volatile v0.4.6\n   Compiling x86 v0.52.0\n    Checking bit v0.1.1\n    Checking multiboot v0.8.0\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking x86_64 v0.14.10\n    Checking raw-cpuid v11.0.1\n    Checking x2apic v0.4.3\n    Checking fdt v0.1.5\n    Checking byteorder v1.4.3\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n   Compiling version_check v0.9.4\n   Compiling serde v1.0.188\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling futures-core v0.3.28\n    Checking once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n13:46:07|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 65,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64imac-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64imac-unknown-none-elf \n// timestamp=2025-02-16 21:45:38.689793561 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling static_assertions v1.1.0\n   Compiling riscv v0.11.1\n   Compiling sbi-spec v0.0.4\n[2025-02-16T13:45:38Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T13:45:38Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling critical-section v1.1.2\n   Compiling embedded-hal v1.0.0\n   Compiling sbi-rt v0.0.2\n   Compiling fdt v0.1.5\n   Compiling spin v0.9.8\n   Compiling bit_field v0.10.2\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling byteorder v1.4.3\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling zerocopy v0.7.32\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling polyhal v0.1.3 (https://github.com/Byte-OS/polyhal.git#5b890102)\n   Compiling num-traits v0.2.16\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/boot/riscv64.rs:39:5\n   |\n39 | /     core::arch::asm!(\n40 | |         // Chcek boot core\n41 | |         \"\n42 | |             beqz    a0, 2f\n...  |\n75 | |         options(noreturn),\n76 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/boot/riscv64.rs:85:5\n    |\n85  | /     core::arch::asm!(\n86  | |         // 1. Set Stack Pointer.\n87  | |         // sp = a1(given Stack Pointer.)\n88  | |         \"\n...   |\n115 | |         options(noreturn)\n116 | |     );\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/riscv64.rs:151:5\n    |\n151 | /     core::arch::asm!(\n152 | |         // Save Kernel Context.\n153 | |         save_callee_regs!(),\n154 | |         // Restore Kernel Context.\n...   |\n158 | |         options(noreturn)\n159 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/riscv64.rs:183:5\n    |\n183 | /     core::arch::asm!(\n184 | |         // Save Kernel Context.\n185 | |         save_callee_regs!(),\n186 | |         // Switch to new page table.\n...   |\n198 | |         options(noreturn)\n199 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/riscv64.rs:205:9\n    |\n205 | /         asm!(\n206 | |             \"\n207 | |                 mv      a0, tp\n208 | |                 ret\n209 | |             \",\n210 | |             options(noreturn)\n211 | |         )\n    | |_________^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/riscv64.rs:139:5\n    |\n139 | /     asm!(\n140 | |         // 宏定义\n141 | |         r\"\n142 | |             .align 4\n...   |\n162 | |         options(noreturn)\n163 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/riscv64.rs:170:9\n    |\n170 | /         asm!(\n171 | |             r\"\n172 | |                 .align 4\n173 | |                 .altmacro\n...   |\n210 | |             options(noreturn)\n211 | |         )\n    | |_________^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/riscv64.rs:219:5\n    |\n219 | /     asm!(\n220 | |         r\"\n221 | |         .altmacro\n222 | |     \",\n...   |\n259 | |         options(noreturn)\n260 | |     );\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\n   Compiling num_enum v0.6.1\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `polyhal` (lib) due to 8 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 66,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=x86_64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target x86_64-unknown-none \n// timestamp=2025-02-16 21:45:35.524718485 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling bitflags v1.3.2\n   Compiling rustversion v1.0.12\n[2025-02-16T13:45:35Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T13:45:35Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bit_field v0.10.2\n   Compiling paste v1.0.14\n   Compiling spin v0.9.8\n   Compiling raw-cpuid v10.7.0\n   Compiling volatile v0.4.6\n   Compiling x86 v0.52.0\n   Compiling bit v0.1.1\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling raw-cpuid v11.0.1\n   Compiling multiboot v0.8.0\n   Compiling x86_64 v0.14.10\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.10/src/addr.rs:348:51\n    |\n348 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&addr::VirtAddr, &addr::VirtAddr) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n348 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n   Compiling fdt v0.1.5\nerror[E0053]: method `steps_between` has an incompatible type for trait\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.10/src/structures/paging/page.rs:272:51\n    |\n272 |     fn steps_between(start: &Self, end: &Self) -> Option<usize> {\n    |                                                   ^^^^^^^^^^^^^ expected `(usize, Option<usize>)`, found `core::option::Option<usize>`\n    |\n    = note: expected signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> (usize, core::option::Option<usize>)`\n               found signature `fn(&structures::paging::page::Page<_>, &structures::paging::page::Page<_>) -> core::option::Option<usize>`\nhelp: change the output type to match the trait\n    |\n272 |     fn steps_between(start: &Self, end: &Self) -> (usize, core::option::Option<usize>) {\n    |                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0599]: `(usize, core::option::Option<usize>)` is not an iterator\n   --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/x86_64-0.14.10/src/structures/paging/page.rs:274:14\n    |\n273 | /         Step::steps_between(&start.start_address, &end.start_address)\n274 | |             .map(|steps| steps / S::SIZE as usize)\n    | |             -^^^ `(usize, core::option::Option<usize>)` is not an iterator\n    | |_____________|\n    |\n    |\n    = note: the following trait bounds were not satisfied:\n            `(usize, core::option::Option<usize>): core::iter::Iterator`\n            which is required by `&mut (usize, core::option::Option<usize>): core::iter::Iterator`\n\n   Compiling byteorder v1.4.3\nSome errors have detailed explanations: E0053, E0599.\nFor more information about an error, try `rustc --explain E0053`.\nerror: could not compile `x86_64` (lib) due to 3 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 67,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target loongarch64-unknown-none \n// timestamp=2025-02-16 21:45:46.652434625 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling log v0.4.17\n    Checking bitflags v2.4.2\n    Checking bitflags v1.3.2\n    Checking bit_field v0.10.2\n   Compiling lock_api v0.4.9\n    Checking fdt v0.1.5\n    Checking loongArch64 v0.2.4\n    Checking byteorder v1.4.3\n   Compiling quote v1.0.35\n    Checking spin v0.9.8\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling syn v2.0.48\n   Compiling version_check v0.9.4\n   Compiling serde v1.0.188\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling futures-core v0.3.28\n    Checking once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n13:45:51|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 68,
      "file": "(virtual) rapx",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Rapx\n// toolchain=nightly-2023-12-01, target=aarch64-unknown-none-softfloat\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-10-12 rapx -F -M -- --target aarch64-unknown-none-softfloat \n// timestamp=2025-02-16 21:45:41.560231639 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n    Checking cfg-if v1.0.0\n    Checking scopeguard v1.1.0\n   Compiling log v0.4.17\n    Checking bitflags v2.4.2\n    Checking tock-registers v0.8.1\n   Compiling lock_api v0.4.9\n    Checking fdt v0.1.5\n    Checking arm_pl011 v0.1.0\n    Checking arm_gicv2 v0.1.0\n    Checking aarch64-cpu v9.4.0\n   Compiling quote v1.0.35\n    Checking spin v0.9.8\n   Compiling syn v2.0.48\n    Checking sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n    Checking bit_field v0.10.2\n    Checking byteorder v1.4.3\n    Checking timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n    Checking downcast-rs v1.2.0\n   Compiling version_check v0.9.4\n   Compiling serde v1.0.188\n    Checking vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling ahash v0.8.3\n   Compiling num-traits v0.2.16\n   Compiling futures-core v0.3.28\n    Checking once_cell v1.19.0\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n13:45:46|RAP|ERROR|: Finished with non-zero exit code.\n"
    },
    {
      "cmd_idx": 69,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=riscv64gc-unknown-none-elf\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target riscv64gc-unknown-none-elf \n// timestamp=2025-02-16 21:45:27.330864772 +08:00:00\n   Compiling proc-macro2 v1.0.78\n   Compiling unicode-ident v1.0.8\n   Compiling autocfg v1.1.0\n   Compiling cfg-if v1.0.0\n   Compiling log v0.4.17\n   Compiling scopeguard v1.1.0\n   Compiling bitflags v2.4.2\n[2025-02-16T13:45:27Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T13:45:27Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling riscv v0.11.1\n   Compiling static_assertions v1.1.0\n   Compiling sbi-spec v0.0.4\n   Compiling embedded-hal v1.0.0\n   Compiling lock_api v0.4.9\n   Compiling critical-section v1.1.2\n   Compiling sbi-rt v0.0.2\n   Compiling fdt v0.1.5\n   Compiling quote v1.0.35\n   Compiling spin v0.9.8\n   Compiling syn v2.0.48\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling bit_field v0.10.2\n   Compiling byteorder v1.4.3\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling downcast-rs v1.2.0\n   Compiling serde v1.0.188\n   Compiling version_check v0.9.4\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\n   Compiling ahash v0.8.3\n   Compiling once_cell v1.19.0\n   Compiling futures-core v0.3.28\nerror[E0635]: unknown feature `stdsimd`\n  --> /home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/ahash-0.8.3/src/lib.rs:99:42\n   |\n99 | #![cfg_attr(feature = \"stdsimd\", feature(stdsimd))]\n   |                                          ^^^^^^^\n\nFor more information about this error, try `rustc --explain E0635`.\nerror: could not compile `ahash` (lib) due to 1 previous error\nwarning: build failed, waiting for other jobs to finish...\n"
    },
    {
      "cmd_idx": 70,
      "file": "(virtual) lockbud",
      "kind": "Cargo",
      "raw": "// pkg_name=kernel, checker=Lockbud\n// toolchain=nightly-2023-12-01, target=loongarch64-unknown-none\n// features=\n// pkg_dir=/home/runner/check/batch_1/Byte-OS/ByteOS/kernel\n// cmd=cargo +nightly-2024-12-01 lockbud -k all -- --target loongarch64-unknown-none \n// timestamp=2025-02-16 21:45:40.02537308 +08:00:00\n   Compiling cfg-if v1.0.0\n   Compiling scopeguard v1.1.0\n   Compiling lock_api v0.4.9\n   Compiling log v0.4.17\n   Compiling bitflags v2.4.2\n   Compiling bit_field v0.10.2\n[2025-02-16T13:45:40Z WARN  lockbud::callbacks] [\n      {\n        \"AtomicityViolation\": {\n          \"bug_kind\": \"AtomicityViolation\",\n          \"possibility\": \"Possibly\",\n          \"diagnosis\": {\n            \"fn_name\": \"set_logger_racy\",\n            \"atomic_reader\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1522:11: 1522:39 (#0)\",\n            \"atomic_writer\": \"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/log-0.4.17/src/lib.rs:1525:13: 1525:55 (#0)\",\n            \"dep_kind\": \"Control\"\n          },\n          \"explanation\": \"atomic::store is data/control dependent on atomic::load\"\n        }\n      }\n    ]\n[2025-02-16T13:45:40Z WARN  lockbud::callbacks] crate log contains bugs: { probably: 0, possibly: 0 }, conflictlock: { probably: 0, possibly: 0 }, condvar_deadlock: { probably: 0, possibly: 0 }, atomicity_violation: { possibly: 1 }, invalid_free: { possibly: 0 }, use_after_free: { possibly: 0 }\n   Compiling bitflags v1.3.2\n   Compiling loongArch64 v0.2.4\n   Compiling fdt v0.1.5\n   Compiling byteorder v1.4.3\n   Compiling spin v0.9.8\n   Compiling zerocopy v0.7.32\n   Compiling sync v0.1.0 (https://github.com/Byte-OS/sync.git#8c5f094d)\n   Compiling linkme v0.3.22\n   Compiling timestamp v0.1.0 (https://github.com/Byte-OS/timestamp.git#0394ccfa)\n   Compiling polyhal v0.1.3 (https://github.com/Byte-OS/polyhal.git#5b890102)\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/boot/loongarch64.rs:22:5\n   |\n22 | /     core::arch::asm!(\"\n23 | |         ori         $t0, $zero, 0x1     # CSR_DMW1_PLV0\n24 | |         lu52i.d     $t0, $t0, -2048     # UC, PLV0, 0x8000 xxxx xxxx xxxx\n25 | |         csrwr       $t0, 0x180          # LOONGARCH_CSR_DMWIN0\n...  |\n62 | |         options(noreturn),\n63 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/boot/loongarch64.rs:73:5\n   |\n73 | /     core::arch::asm!(\n74 | |         \"\n75 | |         ori          $t0, $zero, 0x1     # CSR_DMW1_PLV0\n76 | |         lu52i.d      $t0, $t0, -2048     # UC, PLV0, 0x8000 xxxx xxxx xxxx\n...  |\n92 | |         entry = sym _rust_secondary_main,\n93 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/loongarch64.rs:135:5\n    |\n135 | /     core::arch::asm!(\n136 | |         // Save Kernel Context.\n137 | |         save_callee_regs!(),\n138 | |         // Restore Kernel Context.\n...   |\n142 | |         options(noreturn)\n143 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/loongarch64.rs:167:5\n    |\n167 | /     core::arch::asm!(\n168 | |         // Save Kernel Context.\n169 | |         save_callee_regs!(),\n170 | |         // Switch to new page table.\n...   |\n181 | |         options(noreturn)\n182 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/kcontext/loongarch64.rs:188:9\n    |\n188 | /         asm!(\n189 | |             \"\n190 | |                 move    $a0, $tp\n191 | |                 ret\n192 | |             \",\n193 | |             options(noreturn)\n194 | |         )\n    | |_________^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64.rs:109:5\n    |\n109 | /     core::arch::asm!(\n110 | |         \"\n111 | |             csrrd   $sp,  KSAVE_CTX\n112 | |             SAVE_REGS\n...   |\n132 | |         options(noreturn)\n133 | |     );\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64.rs:140:9\n    |\n140 | /         asm!(\n141 | |             r\"\n142 | |                 addi.d  $sp,  $sp, -13*8\n143 | |                 st.d    $ra,  $sp, 0*8\n...   |\n165 | |             options(noreturn)\n166 | |         )\n    | |_________^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64.rs:190:5\n    |\n190 | /     core::arch::asm!(\n191 | |         \"\n192 | |             .balign 4096\n193 | |                 // Check whether it was from user privilege.\n...   |\n216 | |         options(noreturn)\n217 | |     );\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64.rs:222:5\n    |\n222 | /     core::arch::asm!(\n223 | |         \"\n224 | |         .equ LA_CSR_PGDL,          0x19    /* Page table base address when VA[47] = 0 */\n225 | |         .equ LA_CSR_PGDH,          0x1a    /* Page table base address when VA[47] = 1 */\n...   |\n245 | |         options(noreturn)\n246 | |     );\n    | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n  --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64/unaligned.rs:61:5\n   |\n61 | /     core::arch::asm!(\n62 | |         \"\n63 | |             beqz    $a2, 5f\n...  |\n95 | |         options(noreturn)\n96 | |     )\n   | |_____^ consider using the `naked_asm!` macro instead\n\nerror[E0787]: the `asm!` macro is not allowed in naked functions\n   --> /home/runner/.cargo/git/checkouts/polyhal-b7d1defa7146e0b7/5b89010/src/components/trap/loongarch64/unaligned.rs:101:5\n    |\n101 | /     core::arch::asm!(\n102 | |         \"\n103 | |         beqz    $a2, 3f\n...   |\n121 | |         options(noreturn)\n122 | |     )\n    | |_____^ consider using the `naked_asm!` macro instead\n\n   Compiling downcast-rs v1.2.0\n   Compiling vfscore v0.1.0 (https://github.com/Byte-OS/vfscore.git#63092dfa)\n   Compiling num-traits v0.2.16\nFor more information about this error, try `rustc --explain E0787`.\nerror: could not compile `polyhal` (lib) due to 11 previous errors\nwarning: build failed, waiting for other jobs to finish...\n"
    }
  ]
}